{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "FeeInvalid",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FeeTooHigh",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidPool",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotFeeManager",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotPauser",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotVoter",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PoolAlreadyExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SameAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroFee",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token0",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token1",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bool",
						"name": "stable",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "PoolCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fee",
						"type": "uint256"
					}
				],
				"name": "SetCustomFee",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "feeManager",
						"type": "address"
					}
				],
				"name": "SetFeeManager",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "SetPauseState",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "pauser",
						"type": "address"
					}
				],
				"name": "SetPauser",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "SetVoter",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "allPoolsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "stable",
						"type": "bool"
					}
				],
				"name": "createPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					}
				],
				"name": "createPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pool",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_stable",
						"type": "bool"
					}
				],
				"name": "getFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					}
				],
				"name": "getPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenB",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "stable",
						"type": "bool"
					}
				],
				"name": "getPool",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					}
				],
				"name": "isPool",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pool",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "setCustomFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_stable",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"name": "setFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_feeManager",
						"type": "address"
					}
				],
				"name": "setFeeManager",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_state",
						"type": "bool"
					}
				],
				"name": "setPauseState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_pauser",
						"type": "address"
					}
				],
				"name": "setPauser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voter",
						"type": "address"
					}
				],
				"name": "setVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "voter",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"createPool(address,address,bool)": {
					"details": "token order does not matter",
					"params": {
						"stable": ".",
						"tokenA": ".",
						"tokenB": "."
					}
				},
				"createPool(address,address,uint24)": {
					"details": "fee is converted to stable booleantoken order does not matter",
					"params": {
						"fee": "1 if stable, 0 if volatile, else revert",
						"tokenA": ".",
						"tokenB": "."
					}
				},
				"getPool(address,address,bool)": {
					"params": {
						"stable": "True if stable, false if volatile",
						"tokenA": ".",
						"tokenB": "."
					}
				},
				"getPool(address,address,uint24)": {
					"details": "fee is converted to stable boolean.",
					"params": {
						"fee": "1 if stable, 0 if volatile, else returns address(0)",
						"tokenA": ".",
						"tokenB": "."
					}
				},
				"isPool(address)": {
					"params": {
						"": "."
					}
				},
				"setCustomFee(address,uint256)": {
					"details": "A custom fee of zero means the default fee will be used."
				},
				"setFee(bool,uint256)": {
					"details": "Throws if higher than maximum fee.      Throws if fee is zero.",
					"params": {
						"_fee": ".",
						"_stable": "Stable or volatile pool."
					}
				},
				"setVoter(address)": {
					"details": "Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol",
					"params": {
						"_voter": "."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"allPoolsLength()": {
					"notice": "returns the number of pools created from this factory"
				},
				"createPool(address,address,bool)": {
					"notice": "Create a pool given two tokens and if they're stable/volatile"
				},
				"createPool(address,address,uint24)": {
					"notice": "Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)"
				},
				"getFee(address,bool)": {
					"notice": "Returns fee for a pool, as custom fees are possible."
				},
				"getPool(address,address,bool)": {
					"notice": "Return address of pool created by this factory"
				},
				"getPool(address,address,uint24)": {
					"notice": "Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)"
				},
				"isPool(address)": {
					"notice": "Is a valid pool created by this factory."
				},
				"setCustomFee(address,uint256)": {
					"notice": "Set overriding fee for a pool from the default"
				},
				"setFee(bool,uint256)": {
					"notice": "Set default fee for stable and volatile pools."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/aerodrome/interfaces/factories/IPoolFactory.sol": "IPoolFactory"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/aerodrome/interfaces/factories/IPoolFactory.sol": {
			"keccak256": "0x20a029864739473b6a2540eb7c12124e7ff7088b49ff4dfd8bb6592ea93d1cf0",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a945971ceb50a86df6ea4e86ad38adf0cbf3964a5ff50e0aac0fbe0974b69d0",
				"dweb:/ipfs/QmXgEWnz2BaSVTbWFjbN7hSBjTija41QhtimqzLSjGe4r8"
			]
		}
	},
	"version": 1
}