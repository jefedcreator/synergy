{
	"id": "2e5b7eb4320eb4bde066882e69652c74",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/aerodrome/factories/PoolFactory.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.20;\n\nimport {IPoolFactory} from \"../interfaces/factories/IPoolFactory.sol\";\nimport {IPool} from \"../interfaces/IPool.sol\";\nimport {Clones} from \"@openzeppelin/contracts/proxy/Clones.sol\";\n\ncontract PoolFactory is IPoolFactory {\n    address public immutable implementation;\n\n    bool public isPaused;\n    address public pauser;\n\n    uint256 public stableFee;\n    uint256 public volatileFee;\n    uint256 public constant MAX_FEE = 300; // 3%\n    // Override to indicate there is custom 0% fee - as a 0 value in the customFee mapping indicates\n    // that no custom fee rate has been set\n    uint256 public constant ZERO_FEE_INDICATOR = 420;\n    address public feeManager;\n\n    /// @dev used to change the name/symbol of the pool by calling emergencyCouncil\n    address public voter;\n\n    mapping(address => mapping(address => mapping(bool => address))) private _getPool;\n    address[] public allPools;\n    mapping(address => bool) private _isPool; // simplified check if its a pool, given that `stable` flag might not be available in peripherals\n    mapping(address => uint256) public customFee; // override for custom fees\n\n    address internal _temp0;\n    address internal _temp1;\n    bool internal _temp;\n\n    constructor(address _implementation) {\n        implementation = _implementation;\n        voter = msg.sender;\n        pauser = msg.sender;\n        feeManager = msg.sender;\n        isPaused = false;\n        stableFee = 5; // 0.05%\n        volatileFee = 30; // 0.3%\n    }\n\n    /// @inheritdoc IPoolFactory\n    function allPoolsLength() external view returns (uint256) {\n        return allPools.length;\n    }\n\n    /// @inheritdoc IPoolFactory\n    function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address) {\n        return fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false];\n    }\n\n    /// @inheritdoc IPoolFactory\n    function getPool(address tokenA, address tokenB, bool stable) external view returns (address) {\n        return _getPool[tokenA][tokenB][stable];\n    }\n\n    /// @inheritdoc IPoolFactory\n    function isPool(address pool) external view returns (bool) {\n        return _isPool[pool];\n    }\n\n    /// @inheritdoc IPoolFactory\n    function setVoter(address _voter) external {\n        if (msg.sender != voter) revert NotVoter();\n        voter = _voter;\n        emit SetVoter(_voter);\n    }\n\n    function setPauser(address _pauser) external {\n        if (msg.sender != pauser) revert NotPauser();\n        if (_pauser == address(0)) revert ZeroAddress();\n        pauser = _pauser;\n        emit SetPauser(_pauser);\n    }\n\n    function setPauseState(bool _state) external {\n        if (msg.sender != pauser) revert NotPauser();\n        isPaused = _state;\n        emit SetPauseState(_state);\n    }\n\n    function setFeeManager(address _feeManager) external {\n        if (msg.sender != feeManager) revert NotFeeManager();\n        if (_feeManager == address(0)) revert ZeroAddress();\n        feeManager = _feeManager;\n        emit SetFeeManager(_feeManager);\n    }\n\n    /// @inheritdoc IPoolFactory\n    function setFee(bool _stable, uint256 _fee) external {\n        if (msg.sender != feeManager) revert NotFeeManager();\n        if (_fee > MAX_FEE) revert FeeTooHigh();\n        if (_fee == 0) revert ZeroFee();\n        if (_stable) {\n            stableFee = _fee;\n        } else {\n            volatileFee = _fee;\n        }\n    }\n\n    /// @inheritdoc IPoolFactory\n    function setCustomFee(address pool, uint256 fee) external {\n        if (msg.sender != feeManager) revert NotFeeManager();\n        if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh();\n        if (!_isPool[pool]) revert InvalidPool();\n\n        customFee[pool] = fee;\n        emit SetCustomFee(pool, fee);\n    }\n\n    /// @inheritdoc IPoolFactory\n    function getFee(address pool, bool _stable) public view returns (uint256) {\n        uint256 fee = customFee[pool];\n        return fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee;\n    }\n\n    /// @inheritdoc IPoolFactory\n    function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool) {\n        if (fee > 1) revert FeeInvalid();\n        bool stable = fee == 1;\n        return createPool(tokenA, tokenB, stable);\n    }\n\n    /// @inheritdoc IPoolFactory\n    function createPool(address tokenA, address tokenB, bool stable) public returns (address pool) {\n        if (tokenA == tokenB) revert SameAddress();\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        if (token0 == address(0)) revert ZeroAddress();\n        if (_getPool[token0][token1][stable] != address(0)) revert PoolAlreadyExists();\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1, stable)); // salt includes stable as well, 3 parameters\n        pool = Clones.cloneDeterministic(implementation, salt);\n        IPool(pool).initialize(token0, token1, stable);\n        _getPool[token0][token1][stable] = pool;\n        _getPool[token1][token0][stable] = pool; // populate mapping in the reverse direction\n        allPools.push(pool);\n        _isPool[pool] = true;\n        emit PoolCreated(token0, token1, stable, pool, allPools.length);\n    }\n}"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    /**\n     * @dev A clone instance deployment failed.\n     */\n    error ERC1167FailedCreateClone();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert ERC1167FailedCreateClone();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert ERC1167FailedCreateClone();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"contracts/aerodrome/interfaces/IPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPool {\n    error DepositsNotEqual();\n    error BelowMinimumK();\n    error FactoryAlreadySet();\n    error InsufficientLiquidity();\n    error InsufficientLiquidityMinted();\n    error InsufficientLiquidityBurned();\n    error InsufficientOutputAmount();\n    error InsufficientInputAmount();\n    error IsPaused();\n    error InvalidTo();\n    error K();\n    error NotEmergencyCouncil();\n\n    event Fees(address indexed sender, uint256 amount0, uint256 amount1);\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\n    event Burn(address indexed sender, address indexed to, uint256 amount0, uint256 amount1);\n    event Swap(\n        address indexed sender,\n        address indexed to,\n        uint256 amount0In,\n        uint256 amount1In,\n        uint256 amount0Out,\n        uint256 amount1Out\n    );\n    event Sync(uint256 reserve0, uint256 reserve1);\n    event Claim(address indexed sender, address indexed recipient, uint256 amount0, uint256 amount1);\n\n    // Struct to capture time period obervations every 30 minutes, used for local oracles\n    struct Observation {\n        uint256 timestamp;\n        uint256 reserve0Cumulative;\n        uint256 reserve1Cumulative;\n    }\n\n    /// @notice Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1\n    function metadata()\n        external\n        view\n        returns (uint256 dec0, uint256 dec1, uint256 r0, uint256 r1, bool st, address t0, address t1);\n\n    /// @notice Claim accumulated but unclaimed fees (claimable0 and claimable1)\n    function claimFees() external returns (uint256, uint256);\n\n    /// @notice Returns [token0, token1]\n    function tokens() external view returns (address, address);\n\n    /// @notice Address of token in the pool with the lower address value\n    function token0() external view returns (address);\n\n    /// @notice Address of token in the poool with the higher address value\n    function token1() external view returns (address);\n\n    /// @notice Address of linked PoolFees.sol\n    function poolFees() external view returns (address);\n\n    /// @notice Address of PoolFactory that created this contract\n    function factory() external view returns (address);\n\n    /// @notice Capture oracle reading every 30 minutes (1800 seconds)\n    function periodSize() external view returns (uint256);\n\n    /// @notice Amount of token0 in pool\n    function reserve0() external view returns (uint256);\n\n    /// @notice Amount of token1 in pool\n    function reserve1() external view returns (uint256);\n\n    /// @notice Timestamp of last update to pool\n    function blockTimestampLast() external view returns (uint256);\n\n    /// @notice Cumulative of reserve0 factoring in time elapsed\n    function reserve0CumulativeLast() external view returns (uint256);\n\n    /// @notice Cumulative of reserve1 factoring in time elapsed\n    function reserve1CumulativeLast() external view returns (uint256);\n\n    /// @notice Accumulated fees of token0 (global)\n    function index0() external view returns (uint256);\n\n    /// @notice Accumulated fees of token1 (global)\n    function index1() external view returns (uint256);\n\n    /// @notice Get an LP's relative index0 to index0\n    function supplyIndex0(address) external view returns (uint256);\n\n    /// @notice Get an LP's relative index1 to index1\n    function supplyIndex1(address) external view returns (uint256);\n\n    /// @notice Amount of unclaimed, but claimable tokens from fees of token0 for an LP\n    function claimable0(address) external view returns (uint256);\n\n    /// @notice Amount of unclaimed, but claimable tokens from fees of token1 for an LP\n    function claimable1(address) external view returns (uint256);\n\n    /// @notice Returns the value of K in the Pool, based on its reserves.\n    function getK() external returns (uint256);\n\n    /// @notice Set pool name\n    ///         Only callable by Voter.emergencyCouncil()\n    /// @param __name String of new name\n    function setName(string calldata __name) external;\n\n    /// @notice Set pool symbol\n    ///         Only callable by Voter.emergencyCouncil()\n    /// @param __symbol String of new symbol\n    function setSymbol(string calldata __symbol) external;\n\n    /// @notice Get the number of observations recorded\n    function observationLength() external view returns (uint256);\n\n    /// @notice Get the value of the most recent observation\n    function lastObservation() external view returns (Observation memory);\n\n    /// @notice True if pool is stable, false if volatile\n    function stable() external view returns (bool);\n\n    /// @notice Produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\n    function currentCumulativePrices()\n        external\n        view\n        returns (uint256 reserve0Cumulative, uint256 reserve1Cumulative, uint256 blockTimestamp);\n\n    /// @notice Provides twap price with user configured granularity, up to the full window size\n    /// @param tokenIn .\n    /// @param amountIn .\n    /// @param granularity .\n    /// @return amountOut .\n    function quote(address tokenIn, uint256 amountIn, uint256 granularity) external view returns (uint256 amountOut);\n\n    /// @notice Returns a memory set of TWAP prices\n    ///         Same as calling sample(tokenIn, amountIn, points, 1)\n    /// @param tokenIn .\n    /// @param amountIn .\n    /// @param points Number of points to return\n    /// @return Array of TWAP prices\n    function prices(address tokenIn, uint256 amountIn, uint256 points) external view returns (uint256[] memory);\n\n    /// @notice Same as prices with with an additional window argument.\n    ///         Window = 2 means 2 * 30min (or 1 hr) between observations\n    /// @param tokenIn .\n    /// @param amountIn .\n    /// @param points .\n    /// @param window .\n    /// @return Array of TWAP prices\n    function sample(\n        address tokenIn,\n        uint256 amountIn,\n        uint256 points,\n        uint256 window\n    ) external view returns (uint256[] memory);\n\n    /// @notice This low-level function should be called from a contract which performs important safety checks\n    /// @param amount0Out   Amount of token0 to send to `to`\n    /// @param amount1Out   Amount of token1 to send to `to`\n    /// @param to           Address to recieve the swapped output\n    /// @param data         Additional calldata for flashloans\n    function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes calldata data) external;\n\n    /// @notice This low-level function should be called from a contract which performs important safety checks\n    ///         standard uniswap v2 implementation\n    /// @param to Address to receive token0 and token1 from burning the pool token\n    /// @return amount0 Amount of token0 returned\n    /// @return amount1 Amount of token1 returned\n    function burn(address to) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks\n    ///         standard uniswap v2 implementation\n    /// @param to           Address to receive the minted LP token\n    /// @return liquidity   Amount of LP token minted\n    function mint(address to) external returns (uint256 liquidity);\n\n    /// @notice Update reserves and, on the first call per block, price accumulators\n    /// @return _reserve0 .\n    /// @return _reserve1 .\n    /// @return _blockTimestampLast .\n    function getReserves() external view returns (uint256 _reserve0, uint256 _reserve1, uint256 _blockTimestampLast);\n\n    /// @notice Get the amount of tokenOut given the amount of tokenIn\n    /// @param amountIn Amount of token in\n    /// @param tokenIn  Address of token\n    /// @return Amount out\n    function getAmountOut(uint256 amountIn, address tokenIn) external view returns (uint256);\n\n    /// @notice Force balances to match reserves\n    /// @param to Address to receive any skimmed rewards\n    function skim(address to) external;\n\n    /// @notice Force reserves to match balances\n    function sync() external;\n\n    /// @notice Called on pool creation by PoolFactory\n    /// @param _token0 Address of token0\n    /// @param _token1 Address of token1\n    /// @param _stable True if stable, false if volatile\n    function initialize(address _token0, address _token1, bool _stable) external;\n}"
			},
			"contracts/aerodrome/interfaces/factories/IPoolFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IPoolFactory {\n    event SetFeeManager(address feeManager);\n    event SetPauser(address pauser);\n    event SetPauseState(bool state);\n    event SetVoter(address voter);\n    event PoolCreated(address indexed token0, address indexed token1, bool indexed stable, address pool, uint256);\n    event SetCustomFee(address indexed pool, uint256 fee);\n\n    error FeeInvalid();\n    error FeeTooHigh();\n    error InvalidPool();\n    error NotFeeManager();\n    error NotPauser();\n    error NotVoter();\n    error PoolAlreadyExists();\n    error SameAddress();\n    error ZeroFee();\n    error ZeroAddress();\n\n    /// @notice returns the number of pools created from this factory\n    function allPoolsLength() external view returns (uint256);\n\n    /// @notice Is a valid pool created by this factory.\n    /// @param .\n    function isPool(address pool) external view returns (bool);\n\n    /// @notice Return address of pool created by this factory\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param stable True if stable, false if volatile\n    function getPool(address tokenA, address tokenB, bool stable) external view returns (address);\n\n    /// @notice Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\n    /// @dev fee is converted to stable boolean.\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param fee  1 if stable, 0 if volatile, else returns address(0)\n    function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address);\n\n    /// @dev Only called once to set to Voter.sol - Voter does not have a function\n    ///      to call this contract method, so once set it's immutable.\n    ///      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\n    /// @param _voter .\n    function setVoter(address _voter) external;\n\n    function setPauser(address _pauser) external;\n\n    function setPauseState(bool _state) external;\n\n    function setFeeManager(address _feeManager) external;\n\n    /// @notice Set default fee for stable and volatile pools.\n    /// @dev Throws if higher than maximum fee.\n    ///      Throws if fee is zero.\n    /// @param _stable Stable or volatile pool.\n    /// @param _fee .\n    function setFee(bool _stable, uint256 _fee) external;\n\n    /// @notice Set overriding fee for a pool from the default\n    /// @dev A custom fee of zero means the default fee will be used.\n    function setCustomFee(address _pool, uint256 _fee) external;\n\n    /// @notice Returns fee for a pool, as custom fees are possible.\n    function getFee(address _pool, bool _stable) external view returns (uint256);\n\n    /// @notice Create a pool given two tokens and if they're stable/volatile\n    /// @dev token order does not matter\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param stable .\n    function createPool(address tokenA, address tokenB, bool stable) external returns (address pool);\n\n    /// @notice Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\n    /// @dev fee is converted to stable boolean\n    /// @dev token order does not matter\n    /// @param tokenA .\n    /// @param tokenB .\n    /// @param fee 1 if stable, 0 if volatile, else revert\n    function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool);\n\n    function isPaused() external view returns (bool);\n\n    function voter() external view returns (address);\n\n    function implementation() external view returns (address);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC1167FailedCreateClone",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.",
						"errors": {
							"ERC1167FailedCreateClone()": [
								{
									"details": "A clone instance deployment failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":726:4159  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":726:4159  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122080a6af29b2e51c5662f6574df11982e8e25f1cc4e45d4ec98ac374946732506564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122080a6af29b2e51c5662f6574df11982e8e25f1cc4e45d4ec98ac374946732506564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xA6 0xAF 0x29 0xB2 0xE5 SHR JUMP PUSH3 0xF6574D CALL NOT DUP3 0xE8 0xE2 PUSH0 SHR 0xC4 0xE4 0x5D 0x4E 0xC9 DUP11 0xC3 PUSH21 0x946732506564736F6C634300081400330000000000 ",
							"sourceMap": "726:3433:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122080a6af29b2e51c5662f6574df11982e8e25f1cc4e45d4ec98ac374946732506564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xA6 0xAF 0x29 0xB2 0xE5 SHR JUMP PUSH3 0xF6574D CALL NOT DUP3 0xE8 0xE2 PUSH0 SHR 0xC4 0xE4 0x5D 0x4E 0xC9 DUP11 0xC3 PUSH21 0x946732506564736F6C634300081400330000000000 ",
							"sourceMap": "726:3433:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 726,
									"end": 4159,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080a6af29b2e51c5662f6574df11982e8e25f1cc4e45d4ec98ac374946732506564736f6c63430008140033",
									".code": [
										{
											"begin": 726,
											"end": 4159,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 726,
											"end": 4159,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"contracts/aerodrome/factories/PoolFactory.sol",
								"contracts/aerodrome/interfaces/IPool.sol",
								"contracts/aerodrome/interfaces/factories/IPoolFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC1167FailedCreateClone\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"errors\":{\"ERC1167FailedCreateClone()\":[{\"details\":\"A clone instance deployment failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b\",\"dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/aerodrome/factories/PoolFactory.sol": {
				"PoolFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC1167FailedCreateClone",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeInvalid",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPool",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFeeManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPauser",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SameAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroFee",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "SetCustomFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeManager",
									"type": "address"
								}
							],
							"name": "SetFeeManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "SetPauseState",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								}
							],
							"name": "SetPauser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "SetVoter",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ZERO_FEE_INDICATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPools",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPoolsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "customFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_stable",
									"type": "bool"
								}
							],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "isPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pauser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "setCustomFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_stable",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeManager",
									"type": "address"
								}
							],
							"name": "setFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setPauseState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pauser",
									"type": "address"
								}
							],
							"name": "setPauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "setVoter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stableFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "volatileFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1167FailedCreateClone()": [
								{
									"details": "A clone instance deployment failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,bool)": {
								"details": "token order does not matter",
								"params": {
									"stable": ".",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"createPool(address,address,uint24)": {
								"details": "fee is converted to stable booleantoken order does not matter",
								"params": {
									"fee": "1 if stable, 0 if volatile, else revert",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"getPool(address,address,bool)": {
								"params": {
									"stable": "True if stable, false if volatile",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"getPool(address,address,uint24)": {
								"details": "fee is converted to stable boolean.",
								"params": {
									"fee": "1 if stable, 0 if volatile, else returns address(0)",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"isPool(address)": {
								"params": {
									"": "."
								}
							},
							"setCustomFee(address,uint256)": {
								"details": "A custom fee of zero means the default fee will be used."
							},
							"setFee(bool,uint256)": {
								"details": "Throws if higher than maximum fee.      Throws if fee is zero.",
								"params": {
									"_fee": ".",
									"_stable": "Stable or volatile pool."
								}
							},
							"setVoter(address)": {
								"details": "Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol",
								"params": {
									"_voter": "."
								}
							}
						},
						"stateVariables": {
							"voter": {
								"details": "used to change the name/symbol of the pool by calling emergencyCouncil"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/aerodrome/factories/PoolFactory.sol\":246:5317  contract PoolFactory is IPoolFactory {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1267:1535  constructor(address _implementation) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1331:1346  _implementation */\n  dup1\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1314:1346  implementation = _implementation */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1364:1374  msg.sender */\n  caller\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1356:1361  voter */\n  0x04\n  0x00\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1356:1374  voter = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1393:1403  msg.sender */\n  caller\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1384:1390  pauser */\n  0x00\n  0x01\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1384:1403  pauser = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1426:1436  msg.sender */\n  caller\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1413:1423  feeManager */\n  0x03\n  0x00\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1413:1436  feeManager = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1457:1462  false */\n  0x00\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1446:1454  isPaused */\n  dup1\n  0x00\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1446:1462  isPaused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1484:1485  5 */\n  0x05\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1472:1481  stableFee */\n  0x01\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1472:1485  stableFee = 5 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1518:1520  30 */\n  0x1e\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1504:1515  volatileFee */\n  0x02\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1504:1520  volatileFee = 30 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":1267:1535  constructor(address _implementation) {... */\n  pop\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":246:5317  contract PoolFactory is IPoolFactory {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/aerodrome/factories/PoolFactory.sol\":246:5317  contract PoolFactory is IPoolFactory {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xdab92d3cfd2fb10847c732668f5be4f526313d660461529e6720c950cca9ea28\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":246:5317  contract PoolFactory is IPoolFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c60da1b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xcc56b2c5\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xcc56b2c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xcdb88ad1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd0fb0203\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd49466a8\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe1f76b44\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xefde4e64\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x5c60da1b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x79bc57d5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9fd0506d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa1671295\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb187bd26\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x46c96aac\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x46c96aac\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x472d35b9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4bc2a657\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4d419abc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5084ed03\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5b16ebb7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x1698ee82\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2d88af4a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36bf95a0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38c55d46\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x40bbd775\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x41d1de97\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1710:1925  function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address) {... */\n    tag_3:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2451:2673  function setPauser(address _pauser) external {... */\n    tag_4:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4402:5315  function createPool(address tokenA, address tokenB, bool stable) public returns (address pool) {... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":645:693  uint256 public constant ZERO_FEE_INDICATOR = 420 */\n    tag_6:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":389:413  uint256 public stableFee */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":929:954  address[] public allPools */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":815:835  address public voter */\n    tag_9:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2854:3112  function setFeeManager(address _feeManager) external {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2288:2445  function setVoter(address _voter) external {... */\n    tag_11:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1104:1148  mapping(address => uint256) public customFee */\n    tag_12:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":419:445  uint256 public volatileFee */\n    tag_13:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2153:2249  function isPool(address pool) external view returns (bool) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":289:328  address public immutable implementation */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1964:2114  function getPool(address tokenA, address tokenB, bool stable) external view returns (address) {... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":361:382  address public pauser */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4135:4363  function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":335:355  bool public isPaused */\n    tag_19:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":451:488  uint256 public constant MAX_FEE = 300 */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3877:4096  function getFee(address pool, bool _stable) public view returns (uint256) {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2679:2848  function setPauseState(bool _state) external {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      stop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":699:724  address public feeManager */\n    tag_23:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3514:3838  function setCustomFee(address pool, uint256 fee) external {... */\n    tag_24:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3151:3475  function setFee(bool _stable, uint256 _fee) external {... */\n    tag_25:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1574:1671  function allPoolsLength() external view returns (uint256) {... */\n    tag_26:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1710:1925  function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address) {... */\n    tag_33:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1794:1801  address */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1826:1827  1 */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1820:1823  fee */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1820:1827  fee > 1 */\n      0xffffff\n      and\n      gt\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1820:1918  fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n      tag_122\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1850:1851  1 */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1843:1846  fee */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1843:1851  fee == 1 */\n      0xffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1843:1918  fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n      tag_123\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1895  _getPool */\n      0x05\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1903  _getPool[tokenA] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1896:1902  tokenA */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1903  _getPool[tokenA] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1911  _getPool[tokenA][tokenB] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1904:1910  tokenB */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1911  _getPool[tokenA][tokenB] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1918  _getPool[tokenA][tokenB][false] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1912:1917  false */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1887:1918  _getPool[tokenA][tokenB][false] */\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1843:1918  fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n      jump(tag_124)\n    tag_123:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1862  _getPool */\n      0x05\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1870  _getPool[tokenA] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1863:1869  tokenA */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1870  _getPool[tokenA] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1878  _getPool[tokenA][tokenB] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1871:1877  tokenB */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1878  _getPool[tokenA][tokenB] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1884  _getPool[tokenA][tokenB][true] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1879:1883  true */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1854:1884  _getPool[tokenA][tokenB][true] */\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1843:1918  fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n    tag_124:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1820:1918  fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n      jump(tag_125)\n    tag_122:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1838:1839  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1820:1918  fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n    tag_125:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1813:1918  return fee > 1 ? address(0) : fee == 1 ? _getPool[tokenA][tokenB][true] : _getPool[tokenA][tokenB][false] */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1710:1925  function getPool(address tokenA, address tokenB, uint24 fee) external view returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2451:2673  function setPauser(address _pauser) external {... */\n    tag_39:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2524:2530  pauser */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2510:2530  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2510:2520  msg.sender */\n      caller\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2510:2530  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2506:2550  if (msg.sender != pauser) revert NotPauser() */\n      tag_127\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2539:2550  NotPauser() */\n      mload(0x40)\n      0x492f678100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2506:2550  if (msg.sender != pauser) revert NotPauser() */\n    tag_127:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2583:2584  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2564:2585  _pauser == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2564:2571  _pauser */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2564:2585  _pauser == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2560:2607  if (_pauser == address(0)) revert ZeroAddress() */\n      tag_128\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2594:2607  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2560:2607  if (_pauser == address(0)) revert ZeroAddress() */\n    tag_128:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2626:2633  _pauser */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2617:2623  pauser */\n      0x00\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2617:2633  pauser = _pauser */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2648:2666  SetPauser(_pauser) */\n      0xe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2658:2665  _pauser */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2648:2666  SetPauser(_pauser) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2451:2673  function setPauser(address _pauser) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4402:5315  function createPool(address tokenA, address tokenB, bool stable) public returns (address pool) {... */\n    tag_43:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4483:4495  address pool */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4521:4527  tokenB */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4511:4527  tokenA == tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4511:4517  tokenA */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4511:4527  tokenA == tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4507:4549  if (tokenA == tokenB) revert SameAddress() */\n      tag_131\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4536:4549  SameAddress() */\n      mload(0x40)\n      0x367558c300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4507:4549  if (tokenA == tokenB) revert SameAddress() */\n    tag_131:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4560:4574  address token0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4576:4590  address token1 */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4603:4609  tokenB */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4594:4609  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4594:4600  tokenA */\n      dup7\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4594:4609  tokenA < tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4594:4647  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      tag_132\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4632:4638  tokenB */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4640:4646  tokenA */\n      dup7\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4594:4647  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      jump(tag_133)\n    tag_132:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4613:4619  tokenA */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4621:4627  tokenB */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4594:4647  tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n    tag_133:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4559:4647  (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4679:4680  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4661:4681  token0 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4661:4667  token0 */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4661:4681  token0 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4657:4703  if (token0 == address(0)) revert ZeroAddress() */\n      tag_134\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4690:4703  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4657:4703  if (token0 == address(0)) revert ZeroAddress() */\n    tag_134:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4761:4762  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4763  _getPool[token0][token1][stable] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4725  _getPool */\n      0x05\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4733  _getPool[token0] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4726:4732  token0 */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4733  _getPool[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4741  _getPool[token0][token1] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4734:4740  token1 */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4741  _getPool[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4749  _getPool[token0][token1][stable] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4742:4748  stable */\n      dup7\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4749  _getPool[token0][token1][stable] */\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4717:4763  _getPool[token0][token1][stable] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4713:4791  if (_getPool[token0][token1][stable] != address(0)) revert PoolAlreadyExists() */\n      tag_135\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4772:4791  PoolAlreadyExists() */\n      mload(0x40)\n      0x0311932200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4713:4791  if (_getPool[token0][token1][stable] != address(0)) revert PoolAlreadyExists() */\n    tag_135:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4801:4813  bytes32 salt */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4843:4849  token0 */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4851:4857  token1 */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4859:4865  stable */\n      dup7\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4826:4866  abi.encodePacked(token0, token1, stable) */\n      add(0x20, mload(0x40))\n      tag_136\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4816:4867  keccak256(abi.encodePacked(token0, token1, stable)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4801:4867  bytes32 salt = keccak256(abi.encodePacked(token0, token1, stable)) */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4930:4977  Clones.cloneDeterministic(implementation, salt) */\n      tag_138\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4956:4970  implementation */\n      immutable(\"0xdab92d3cfd2fb10847c732668f5be4f526313d660461529e6720c950cca9ea28\")\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4972:4976  salt */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4930:4955  Clones.cloneDeterministic */\n      tag_139\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4930:4977  Clones.cloneDeterministic(implementation, salt) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4923:4977  pool = Clones.cloneDeterministic(implementation, salt) */\n      swap4\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4993:4997  pool */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4987:5009  IPool(pool).initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe4bbb5a8\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5010:5016  token0 */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5018:5024  token1 */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5026:5032  stable */\n      dup9\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4987:5033  IPool(pool).initialize(token0, token1, stable) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5078:5082  pool */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5051  _getPool */\n      0x05\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5059  _getPool[token0] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5052:5058  token0 */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5059  _getPool[token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5067  _getPool[token0][token1] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5060:5066  token1 */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5067  _getPool[token0][token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5075  _getPool[token0][token1][stable] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5068:5074  stable */\n      dup8\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5075  _getPool[token0][token1][stable] */\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5043:5082  _getPool[token0][token1][stable] = pool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5127:5131  pool */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5100  _getPool */\n      0x05\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5108  _getPool[token1] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5101:5107  token1 */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5108  _getPool[token1] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5116  _getPool[token1][token0] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5109:5115  token0 */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5116  _getPool[token1][token0] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5124  _getPool[token1][token0][stable] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5117:5123  stable */\n      dup8\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5124  _getPool[token1][token0][stable] */\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5092:5131  _getPool[token1][token0][stable] = pool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5186:5194  allPools */\n      0x06\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5200:5204  pool */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5186:5205  allPools.push(pool) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5231:5235  true */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5215:5222  _isPool */\n      0x07\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5215:5228  _isPool[pool] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5223:5227  pool */\n      dup7\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5215:5228  _isPool[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5215:5235  _isPool[pool] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5278:5284  stable */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5250:5308  PoolCreated(token0, token1, stable, pool, allPools.length) */\n      iszero\n      iszero\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5270:5276  token1 */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5250:5308  PoolCreated(token0, token1, stable, pool, allPools.length) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5262:5268  token0 */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5250:5308  PoolCreated(token0, token1, stable, pool, allPools.length) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2128d88d14c80cb081c1252a5acff7a264671bf199ce226b53788fb26065005e\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5286:5290  pool */\n      dup8\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5292:5300  allPools */\n      0x06\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5292:5307  allPools.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":5250:5308  PoolCreated(token0, token1, stable, pool, allPools.length) */\n      mload(0x40)\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4497:5315  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4402:5315  function createPool(address tokenA, address tokenB, bool stable) public returns (address pool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":645:693  uint256 public constant ZERO_FEE_INDICATOR = 420 */\n    tag_46:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":690:693  420 */\n      0x01a4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":645:693  uint256 public constant ZERO_FEE_INDICATOR = 420 */\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":389:413  uint256 public stableFee */\n    tag_50:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":929:954  address[] public allPools */\n    tag_55:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":815:835  address public voter */\n    tag_58:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2854:3112  function setFeeManager(address _feeManager) external {... */\n    tag_62:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2935:2945  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2921:2945  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2921:2931  msg.sender */\n      caller\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2921:2945  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2917:2969  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_151\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2954:2969  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2917:2969  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_151:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3006:3007  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2983:3008  _feeManager == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2983:2994  _feeManager */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2983:3008  _feeManager == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2979:3030  if (_feeManager == address(0)) revert ZeroAddress() */\n      tag_152\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3017:3030  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2979:3030  if (_feeManager == address(0)) revert ZeroAddress() */\n    tag_152:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3053:3064  _feeManager */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3040:3050  feeManager */\n      0x03\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3040:3064  feeManager = _feeManager */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3079:3105  SetFeeManager(_feeManager) */\n      0x5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3093:3104  _feeManager */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3079:3105  SetFeeManager(_feeManager) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2854:3112  function setFeeManager(address _feeManager) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2288:2445  function setVoter(address _voter) external {... */\n    tag_65:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2359:2364  voter */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2345:2364  msg.sender != voter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2345:2355  msg.sender */\n      caller\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2345:2364  msg.sender != voter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2341:2383  if (msg.sender != voter) revert NotVoter() */\n      tag_155\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2373:2383  NotVoter() */\n      mload(0x40)\n      0xc18384c100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2341:2383  if (msg.sender != voter) revert NotVoter() */\n    tag_155:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2401:2407  _voter */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2393:2398  voter */\n      0x04\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2393:2407  voter = _voter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2422:2438  SetVoter(_voter) */\n      0xc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2431:2437  _voter */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2422:2438  SetVoter(_voter) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2288:2445  function setVoter(address _voter) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1104:1148  mapping(address => uint256) public customFee */\n    tag_68:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":419:445  uint256 public volatileFee */\n    tag_71:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2153:2249  function isPool(address pool) external view returns (bool) {... */\n    tag_75:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2206:2210  bool */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2229:2236  _isPool */\n      0x07\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2229:2242  _isPool[pool] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2237:2241  pool */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2229:2242  _isPool[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2222:2242  return _isPool[pool] */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2153:2249  function isPool(address pool) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":289:328  address public immutable implementation */\n    tag_79:\n      immutable(\"0xdab92d3cfd2fb10847c732668f5be4f526313d660461529e6720c950cca9ea28\")\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1964:2114  function getPool(address tokenA, address tokenB, bool stable) external view returns (address) {... */\n    tag_83:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2049:2056  address */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2083  _getPool */\n      0x05\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2091  _getPool[tokenA] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2084:2090  tokenA */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2091  _getPool[tokenA] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2099  _getPool[tokenA][tokenB] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2092:2098  tokenB */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2099  _getPool[tokenA][tokenB] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2107  _getPool[tokenA][tokenB][stable] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2100:2106  stable */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2075:2107  _getPool[tokenA][tokenB][stable] */\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2068:2107  return _getPool[tokenA][tokenB][stable] */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1964:2114  function getPool(address tokenA, address tokenB, bool stable) external view returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":361:382  address public pauser */\n    tag_86:\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4135:4363  function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool) {... */\n    tag_90:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4217:4229  address pool */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4251:4252  1 */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4245:4248  fee */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4245:4252  fee > 1 */\n      0xffffff\n      and\n      gt\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4241:4273  if (fee > 1) revert FeeInvalid() */\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4261:4273  FeeInvalid() */\n      mload(0x40)\n      0x52dadcf900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4241:4273  if (fee > 1) revert FeeInvalid() */\n    tag_160:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4283:4294  bool stable */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4304:4305  1 */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4297:4300  fee */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4297:4305  fee == 1 */\n      0xffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4283:4305  bool stable = fee == 1 */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4322:4356  createPool(tokenA, tokenB, stable) */\n      tag_161\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4333:4339  tokenA */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4341:4347  tokenB */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4349:4355  stable */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4322:4332  createPool */\n      tag_43\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4322:4356  createPool(tokenA, tokenB, stable) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4315:4356  return createPool(tokenA, tokenB, stable) */\n      swap2\n      pop\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4135:4363  function createPool(address tokenA, address tokenB, uint24 fee) external returns (address pool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":335:355  bool public isPaused */\n    tag_93:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":451:488  uint256 public constant MAX_FEE = 300 */\n    tag_96:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":485:488  300 */\n      0x012c\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":451:488  uint256 public constant MAX_FEE = 300 */\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3877:4096  function getFee(address pool, bool _stable) public view returns (uint256) {... */\n    tag_101:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3942:3949  uint256 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3961:3972  uint256 fee */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3975:3984  customFee */\n      0x08\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3975:3990  customFee[pool] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3985:3989  pool */\n      dup6\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3975:3990  customFee[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3961:3990  uint256 fee = customFee[pool] */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":690:693  420 */\n      0x01a4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4007:4010  fee */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4007:4032  fee == ZERO_FEE_INDICATOR */\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4007:4089  fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee */\n      tag_163\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4046:4047  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4039:4042  fee */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4039:4047  fee != 0 */\n      sub\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4039:4089  fee != 0 ? fee : _stable ? stableFee : volatileFee */\n      tag_164\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4056:4063  _stable */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4056:4089  _stable ? stableFee : volatileFee */\n      tag_165\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4078:4089  volatileFee */\n      sload(0x02)\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4056:4089  _stable ? stableFee : volatileFee */\n      jump(tag_166)\n    tag_165:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4066:4075  stableFee */\n      sload(0x01)\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4056:4089  _stable ? stableFee : volatileFee */\n    tag_166:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4039:4089  fee != 0 ? fee : _stable ? stableFee : volatileFee */\n      jump(tag_167)\n    tag_164:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4050:4053  fee */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4039:4089  fee != 0 ? fee : _stable ? stableFee : volatileFee */\n    tag_167:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4007:4089  fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee */\n      jump(tag_168)\n    tag_163:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4035:4036  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4007:4089  fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee */\n    tag_168:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":4000:4089  return fee == ZERO_FEE_INDICATOR ? 0 : fee != 0 ? fee : _stable ? stableFee : volatileFee */\n      swap2\n      pop\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3877:4096  function getFee(address pool, bool _stable) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2679:2848  function setPauseState(bool _state) external {... */\n    tag_106:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2752:2758  pauser */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2738:2758  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2738:2748  msg.sender */\n      caller\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2738:2758  msg.sender != pauser */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2734:2778  if (msg.sender != pauser) revert NotPauser() */\n      tag_170\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2767:2778  NotPauser() */\n      mload(0x40)\n      0x492f678100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2734:2778  if (msg.sender != pauser) revert NotPauser() */\n    tag_170:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2799:2805  _state */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2788:2796  isPaused */\n      0x00\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2788:2805  isPaused = _state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2820:2841  SetPauseState(_state) */\n      0x0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2834:2840  _state */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2820:2841  SetPauseState(_state) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":2679:2848  function setPauseState(bool _state) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":699:724  address public feeManager */\n    tag_108:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3514:3838  function setCustomFee(address pool, uint256 fee) external {... */\n    tag_113:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3600:3610  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3586:3610  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3586:3596  msg.sender */\n      caller\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3586:3610  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3582:3634  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_173\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3619:3634  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3582:3634  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_173:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":485:488  300 */\n      0x012c\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3648:3651  fee */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3648:3661  fee > MAX_FEE */\n      gt\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3648:3690  fee > MAX_FEE && fee != ZERO_FEE_INDICATOR */\n      dup1\n      iszero\n      tag_174\n      jumpi\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":690:693  420 */\n      0x01a4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3665:3668  fee */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3665:3690  fee != ZERO_FEE_INDICATOR */\n      eq\n      iszero\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3648:3690  fee > MAX_FEE && fee != ZERO_FEE_INDICATOR */\n    tag_174:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3644:3711  if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh() */\n      iszero\n      tag_175\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3699:3711  FeeTooHigh() */\n      mload(0x40)\n      0xcd4e616700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3644:3711  if (fee > MAX_FEE && fee != ZERO_FEE_INDICATOR) revert FeeTooHigh() */\n    tag_175:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3726:3733  _isPool */\n      0x07\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3726:3739  _isPool[pool] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3734:3738  pool */\n      dup4\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3726:3739  _isPool[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3721:3761  if (!_isPool[pool]) revert InvalidPool() */\n      tag_176\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3748:3761  InvalidPool() */\n      mload(0x40)\n      0x2083cd4000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3721:3761  if (!_isPool[pool]) revert InvalidPool() */\n    tag_176:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3790:3793  fee */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3772:3781  customFee */\n      0x08\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3772:3787  customFee[pool] */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3782:3786  pool */\n      dup5\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3772:3787  customFee[pool] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3772:3793  customFee[pool] = fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3821:3825  pool */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3808:3831  SetCustomFee(pool, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xae468ce586f9a87660fdffc1448cee942042c16ae2f02046b134b5224f31936b\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3827:3830  fee */\n      dup3\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3808:3831  SetCustomFee(pool, fee) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3514:3838  function setCustomFee(address pool, uint256 fee) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3151:3475  function setFee(bool _stable, uint256 _fee) external {... */\n    tag_117:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3232:3242  feeManager */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3218:3242  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3218:3228  msg.sender */\n      caller\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3218:3242  msg.sender != feeManager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3214:3266  if (msg.sender != feeManager) revert NotFeeManager() */\n      tag_179\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3251:3266  NotFeeManager() */\n      mload(0x40)\n      0xf5d267eb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3214:3266  if (msg.sender != feeManager) revert NotFeeManager() */\n    tag_179:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":485:488  300 */\n      0x012c\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3280:3284  _fee */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3280:3294  _fee > MAX_FEE */\n      gt\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3276:3315  if (_fee > MAX_FEE) revert FeeTooHigh() */\n      iszero\n      tag_180\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3303:3315  FeeTooHigh() */\n      mload(0x40)\n      0xcd4e616700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3276:3315  if (_fee > MAX_FEE) revert FeeTooHigh() */\n    tag_180:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3337:3338  0 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3329:3333  _fee */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3329:3338  _fee == 0 */\n      sub\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3325:3356  if (_fee == 0) revert ZeroFee() */\n      tag_181\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3347:3356  ZeroFee() */\n      mload(0x40)\n      0xaf13986d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3325:3356  if (_fee == 0) revert ZeroFee() */\n    tag_181:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3370:3377  _stable */\n      dup2\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3366:3469  if (_stable) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3405:3409  _fee */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3393:3402  stableFee */\n      0x01\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3393:3409  stableFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3366:3469  if (_stable) {... */\n      jump(tag_183)\n    tag_182:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3454:3458  _fee */\n      dup1\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3440:3451  volatileFee */\n      0x02\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3440:3458  volatileFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3366:3469  if (_stable) {... */\n    tag_183:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":3151:3475  function setFee(bool _stable, uint256 _fee) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1574:1671  function allPoolsLength() external view returns (uint256) {... */\n    tag_119:\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1623:1630  uint256 */\n      0x00\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1649:1657  allPools */\n      0x06\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1649:1664  allPools.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1642:1664  return allPools.length */\n      swap1\n      pop\n        /* \"contracts/aerodrome/factories/PoolFactory.sol\":1574:1671  function allPoolsLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2209:3030  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2293:2309  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2625:2673  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2607:2621  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2601:2605  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2597:2622  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2591:2595  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2587:2623  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2584:2674  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2578:2582  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2571:2675  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2832:2864  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2815:2829  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2809:2813  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2805:2830  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2802:2865  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2796:2800  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2866  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2914:2918  salt */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2908:2912  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2902:2906  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2899:2900  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2891:2919  create2(0, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2879:2919  instance := create2(0, 0x09, 0x37, salt) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2962:2963  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2942:2964  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2942:2950  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2942:2964  instance == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2938:3024  if (instance == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2987:3013  ERC1167FailedCreateClone() */\n      mload(0x40)\n      0xc2f868f400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2938:3024  if (instance == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2209:3030  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_188:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_190:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_191:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_220\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_190\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_192:\n        /* \"#utility.yul\":641:665   */\n      tag_222\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_191\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_223:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_193:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_225\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_192\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:932   */\n    tag_194:\n        /* \"#utility.yul\":877:884   */\n      0x00\n        /* \"#utility.yul\":917:925   */\n      0xffffff\n        /* \"#utility.yul\":910:915   */\n      dup3\n        /* \"#utility.yul\":906:926   */\n      and\n        /* \"#utility.yul\":895:926   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":938:1058   */\n    tag_195:\n        /* \"#utility.yul\":1010:1033   */\n      tag_228\n        /* \"#utility.yul\":1027:1032   */\n      dup2\n        /* \"#utility.yul\":1010:1033   */\n      tag_194\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1003:1008   */\n      dup2\n        /* \"#utility.yul\":1000:1034   */\n      eq\n        /* \"#utility.yul\":990:1052   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1048:1049   */\n      0x00\n        /* \"#utility.yul\":1045:1046   */\n      dup1\n        /* \"#utility.yul\":1038:1050   */\n      revert\n        /* \"#utility.yul\":990:1052   */\n    tag_229:\n        /* \"#utility.yul\":938:1058   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1064:1201   */\n    tag_196:\n        /* \"#utility.yul\":1109:1114   */\n      0x00\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1134:1154   */\n      calldataload\n        /* \"#utility.yul\":1125:1154   */\n      swap1\n      pop\n        /* \"#utility.yul\":1163:1195   */\n      tag_231\n        /* \"#utility.yul\":1189:1194   */\n      dup2\n        /* \"#utility.yul\":1163:1195   */\n      tag_195\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1064:1201   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1207:1824   */\n    tag_32:\n        /* \"#utility.yul\":1283:1289   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      dup1\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1348:1350   */\n      0x60\n        /* \"#utility.yul\":1336:1345   */\n      dup5\n        /* \"#utility.yul\":1327:1334   */\n      dup7\n        /* \"#utility.yul\":1323:1346   */\n      sub\n        /* \"#utility.yul\":1319:1351   */\n      slt\n        /* \"#utility.yul\":1316:1435   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1354:1433   */\n      tag_234\n      tag_188\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1316:1435   */\n    tag_233:\n        /* \"#utility.yul\":1474:1475   */\n      0x00\n        /* \"#utility.yul\":1499:1552   */\n      tag_235\n        /* \"#utility.yul\":1544:1551   */\n      dup7\n        /* \"#utility.yul\":1535:1541   */\n      dup3\n        /* \"#utility.yul\":1524:1533   */\n      dup8\n        /* \"#utility.yul\":1520:1542   */\n      add\n        /* \"#utility.yul\":1499:1552   */\n      tag_193\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1489:1552   */\n      swap4\n      pop\n        /* \"#utility.yul\":1445:1562   */\n      pop\n        /* \"#utility.yul\":1601:1603   */\n      0x20\n        /* \"#utility.yul\":1627:1680   */\n      tag_236\n        /* \"#utility.yul\":1672:1679   */\n      dup7\n        /* \"#utility.yul\":1663:1669   */\n      dup3\n        /* \"#utility.yul\":1652:1661   */\n      dup8\n        /* \"#utility.yul\":1648:1670   */\n      add\n        /* \"#utility.yul\":1627:1680   */\n      tag_193\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1617:1680   */\n      swap3\n      pop\n        /* \"#utility.yul\":1572:1690   */\n      pop\n        /* \"#utility.yul\":1729:1731   */\n      0x40\n        /* \"#utility.yul\":1755:1807   */\n      tag_237\n        /* \"#utility.yul\":1799:1806   */\n      dup7\n        /* \"#utility.yul\":1790:1796   */\n      dup3\n        /* \"#utility.yul\":1779:1788   */\n      dup8\n        /* \"#utility.yul\":1775:1797   */\n      add\n        /* \"#utility.yul\":1755:1807   */\n      tag_196\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1745:1807   */\n      swap2\n      pop\n        /* \"#utility.yul\":1700:1817   */\n      pop\n        /* \"#utility.yul\":1207:1824   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1830:1948   */\n    tag_197:\n        /* \"#utility.yul\":1917:1941   */\n      tag_239\n        /* \"#utility.yul\":1935:1940   */\n      dup2\n        /* \"#utility.yul\":1917:1941   */\n      tag_191\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1912:1915   */\n      dup3\n        /* \"#utility.yul\":1905:1942   */\n      mstore\n        /* \"#utility.yul\":1830:1948   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1954:2176   */\n    tag_35:\n        /* \"#utility.yul\":2047:2051   */\n      0x00\n        /* \"#utility.yul\":2085:2087   */\n      0x20\n        /* \"#utility.yul\":2074:2083   */\n      dup3\n        /* \"#utility.yul\":2070:2088   */\n      add\n        /* \"#utility.yul\":2062:2088   */\n      swap1\n      pop\n        /* \"#utility.yul\":2098:2169   */\n      tag_241\n        /* \"#utility.yul\":2166:2167   */\n      0x00\n        /* \"#utility.yul\":2155:2164   */\n      dup4\n        /* \"#utility.yul\":2151:2168   */\n      add\n        /* \"#utility.yul\":2142:2148   */\n      dup5\n        /* \"#utility.yul\":2098:2169   */\n      tag_197\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1954:2176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2182:2511   */\n    tag_38:\n        /* \"#utility.yul\":2241:2247   */\n      0x00\n        /* \"#utility.yul\":2290:2292   */\n      0x20\n        /* \"#utility.yul\":2278:2287   */\n      dup3\n        /* \"#utility.yul\":2269:2276   */\n      dup5\n        /* \"#utility.yul\":2265:2288   */\n      sub\n        /* \"#utility.yul\":2261:2293   */\n      slt\n        /* \"#utility.yul\":2258:2377   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2296:2375   */\n      tag_244\n      tag_188\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2258:2377   */\n    tag_243:\n        /* \"#utility.yul\":2416:2417   */\n      0x00\n        /* \"#utility.yul\":2441:2494   */\n      tag_245\n        /* \"#utility.yul\":2486:2493   */\n      dup5\n        /* \"#utility.yul\":2477:2483   */\n      dup3\n        /* \"#utility.yul\":2466:2475   */\n      dup6\n        /* \"#utility.yul\":2462:2484   */\n      add\n        /* \"#utility.yul\":2441:2494   */\n      tag_193\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2431:2494   */\n      swap2\n      pop\n        /* \"#utility.yul\":2387:2504   */\n      pop\n        /* \"#utility.yul\":2182:2511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2517:2607   */\n    tag_198:\n        /* \"#utility.yul\":2551:2558   */\n      0x00\n        /* \"#utility.yul\":2594:2599   */\n      dup2\n        /* \"#utility.yul\":2587:2600   */\n      iszero\n        /* \"#utility.yul\":2580:2601   */\n      iszero\n        /* \"#utility.yul\":2569:2601   */\n      swap1\n      pop\n        /* \"#utility.yul\":2517:2607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2613:2729   */\n    tag_199:\n        /* \"#utility.yul\":2683:2704   */\n      tag_248\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2683:2704   */\n      tag_198\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2676:2681   */\n      dup2\n        /* \"#utility.yul\":2673:2705   */\n      eq\n        /* \"#utility.yul\":2663:2723   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2719:2720   */\n      0x00\n        /* \"#utility.yul\":2716:2717   */\n      dup1\n        /* \"#utility.yul\":2709:2721   */\n      revert\n        /* \"#utility.yul\":2663:2723   */\n    tag_249:\n        /* \"#utility.yul\":2613:2729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2735:2868   */\n    tag_200:\n        /* \"#utility.yul\":2778:2783   */\n      0x00\n        /* \"#utility.yul\":2816:2822   */\n      dup2\n        /* \"#utility.yul\":2803:2823   */\n      calldataload\n        /* \"#utility.yul\":2794:2823   */\n      swap1\n      pop\n        /* \"#utility.yul\":2832:2862   */\n      tag_251\n        /* \"#utility.yul\":2856:2861   */\n      dup2\n        /* \"#utility.yul\":2832:2862   */\n      tag_199\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2735:2868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2874:3487   */\n    tag_42:\n        /* \"#utility.yul\":2948:2954   */\n      0x00\n        /* \"#utility.yul\":2956:2962   */\n      dup1\n        /* \"#utility.yul\":2964:2970   */\n      0x00\n        /* \"#utility.yul\":3013:3015   */\n      0x60\n        /* \"#utility.yul\":3001:3010   */\n      dup5\n        /* \"#utility.yul\":2992:2999   */\n      dup7\n        /* \"#utility.yul\":2988:3011   */\n      sub\n        /* \"#utility.yul\":2984:3016   */\n      slt\n        /* \"#utility.yul\":2981:3100   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3019:3098   */\n      tag_254\n      tag_188\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2981:3100   */\n    tag_253:\n        /* \"#utility.yul\":3139:3140   */\n      0x00\n        /* \"#utility.yul\":3164:3217   */\n      tag_255\n        /* \"#utility.yul\":3209:3216   */\n      dup7\n        /* \"#utility.yul\":3200:3206   */\n      dup3\n        /* \"#utility.yul\":3189:3198   */\n      dup8\n        /* \"#utility.yul\":3185:3207   */\n      add\n        /* \"#utility.yul\":3164:3217   */\n      tag_193\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3154:3217   */\n      swap4\n      pop\n        /* \"#utility.yul\":3110:3227   */\n      pop\n        /* \"#utility.yul\":3266:3268   */\n      0x20\n        /* \"#utility.yul\":3292:3345   */\n      tag_256\n        /* \"#utility.yul\":3337:3344   */\n      dup7\n        /* \"#utility.yul\":3328:3334   */\n      dup3\n        /* \"#utility.yul\":3317:3326   */\n      dup8\n        /* \"#utility.yul\":3313:3335   */\n      add\n        /* \"#utility.yul\":3292:3345   */\n      tag_193\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3282:3345   */\n      swap3\n      pop\n        /* \"#utility.yul\":3237:3355   */\n      pop\n        /* \"#utility.yul\":3394:3396   */\n      0x40\n        /* \"#utility.yul\":3420:3470   */\n      tag_257\n        /* \"#utility.yul\":3462:3469   */\n      dup7\n        /* \"#utility.yul\":3453:3459   */\n      dup3\n        /* \"#utility.yul\":3442:3451   */\n      dup8\n        /* \"#utility.yul\":3438:3460   */\n      add\n        /* \"#utility.yul\":3420:3470   */\n      tag_200\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3410:3470   */\n      swap2\n      pop\n        /* \"#utility.yul\":3365:3480   */\n      pop\n        /* \"#utility.yul\":2874:3487   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3493:3570   */\n    tag_201:\n        /* \"#utility.yul\":3530:3537   */\n      0x00\n        /* \"#utility.yul\":3559:3564   */\n      dup2\n        /* \"#utility.yul\":3548:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3493:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3694   */\n    tag_202:\n        /* \"#utility.yul\":3663:3687   */\n      tag_260\n        /* \"#utility.yul\":3681:3686   */\n      dup2\n        /* \"#utility.yul\":3663:3687   */\n      tag_201\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3658:3661   */\n      dup3\n        /* \"#utility.yul\":3651:3688   */\n      mstore\n        /* \"#utility.yul\":3576:3694   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3700:3922   */\n    tag_48:\n        /* \"#utility.yul\":3793:3797   */\n      0x00\n        /* \"#utility.yul\":3831:3833   */\n      0x20\n        /* \"#utility.yul\":3820:3829   */\n      dup3\n        /* \"#utility.yul\":3816:3834   */\n      add\n        /* \"#utility.yul\":3808:3834   */\n      swap1\n      pop\n        /* \"#utility.yul\":3844:3915   */\n      tag_262\n        /* \"#utility.yul\":3912:3913   */\n      0x00\n        /* \"#utility.yul\":3901:3910   */\n      dup4\n        /* \"#utility.yul\":3897:3914   */\n      add\n        /* \"#utility.yul\":3888:3894   */\n      dup5\n        /* \"#utility.yul\":3844:3915   */\n      tag_202\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3700:3922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3928:4050   */\n    tag_203:\n        /* \"#utility.yul\":4001:4025   */\n      tag_264\n        /* \"#utility.yul\":4019:4024   */\n      dup2\n        /* \"#utility.yul\":4001:4025   */\n      tag_201\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3994:3999   */\n      dup2\n        /* \"#utility.yul\":3991:4026   */\n      eq\n        /* \"#utility.yul\":3981:4044   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4040:4041   */\n      0x00\n        /* \"#utility.yul\":4037:4038   */\n      dup1\n        /* \"#utility.yul\":4030:4042   */\n      revert\n        /* \"#utility.yul\":3981:4044   */\n    tag_265:\n        /* \"#utility.yul\":3928:4050   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4056:4195   */\n    tag_204:\n        /* \"#utility.yul\":4102:4107   */\n      0x00\n        /* \"#utility.yul\":4140:4146   */\n      dup2\n        /* \"#utility.yul\":4127:4147   */\n      calldataload\n        /* \"#utility.yul\":4118:4147   */\n      swap1\n      pop\n        /* \"#utility.yul\":4156:4189   */\n      tag_267\n        /* \"#utility.yul\":4183:4188   */\n      dup2\n        /* \"#utility.yul\":4156:4189   */\n      tag_203\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4056:4195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4201:4530   */\n    tag_54:\n        /* \"#utility.yul\":4260:4266   */\n      0x00\n        /* \"#utility.yul\":4309:4311   */\n      0x20\n        /* \"#utility.yul\":4297:4306   */\n      dup3\n        /* \"#utility.yul\":4288:4295   */\n      dup5\n        /* \"#utility.yul\":4284:4307   */\n      sub\n        /* \"#utility.yul\":4280:4312   */\n      slt\n        /* \"#utility.yul\":4277:4396   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4315:4394   */\n      tag_270\n      tag_188\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4277:4396   */\n    tag_269:\n        /* \"#utility.yul\":4435:4436   */\n      0x00\n        /* \"#utility.yul\":4460:4513   */\n      tag_271\n        /* \"#utility.yul\":4505:4512   */\n      dup5\n        /* \"#utility.yul\":4496:4502   */\n      dup3\n        /* \"#utility.yul\":4485:4494   */\n      dup6\n        /* \"#utility.yul\":4481:4503   */\n      add\n        /* \"#utility.yul\":4460:4513   */\n      tag_204\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4450:4513   */\n      swap2\n      pop\n        /* \"#utility.yul\":4406:4523   */\n      pop\n        /* \"#utility.yul\":4201:4530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4536:4645   */\n    tag_205:\n        /* \"#utility.yul\":4617:4638   */\n      tag_273\n        /* \"#utility.yul\":4632:4637   */\n      dup2\n        /* \"#utility.yul\":4617:4638   */\n      tag_198\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4612:4615   */\n      dup3\n        /* \"#utility.yul\":4605:4639   */\n      mstore\n        /* \"#utility.yul\":4536:4645   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4861   */\n    tag_77:\n        /* \"#utility.yul\":4738:4742   */\n      0x00\n        /* \"#utility.yul\":4776:4778   */\n      0x20\n        /* \"#utility.yul\":4765:4774   */\n      dup3\n        /* \"#utility.yul\":4761:4779   */\n      add\n        /* \"#utility.yul\":4753:4779   */\n      swap1\n      pop\n        /* \"#utility.yul\":4789:4854   */\n      tag_275\n        /* \"#utility.yul\":4851:4852   */\n      0x00\n        /* \"#utility.yul\":4840:4849   */\n      dup4\n        /* \"#utility.yul\":4836:4853   */\n      add\n        /* \"#utility.yul\":4827:4833   */\n      dup5\n        /* \"#utility.yul\":4789:4854   */\n      tag_205\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4651:4861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4867:5335   */\n    tag_100:\n        /* \"#utility.yul\":4932:4938   */\n      0x00\n        /* \"#utility.yul\":4940:4946   */\n      dup1\n        /* \"#utility.yul\":4989:4991   */\n      0x40\n        /* \"#utility.yul\":4977:4986   */\n      dup4\n        /* \"#utility.yul\":4968:4975   */\n      dup6\n        /* \"#utility.yul\":4964:4987   */\n      sub\n        /* \"#utility.yul\":4960:4992   */\n      slt\n        /* \"#utility.yul\":4957:5076   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4995:5074   */\n      tag_278\n      tag_188\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4957:5076   */\n    tag_277:\n        /* \"#utility.yul\":5115:5116   */\n      0x00\n        /* \"#utility.yul\":5140:5193   */\n      tag_279\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5176:5182   */\n      dup3\n        /* \"#utility.yul\":5165:5174   */\n      dup7\n        /* \"#utility.yul\":5161:5183   */\n      add\n        /* \"#utility.yul\":5140:5193   */\n      tag_193\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5130:5193   */\n      swap3\n      pop\n        /* \"#utility.yul\":5086:5203   */\n      pop\n        /* \"#utility.yul\":5242:5244   */\n      0x20\n        /* \"#utility.yul\":5268:5318   */\n      tag_280\n        /* \"#utility.yul\":5310:5317   */\n      dup6\n        /* \"#utility.yul\":5301:5307   */\n      dup3\n        /* \"#utility.yul\":5290:5299   */\n      dup7\n        /* \"#utility.yul\":5286:5308   */\n      add\n        /* \"#utility.yul\":5268:5318   */\n      tag_200\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5258:5318   */\n      swap2\n      pop\n        /* \"#utility.yul\":5213:5328   */\n      pop\n        /* \"#utility.yul\":4867:5335   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5664   */\n    tag_105:\n        /* \"#utility.yul\":5397:5403   */\n      0x00\n        /* \"#utility.yul\":5446:5448   */\n      0x20\n        /* \"#utility.yul\":5434:5443   */\n      dup3\n        /* \"#utility.yul\":5425:5432   */\n      dup5\n        /* \"#utility.yul\":5421:5444   */\n      sub\n        /* \"#utility.yul\":5417:5449   */\n      slt\n        /* \"#utility.yul\":5414:5533   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5452:5531   */\n      tag_283\n      tag_188\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5414:5533   */\n    tag_282:\n        /* \"#utility.yul\":5572:5573   */\n      0x00\n        /* \"#utility.yul\":5597:5647   */\n      tag_284\n        /* \"#utility.yul\":5639:5646   */\n      dup5\n        /* \"#utility.yul\":5630:5636   */\n      dup3\n        /* \"#utility.yul\":5619:5628   */\n      dup6\n        /* \"#utility.yul\":5615:5637   */\n      add\n        /* \"#utility.yul\":5597:5647   */\n      tag_200\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5587:5647   */\n      swap2\n      pop\n        /* \"#utility.yul\":5543:5657   */\n      pop\n        /* \"#utility.yul\":5341:5664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5670:6144   */\n    tag_112:\n        /* \"#utility.yul\":5738:5744   */\n      0x00\n        /* \"#utility.yul\":5746:5752   */\n      dup1\n        /* \"#utility.yul\":5795:5797   */\n      0x40\n        /* \"#utility.yul\":5783:5792   */\n      dup4\n        /* \"#utility.yul\":5774:5781   */\n      dup6\n        /* \"#utility.yul\":5770:5793   */\n      sub\n        /* \"#utility.yul\":5766:5798   */\n      slt\n        /* \"#utility.yul\":5763:5882   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5801:5880   */\n      tag_287\n      tag_188\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5763:5882   */\n    tag_286:\n        /* \"#utility.yul\":5921:5922   */\n      0x00\n        /* \"#utility.yul\":5946:5999   */\n      tag_288\n        /* \"#utility.yul\":5991:5998   */\n      dup6\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5971:5980   */\n      dup7\n        /* \"#utility.yul\":5967:5989   */\n      add\n        /* \"#utility.yul\":5946:5999   */\n      tag_193\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5936:5999   */\n      swap3\n      pop\n        /* \"#utility.yul\":5892:6009   */\n      pop\n        /* \"#utility.yul\":6048:6050   */\n      0x20\n        /* \"#utility.yul\":6074:6127   */\n      tag_289\n        /* \"#utility.yul\":6119:6126   */\n      dup6\n        /* \"#utility.yul\":6110:6116   */\n      dup3\n        /* \"#utility.yul\":6099:6108   */\n      dup7\n        /* \"#utility.yul\":6095:6117   */\n      add\n        /* \"#utility.yul\":6074:6127   */\n      tag_204\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6064:6127   */\n      swap2\n      pop\n        /* \"#utility.yul\":6019:6137   */\n      pop\n        /* \"#utility.yul\":5670:6144   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6150:6618   */\n    tag_116:\n        /* \"#utility.yul\":6215:6221   */\n      0x00\n        /* \"#utility.yul\":6223:6229   */\n      dup1\n        /* \"#utility.yul\":6272:6274   */\n      0x40\n        /* \"#utility.yul\":6260:6269   */\n      dup4\n        /* \"#utility.yul\":6251:6258   */\n      dup6\n        /* \"#utility.yul\":6247:6270   */\n      sub\n        /* \"#utility.yul\":6243:6275   */\n      slt\n        /* \"#utility.yul\":6240:6359   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":6278:6357   */\n      tag_292\n      tag_188\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":6240:6359   */\n    tag_291:\n        /* \"#utility.yul\":6398:6399   */\n      0x00\n        /* \"#utility.yul\":6423:6473   */\n      tag_293\n        /* \"#utility.yul\":6465:6472   */\n      dup6\n        /* \"#utility.yul\":6456:6462   */\n      dup3\n        /* \"#utility.yul\":6445:6454   */\n      dup7\n        /* \"#utility.yul\":6441:6463   */\n      add\n        /* \"#utility.yul\":6423:6473   */\n      tag_200\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6413:6473   */\n      swap3\n      pop\n        /* \"#utility.yul\":6369:6483   */\n      pop\n        /* \"#utility.yul\":6522:6524   */\n      0x20\n        /* \"#utility.yul\":6548:6601   */\n      tag_294\n        /* \"#utility.yul\":6593:6600   */\n      dup6\n        /* \"#utility.yul\":6584:6590   */\n      dup3\n        /* \"#utility.yul\":6573:6582   */\n      dup7\n        /* \"#utility.yul\":6569:6591   */\n      add\n        /* \"#utility.yul\":6548:6601   */\n      tag_204\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6538:6601   */\n      swap2\n      pop\n        /* \"#utility.yul\":6493:6611   */\n      pop\n        /* \"#utility.yul\":6150:6618   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:6718   */\n    tag_206:\n        /* \"#utility.yul\":6657:6665   */\n      0x00\n        /* \"#utility.yul\":6705:6710   */\n      dup2\n        /* \"#utility.yul\":6701:6703   */\n      0x60\n        /* \"#utility.yul\":6697:6711   */\n      shl\n        /* \"#utility.yul\":6676:6711   */\n      swap1\n      pop\n        /* \"#utility.yul\":6624:6718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6724:6818   */\n    tag_207:\n        /* \"#utility.yul\":6763:6770   */\n      0x00\n        /* \"#utility.yul\":6792:6812   */\n      tag_297\n        /* \"#utility.yul\":6806:6811   */\n      dup3\n        /* \"#utility.yul\":6792:6812   */\n      tag_206\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6781:6812   */\n      swap1\n      pop\n        /* \"#utility.yul\":6724:6818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6824:6924   */\n    tag_208:\n        /* \"#utility.yul\":6863:6870   */\n      0x00\n        /* \"#utility.yul\":6892:6918   */\n      tag_299\n        /* \"#utility.yul\":6912:6917   */\n      dup3\n        /* \"#utility.yul\":6892:6918   */\n      tag_207\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6881:6918   */\n      swap1\n      pop\n        /* \"#utility.yul\":6824:6924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6930:7087   */\n    tag_209:\n        /* \"#utility.yul\":7035:7080   */\n      tag_301\n        /* \"#utility.yul\":7055:7079   */\n      tag_302\n        /* \"#utility.yul\":7073:7078   */\n      dup3\n        /* \"#utility.yul\":7055:7079   */\n      tag_191\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7035:7080   */\n      tag_208\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7030:7033   */\n      dup3\n        /* \"#utility.yul\":7023:7081   */\n      mstore\n        /* \"#utility.yul\":6930:7087   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7093:7189   */\n    tag_210:\n        /* \"#utility.yul\":7127:7135   */\n      0x00\n        /* \"#utility.yul\":7176:7181   */\n      dup2\n        /* \"#utility.yul\":7171:7174   */\n      0xf8\n        /* \"#utility.yul\":7167:7182   */\n      shl\n        /* \"#utility.yul\":7146:7182   */\n      swap1\n      pop\n        /* \"#utility.yul\":7093:7189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7195:7288   */\n    tag_211:\n        /* \"#utility.yul\":7232:7239   */\n      0x00\n        /* \"#utility.yul\":7261:7282   */\n      tag_305\n        /* \"#utility.yul\":7276:7281   */\n      dup3\n        /* \"#utility.yul\":7261:7282   */\n      tag_210\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7250:7282   */\n      swap1\n      pop\n        /* \"#utility.yul\":7195:7288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7294:7389   */\n    tag_212:\n        /* \"#utility.yul\":7330:7337   */\n      0x00\n        /* \"#utility.yul\":7359:7383   */\n      tag_307\n        /* \"#utility.yul\":7377:7382   */\n      dup3\n        /* \"#utility.yul\":7359:7383   */\n      tag_211\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7348:7383   */\n      swap1\n      pop\n        /* \"#utility.yul\":7294:7389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7395:7540   */\n    tag_213:\n        /* \"#utility.yul\":7494:7533   */\n      tag_309\n        /* \"#utility.yul\":7511:7532   */\n      tag_310\n        /* \"#utility.yul\":7526:7531   */\n      dup3\n        /* \"#utility.yul\":7511:7532   */\n      tag_198\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7494:7533   */\n      tag_212\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7489:7492   */\n      dup3\n        /* \"#utility.yul\":7482:7534   */\n      mstore\n        /* \"#utility.yul\":7395:7540   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7546:8071   */\n    tag_137:\n        /* \"#utility.yul\":7708:7711   */\n      0x00\n        /* \"#utility.yul\":7723:7798   */\n      tag_312\n        /* \"#utility.yul\":7794:7797   */\n      dup3\n        /* \"#utility.yul\":7785:7791   */\n      dup7\n        /* \"#utility.yul\":7723:7798   */\n      tag_209\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7823:7825   */\n      0x14\n        /* \"#utility.yul\":7818:7821   */\n      dup3\n        /* \"#utility.yul\":7814:7826   */\n      add\n        /* \"#utility.yul\":7807:7826   */\n      swap2\n      pop\n        /* \"#utility.yul\":7836:7911   */\n      tag_313\n        /* \"#utility.yul\":7907:7910   */\n      dup3\n        /* \"#utility.yul\":7898:7904   */\n      dup6\n        /* \"#utility.yul\":7836:7911   */\n      tag_209\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7936:7938   */\n      0x14\n        /* \"#utility.yul\":7931:7934   */\n      dup3\n        /* \"#utility.yul\":7927:7939   */\n      add\n        /* \"#utility.yul\":7920:7939   */\n      swap2\n      pop\n        /* \"#utility.yul\":7949:8018   */\n      tag_314\n        /* \"#utility.yul\":8014:8017   */\n      dup3\n        /* \"#utility.yul\":8005:8011   */\n      dup5\n        /* \"#utility.yul\":7949:8018   */\n      tag_213\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8043:8044   */\n      0x01\n        /* \"#utility.yul\":8038:8041   */\n      dup3\n        /* \"#utility.yul\":8034:8045   */\n      add\n        /* \"#utility.yul\":8027:8045   */\n      swap2\n      pop\n        /* \"#utility.yul\":8062:8065   */\n      dup2\n        /* \"#utility.yul\":8055:8065   */\n      swap1\n      pop\n        /* \"#utility.yul\":7546:8071   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8077:8507   */\n    tag_141:\n        /* \"#utility.yul\":8220:8224   */\n      0x00\n        /* \"#utility.yul\":8258:8260   */\n      0x60\n        /* \"#utility.yul\":8247:8256   */\n      dup3\n        /* \"#utility.yul\":8243:8261   */\n      add\n        /* \"#utility.yul\":8235:8261   */\n      swap1\n      pop\n        /* \"#utility.yul\":8271:8342   */\n      tag_316\n        /* \"#utility.yul\":8339:8340   */\n      0x00\n        /* \"#utility.yul\":8328:8337   */\n      dup4\n        /* \"#utility.yul\":8324:8341   */\n      add\n        /* \"#utility.yul\":8315:8321   */\n      dup7\n        /* \"#utility.yul\":8271:8342   */\n      tag_197\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8352:8424   */\n      tag_317\n        /* \"#utility.yul\":8420:8422   */\n      0x20\n        /* \"#utility.yul\":8409:8418   */\n      dup4\n        /* \"#utility.yul\":8405:8423   */\n      add\n        /* \"#utility.yul\":8396:8402   */\n      dup6\n        /* \"#utility.yul\":8352:8424   */\n      tag_197\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8434:8500   */\n      tag_318\n        /* \"#utility.yul\":8496:8498   */\n      0x40\n        /* \"#utility.yul\":8485:8494   */\n      dup4\n        /* \"#utility.yul\":8481:8499   */\n      add\n        /* \"#utility.yul\":8472:8478   */\n      dup5\n        /* \"#utility.yul\":8434:8500   */\n      tag_205\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8077:8507   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8513:8845   */\n    tag_147:\n        /* \"#utility.yul\":8634:8638   */\n      0x00\n        /* \"#utility.yul\":8672:8674   */\n      0x40\n        /* \"#utility.yul\":8661:8670   */\n      dup3\n        /* \"#utility.yul\":8657:8675   */\n      add\n        /* \"#utility.yul\":8649:8675   */\n      swap1\n      pop\n        /* \"#utility.yul\":8685:8756   */\n      tag_320\n        /* \"#utility.yul\":8753:8754   */\n      0x00\n        /* \"#utility.yul\":8742:8751   */\n      dup4\n        /* \"#utility.yul\":8738:8755   */\n      add\n        /* \"#utility.yul\":8729:8735   */\n      dup6\n        /* \"#utility.yul\":8685:8756   */\n      tag_197\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8766:8838   */\n      tag_321\n        /* \"#utility.yul\":8834:8836   */\n      0x20\n        /* \"#utility.yul\":8823:8832   */\n      dup4\n        /* \"#utility.yul\":8819:8837   */\n      add\n        /* \"#utility.yul\":8810:8816   */\n      dup5\n        /* \"#utility.yul\":8766:8838   */\n      tag_202\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8513:8845   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e6a325e6739556824642f7da5fc2e96454a94c785ede558bf812524c4b9e1a5c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b5060405162001dd638038062001dd68339818101604052810190620000369190620001be565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250503360045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550335f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f805f6101000a81548160ff0219169083151502179055506005600181905550601e60028190555050620001ee565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000188826200015d565b9050919050565b6200019a816200017c565b8114620001a5575f80fd5b50565b5f81519050620001b8816200018f565b92915050565b5f60208284031215620001d657620001d562000159565b5b5f620001e584828501620001a8565b91505092915050565b608051611bc86200020e5f395f81816109eb015261107c0152611bc85ff3fe608060405234801561000f575f80fd5b5060043610610156575f3560e01c80635c60da1b116100c1578063cc56b2c51161007a578063cc56b2c5146103ee578063cdb88ad11461041e578063d0fb02031461043a578063d49466a814610458578063e1f76b4414610474578063efde4e641461049057610156565b80635c60da1b1461031657806379bc57d5146103345780639fd0506d14610364578063a167129514610382578063b187bd26146103b2578063bc063e1a146103d057610156565b806346c96aac1161011357806346c96aac14610242578063472d35b9146102605780634bc2a6571461027c5780634d419abc146102985780635084ed03146102c85780635b16ebb7146102e657610156565b80631698ee821461015a5780632d88af4a1461018a57806336bf95a0146101a657806338c55d46146101d657806340bbd775146101f457806341d1de9714610212575b5f80fd5b610174600480360381019061016f91906117b5565b6104ae565b6040516101819190611814565b60405180910390f35b6101a4600480360381019061019f919061182d565b610636565b005b6101c060048036038101906101bb919061188d565b61079b565b6040516101cd9190611814565b60405180910390f35b6101de610d3c565b6040516101eb91906118f5565b60405180910390f35b6101fc610d42565b60405161020991906118f5565b60405180910390f35b61022c60048036038101906102279190611938565b610d48565b6040516102399190611814565b60405180910390f35b61024a610d83565b6040516102579190611814565b60405180910390f35b61027a6004803603810190610275919061182d565b610da8565b005b6102966004803603810190610291919061182d565b610f0d565b005b6102b260048036038101906102ad919061182d565b61100d565b6040516102bf91906118f5565b60405180910390f35b6102d0611022565b6040516102dd91906118f5565b60405180910390f35b61030060048036038101906102fb919061182d565b611028565b60405161030d9190611972565b60405180910390f35b61031e61107a565b60405161032b9190611814565b60405180910390f35b61034e6004803603810190610349919061188d565b61109e565b60405161035b9190611814565b60405180910390f35b61036c611153565b6040516103799190611814565b60405180910390f35b61039c600480360381019061039791906117b5565b611178565b6040516103a99190611814565b60405180910390f35b6103ba6111da565b6040516103c79190611972565b60405180910390f35b6103d86111ea565b6040516103e591906118f5565b60405180910390f35b6104086004803603810190610403919061198b565b6111f0565b60405161041591906118f5565b60405180910390f35b610438600480360381019061043391906119c9565b61126a565b005b610442611342565b60405161044f9190611814565b60405180910390f35b610472600480360381019061046d91906119f4565b611367565b005b61048e60048036038101906104899190611a32565b61154b565b005b610498611664565b6040516104a591906118f5565b60405180910390f35b5f60018262ffffff161161062b5760018262ffffff16146105795760055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f801515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610626565b60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f60011515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b61062d565b5f5b90509392505050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bc576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610721576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35816040516107909190611814565b60405180910390a150565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610801576040517f367558c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161061083d578486610840565b85855b915091505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a9576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f861515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109b8576040517f0311932200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8282866040516020016109ce93929190611afa565b604051602081830303815290604052805190602001209050610a107f000000000000000000000000000000000000000000000000000000000000000082611670565b93508373ffffffffffffffffffffffffffffffffffffffff1663e4bbb5a88484886040518463ffffffff1660e01b8152600401610a4f93929190611b36565b5f604051808303815f87803b158015610a66575f80fd5b505af1158015610a78573d5f803e3d5ffd5b505050508360055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f871515151581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f871515151581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600684908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508415158273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2128d88d14c80cb081c1252a5acff7a264671bf199ce226b53788fb26065005e87600680549050604051610d2a929190611b6b565b60405180910390a45050509392505050565b6101a481565b60015481565b60068181548110610d57575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e2e576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e93576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b281604051610f029190611814565b60405180910390a150565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f93576040517fc18384c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2816040516110029190611814565b60405180910390a150565b6008602052805f5260405f205f915090505481565b60025481565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f831515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60018262ffffff1611156111b9576040517f52dadcf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60018362ffffff161490506111d085858361079b565b9150509392505050565b5f8054906101000a900460ff1681565b61012c81565b5f8060085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506101a4811461125f575f8103611258578261124f57600254611253565b6001545b61125a565b805b611261565b5f5b91505092915050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112f0576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f806101000a81548160ff0219169083151502179055507f0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116816040516113379190611972565b60405180910390a150565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ed576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c8111801561140057506101a48114155b15611437576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166114b7576040517f2083cd4000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fae468ce586f9a87660fdffc1448cee942042c16ae2f02046b134b5224f31936b8260405161153f91906118f5565b60405180910390a25050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115d1576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c81111561160d576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103611646576040517faf13986d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81156116585780600181905550611660565b806002819055505b5050565b5f600680549050905090565b5f763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760095ff590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611719576040517fc2f868f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61174c82611723565b9050919050565b61175c81611742565b8114611766575f80fd5b50565b5f8135905061177781611753565b92915050565b5f62ffffff82169050919050565b6117948161177d565b811461179e575f80fd5b50565b5f813590506117af8161178b565b92915050565b5f805f606084860312156117cc576117cb61171f565b5b5f6117d986828701611769565b93505060206117ea86828701611769565b92505060406117fb868287016117a1565b9150509250925092565b61180e81611742565b82525050565b5f6020820190506118275f830184611805565b92915050565b5f602082840312156118425761184161171f565b5b5f61184f84828501611769565b91505092915050565b5f8115159050919050565b61186c81611858565b8114611876575f80fd5b50565b5f8135905061188781611863565b92915050565b5f805f606084860312156118a4576118a361171f565b5b5f6118b186828701611769565b93505060206118c286828701611769565b92505060406118d386828701611879565b9150509250925092565b5f819050919050565b6118ef816118dd565b82525050565b5f6020820190506119085f8301846118e6565b92915050565b611917816118dd565b8114611921575f80fd5b50565b5f813590506119328161190e565b92915050565b5f6020828403121561194d5761194c61171f565b5b5f61195a84828501611924565b91505092915050565b61196c81611858565b82525050565b5f6020820190506119855f830184611963565b92915050565b5f80604083850312156119a1576119a061171f565b5b5f6119ae85828601611769565b92505060206119bf85828601611879565b9150509250929050565b5f602082840312156119de576119dd61171f565b5b5f6119eb84828501611879565b91505092915050565b5f8060408385031215611a0a57611a0961171f565b5b5f611a1785828601611769565b9250506020611a2885828601611924565b9150509250929050565b5f8060408385031215611a4857611a4761171f565b5b5f611a5585828601611879565b9250506020611a6685828601611924565b9150509250929050565b5f8160601b9050919050565b5f611a8682611a70565b9050919050565b5f611a9782611a7c565b9050919050565b611aaf611aaa82611742565b611a8d565b82525050565b5f8160f81b9050919050565b5f611acb82611ab5565b9050919050565b5f611adc82611ac1565b9050919050565b611af4611aef82611858565b611ad2565b82525050565b5f611b058286611a9e565b601482019150611b158285611a9e565b601482019150611b258284611ae3565b600182019150819050949350505050565b5f606082019050611b495f830186611805565b611b566020830185611805565b611b636040830184611963565b949350505050565b5f604082019050611b7e5f830185611805565b611b8b60208301846118e6565b939250505056fea2646970667358221220e6a325e6739556824642f7da5fc2e96454a94c785ede558bf812524c4b9e1a5c64736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1DD6 CODESIZE SUB DUP1 PUSH3 0x1DD6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1BE JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP CALLER PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH3 0x1EE JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x188 DUP3 PUSH3 0x15D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x19A DUP2 PUSH3 0x17C JUMP JUMPDEST DUP2 EQ PUSH3 0x1A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B8 DUP2 PUSH3 0x18F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1D6 JUMPI PUSH3 0x1D5 PUSH3 0x159 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x1E5 DUP5 DUP3 DUP6 ADD PUSH3 0x1A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1BC8 PUSH3 0x20E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x9EB ADD MSTORE PUSH2 0x107C ADD MSTORE PUSH2 0x1BC8 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xCC56B2C5 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCC56B2C5 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xD0FB0203 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xD49466A8 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xE1F76B44 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xEFDE4E64 EQ PUSH2 0x490 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x79BC57D5 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xA1671295 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x3D0 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x472D35B9 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x4BC2A657 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x4D419ABC EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x5084ED03 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x5B16EBB7 EQ PUSH2 0x2E6 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x1698EE82 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2D88AF4A EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x36BF95A0 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x38C55D46 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x40BBD775 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x212 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xDA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x126A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x442 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x1367 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x498 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND GT PUSH2 0x62B JUMPI PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND EQ PUSH2 0x579 JUMPI PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x626 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH1 0x1 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xE02EFB9E8F0FC21546730AB32D594F62D586E1BBB15BB5045EDD0B1878A77B35 DUP2 PUSH1 0x40 MLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x367558C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x83D JUMPI DUP5 DUP7 PUSH2 0x840 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x311932200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA10 PUSH32 0x0 DUP3 PUSH2 0x1670 JUMP JUMPDEST SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4BBB5A8 DUP5 DUP5 DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP5 ISZERO ISZERO DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2128D88D14C80CB081C1252A5ACFF7A264671BF199CE226B53788FB26065005E DUP8 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0xD2A SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A4 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD57 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5D0517E3A4EABEA892D9750138CD21D4A6CF3B935B43D0598DF7055F463819B2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18384C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC6FF127433B785C51DA9AE4088EE184C909B1A55B9AFD82AE6C64224D3BC15D2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND GT ISZERO PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x52DADCF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP4 PUSH3 0xFFFFFF AND EQ SWAP1 POP PUSH2 0x11D0 DUP6 DUP6 DUP4 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1A4 DUP2 EQ PUSH2 0x125F JUMPI PUSH0 DUP2 SUB PUSH2 0x1258 JUMPI DUP3 PUSH2 0x124F JUMPI PUSH1 0x2 SLOAD PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH2 0x125A JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x1261 JUMP JUMPDEST PUSH0 JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD76538EFC408318A051137C2720A9E82902ACDBD46B802D488B74CA3A09A116 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT DUP1 ISZERO PUSH2 0x1400 JUMPI POP PUSH2 0x1A4 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1437 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE468CE586F9A87660FDFFC1448CEE942042C16AE2F02046B134B5224F31936B DUP3 PUSH1 0x40 MLOAD PUSH2 0x153F SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x160D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF13986D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1658 JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1660 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH0 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1719 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC2F868F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x174C DUP3 PUSH2 0x1723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1742 JUMP JUMPDEST DUP2 EQ PUSH2 0x1766 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1777 DUP2 PUSH2 0x1753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x177D JUMP JUMPDEST DUP2 EQ PUSH2 0x179E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AF DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D9 DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17EA DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17FB DUP7 DUP3 DUP8 ADD PUSH2 0x17A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x180E DUP2 PUSH2 0x1742 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1827 PUSH0 DUP4 ADD DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184F DUP5 DUP3 DUP6 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x1858 JUMP JUMPDEST DUP2 EQ PUSH2 0x1876 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1887 DUP2 PUSH2 0x1863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18A4 JUMPI PUSH2 0x18A3 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B1 DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18C2 DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18D3 DUP7 DUP3 DUP8 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EF DUP2 PUSH2 0x18DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1908 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1917 DUP2 PUSH2 0x18DD JUMP JUMPDEST DUP2 EQ PUSH2 0x1921 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1932 DUP2 PUSH2 0x190E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194D JUMPI PUSH2 0x194C PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C DUP2 PUSH2 0x1858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1985 PUSH0 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BF DUP6 DUP3 DUP7 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DE JUMPI PUSH2 0x19DD PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19EB DUP5 DUP3 DUP6 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A17 DUP6 DUP3 DUP7 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A28 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A55 DUP6 DUP3 DUP7 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A66 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A86 DUP3 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A97 DUP3 PUSH2 0x1A7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAF PUSH2 0x1AAA DUP3 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACB DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADC DUP3 PUSH2 0x1AC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF4 PUSH2 0x1AEF DUP3 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1AD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B05 DUP3 DUP7 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1B15 DUP3 DUP6 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1B25 DUP3 DUP5 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH0 DUP4 ADD DUP7 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7E PUSH0 DUP4 ADD DUP6 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x1B8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 LOG3 0x25 0xE6 PUSH20 0x9556824642F7DA5FC2E96454A94C785EDE558BF8 SLT MSTORE 0x4C 0x4B SWAP15 BYTE 0x5C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "246:5071:1:-:0;;;1267:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1331:15;1314:32;;;;;;;;;;1364:10;1356:5;;:18;;;;;;;;;;;;;;;;;;1393:10;1384:6;;:19;;;;;;;;;;;;;;;;;;1426:10;1413;;:23;;;;;;;;;;;;;;;;;;1457:5;1446:8;;:16;;;;;;;;;;;;;;;;;;1484:1;1472:9;:13;;;;1518:2;1504:11;:16;;;;1267:268;246:5071;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;246:5071:1:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_FEE_107": {
									"entryPoint": 4586,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ZERO_FEE_INDICATOR_110": {
									"entryPoint": 3388,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allPoolsLength_187": {
									"entryPoint": 5732,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@allPools_126": {
									"entryPoint": 3400,
									"id": 126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cloneDeterministic_49": {
									"entryPoint": 5744,
									"id": 49,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createPool_524": {
									"entryPoint": 4472,
									"id": 524,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@createPool_654": {
									"entryPoint": 1947,
									"id": 654,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@customFee_134": {
									"entryPoint": 4109,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeManager_112": {
									"entryPoint": 4930,
									"id": 112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getFee_492": {
									"entryPoint": 4592,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPool_227": {
									"entryPoint": 1198,
									"id": 227,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getPool_248": {
									"entryPoint": 4254,
									"id": 248,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@implementation_96": {
									"entryPoint": 4218,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPaused_98": {
									"entryPoint": 4570,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isPool_261": {
									"entryPoint": 4136,
									"id": 261,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@pauser_100": {
									"entryPoint": 4435,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setCustomFee_460": {
									"entryPoint": 4967,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeManager_370": {
									"entryPoint": 3496,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFee_413": {
									"entryPoint": 5451,
									"id": 413,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPauseState_338": {
									"entryPoint": 4714,
									"id": 338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPauser_316": {
									"entryPoint": 1590,
									"id": 316,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setVoter_284": {
									"entryPoint": 3853,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stableFee_102": {
									"entryPoint": 3394,
									"id": 102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@volatileFee_104": {
									"entryPoint": 4130,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voter_115": {
									"entryPoint": 3459,
									"id": 115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 6049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bool": {
									"entryPoint": 6285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint24": {
									"entryPoint": 6069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 6706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_nonPadded_inplace_fromStack": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address_t_bool__to_t_address_t_address_t_bool__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7019,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bool": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint8": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5919,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_248": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 6768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 6027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8848:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "885:47:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "895:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "917:8:4",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "906:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:20:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "895:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "867:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "877:7:4",
														"type": ""
													}
												],
												"src": "841:91:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "980:78:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1036:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1045:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1048:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1038:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1038:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1038:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1003:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1027:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "1010:16:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1010:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1000:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:42:4"
															},
															"nodeType": "YulIf",
															"src": "990:62:4"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "973:5:4",
														"type": ""
													}
												],
												"src": "938:120:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1115:86:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1125:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1147:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1134:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1125:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1189:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "1163:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:32:4"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1093:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1101:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1109:5:4",
														"type": ""
													}
												],
												"src": "1064:137:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1306:518:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1352:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1354:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1354:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1354:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1348:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1319:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:32:4"
															},
															"nodeType": "YulIf",
															"src": "1316:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1445:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1460:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1464:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1489:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1524:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1535:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1520:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1520:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1499:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1489:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1572:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1587:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1601:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1591:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1617:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1652:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1663:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1648:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1648:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1672:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1627:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1627:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1617:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1700:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1715:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1719:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1745:62:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1779:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1790:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1775:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1775:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1799:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "1755:19:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:52:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1745:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1260:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1271:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1283:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1291:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1299:6:4",
														"type": ""
													}
												],
												"src": "1207:617:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1895:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1912:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1935:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1917:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1917:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1905:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1890:3:4",
														"type": ""
													}
												],
												"src": "1830:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2052:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2062:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2074:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2070:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2062:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2142:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2155:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2166:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2151:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2151:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2098:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2098:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2024:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2036:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2047:4:4",
														"type": ""
													}
												],
												"src": "1954:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2248:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2294:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2296:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2296:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2296:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2269:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2278:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2265:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2265:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2290:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2261:32:4"
															},
															"nodeType": "YulIf",
															"src": "2258:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2387:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2402:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2406:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2431:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2466:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2477:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2462:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2462:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2486:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2441:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2431:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2218:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2229:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2241:6:4",
														"type": ""
													}
												],
												"src": "2182:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2559:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2569:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2594:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2587:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2569:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2541:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2551:7:4",
														"type": ""
													}
												],
												"src": "2517:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2653:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2707:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2719:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2709:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2709:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2709:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2676:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2698:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2683:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2683:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2673:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:40:4"
															},
															"nodeType": "YulIf",
															"src": "2663:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2646:5:4",
														"type": ""
													}
												],
												"src": "2613:116:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2784:84:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2794:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2816:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2803:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2794:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2856:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2832:23:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2762:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2770:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2778:5:4",
														"type": ""
													}
												],
												"src": "2735:133:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:516:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3017:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3019:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3019:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3019:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2992:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3001:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3013:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2984:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:32:4"
															},
															"nodeType": "YulIf",
															"src": "2981:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3110:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3125:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3139:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3129:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3154:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3189:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3200:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3185:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3185:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3209:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3164:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3154:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3237:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3252:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3256:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3282:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3317:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3328:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3313:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3313:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3337:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3292:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3292:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3282:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3365:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3380:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3384:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3410:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3442:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3453:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3438:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3438:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3462:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3420:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3410:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2925:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2936:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2948:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2956:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2964:6:4",
														"type": ""
													}
												],
												"src": "2874:613:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3538:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3548:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3559:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3548:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3520:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3530:7:4",
														"type": ""
													}
												],
												"src": "3493:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3681:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3663:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3663:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3629:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3636:3:4",
														"type": ""
													}
												],
												"src": "3576:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3798:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3808:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3820:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3816:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3808:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3888:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3901:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3912:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3897:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3897:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3844:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3844:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3844:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3770:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3782:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3793:4:4",
														"type": ""
													}
												],
												"src": "3700:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3971:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4030:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3991:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:43:4"
															},
															"nodeType": "YulIf",
															"src": "3981:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3964:5:4",
														"type": ""
													}
												],
												"src": "3928:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4108:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4118:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4140:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4127:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4118:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4183:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4156:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4086:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4094:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4102:5:4",
														"type": ""
													}
												],
												"src": "4056:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4267:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4313:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4315:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4315:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4288:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4297:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4284:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4284:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4309:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:32:4"
															},
															"nodeType": "YulIf",
															"src": "4277:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "4406:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4421:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4425:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4450:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4485:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4496:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4481:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4481:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4505:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4460:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4450:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4237:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4248:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4260:6:4",
														"type": ""
													}
												],
												"src": "4201:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4595:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4612:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4632:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4617:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4617:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4605:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4605:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4583:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4590:3:4",
														"type": ""
													}
												],
												"src": "4536:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4743:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4753:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4765:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4776:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4753:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4827:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4840:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4851:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4836:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4836:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4789:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4789:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4789:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4715:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4727:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4738:4:4",
														"type": ""
													}
												],
												"src": "4651:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4947:388:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4993:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4995:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4995:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4995:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4968:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4977:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4964:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4964:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4960:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4960:32:4"
															},
															"nodeType": "YulIf",
															"src": "4957:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5086:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5101:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5115:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5130:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5165:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5176:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5161:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5161:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5140:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5130:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5213:115:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5228:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5242:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5232:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5258:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5290:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5301:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5286:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5286:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5310:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5268:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5258:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4909:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4920:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4932:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4940:6:4",
														"type": ""
													}
												],
												"src": "4867:468:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:260:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5450:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5452:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5452:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5452:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5425:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5434:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5421:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5446:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5417:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:32:4"
															},
															"nodeType": "YulIf",
															"src": "5414:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5543:114:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5558:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5572:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5562:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5587:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5619:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5630:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5615:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5615:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5639:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5597:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5597:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5587:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5374:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5385:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5397:6:4",
														"type": ""
													}
												],
												"src": "5341:323:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5753:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5799:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5801:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5801:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5801:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5774:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5783:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5770:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5795:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5766:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5766:32:4"
															},
															"nodeType": "YulIf",
															"src": "5763:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "5892:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5907:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5921:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5911:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5936:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5971:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5982:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5967:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5967:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5991:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5946:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5946:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5936:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6019:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6034:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6038:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6064:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6099:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6110:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6095:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6095:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6119:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6074:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6074:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6064:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5715:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5726:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5738:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5746:6:4",
														"type": ""
													}
												],
												"src": "5670:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6230:388:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6276:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6278:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6278:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6278:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6251:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6260:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6247:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6247:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:32:4"
															},
															"nodeType": "YulIf",
															"src": "6240:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "6369:114:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6384:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6398:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6388:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6413:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6445:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6456:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6441:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6441:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6465:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6423:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6423:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6413:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6493:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6508:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6522:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6512:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6538:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6573:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6584:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6569:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6569:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6548:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6548:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6538:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6192:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6203:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6215:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6223:6:4",
														"type": ""
													}
												],
												"src": "6150:468:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6666:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6676:35:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6701:2:4",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6705:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:14:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6676:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6647:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6657:8:4",
														"type": ""
													}
												],
												"src": "6624:94:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6771:47:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6781:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6806:5:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "6792:13:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6792:20:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "6781:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6753:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "6763:7:4",
														"type": ""
													}
												],
												"src": "6724:94:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6871:53:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6881:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6912:5:4"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6892:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6892:26:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "6881:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6853:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "6863:7:4",
														"type": ""
													}
												],
												"src": "6824:100:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7013:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7030:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7073:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7055:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7055:24:4"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7035:19:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7023:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7023:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7023:58:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7001:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7008:3:4",
														"type": ""
													}
												],
												"src": "6930:157:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7136:53:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7146:36:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7171:3:4",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7176:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "7167:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7167:15:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7146:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_248",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7117:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7127:8:4",
														"type": ""
													}
												],
												"src": "7093:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7240:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7250:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7276:5:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_248",
																	"nodeType": "YulIdentifier",
																	"src": "7261:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:21:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "7250:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7222:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "7232:7:4",
														"type": ""
													}
												],
												"src": "7195:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7338:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7348:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7377:5:4"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "7359:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:24:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "7348:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7320:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "7330:7:4",
														"type": ""
													}
												],
												"src": "7294:95:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7472:68:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7489:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7526:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7511:14:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7511:21:4"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7494:16:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7494:39:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7482:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7482:52:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7460:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7467:3:4",
														"type": ""
													}
												],
												"src": "7395:145:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7712:359:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7785:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7794:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7723:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:75:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7723:75:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7807:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7818:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7823:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7814:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7898:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7907:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7836:61:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:75:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7836:75:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7920:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7931:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7936:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7927:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7920:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8005:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8014:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7949:55:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7949:69:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7949:69:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8027:18:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8038:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8043:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8034:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:11:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8027:3:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8055:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8062:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8055:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address_t_bool__to_t_address_t_address_t_bool__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7675:3:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7681:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7689:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7697:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7708:3:4",
														"type": ""
													}
												],
												"src": "7546:525:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8225:282:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8235:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8243:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8243:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8235:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8315:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8328:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8339:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8324:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8324:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8271:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8271:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8396:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8409:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8420:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8405:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8405:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8352:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8352:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8472:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8485:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8496:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8481:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8481:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8434:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8434:66:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8434:66:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8181:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8193:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8201:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8209:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8220:4:4",
														"type": ""
													}
												],
												"src": "8077:430:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8639:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8649:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8661:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8672:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8657:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8649:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8729:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8753:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8685:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8810:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8823:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8834:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8819:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8819:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8766:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8766:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8766:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8603:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8615:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8623:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8634:4:4",
														"type": ""
													}
												],
												"src": "8513:332:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint24(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function leftAlign_t_bool(value) -> aligned {\n        aligned := leftAlign_t_uint8(value)\n    }\n\n    function abi_encode_t_bool_to_t_bool_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bool(cleanup_t_bool(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_bool__to_t_address_t_address_t_bool__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bool_to_t_bool_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 1)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"96": [
									{
										"length": 32,
										"start": 2539
									},
									{
										"length": 32,
										"start": 4220
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610156575f3560e01c80635c60da1b116100c1578063cc56b2c51161007a578063cc56b2c5146103ee578063cdb88ad11461041e578063d0fb02031461043a578063d49466a814610458578063e1f76b4414610474578063efde4e641461049057610156565b80635c60da1b1461031657806379bc57d5146103345780639fd0506d14610364578063a167129514610382578063b187bd26146103b2578063bc063e1a146103d057610156565b806346c96aac1161011357806346c96aac14610242578063472d35b9146102605780634bc2a6571461027c5780634d419abc146102985780635084ed03146102c85780635b16ebb7146102e657610156565b80631698ee821461015a5780632d88af4a1461018a57806336bf95a0146101a657806338c55d46146101d657806340bbd775146101f457806341d1de9714610212575b5f80fd5b610174600480360381019061016f91906117b5565b6104ae565b6040516101819190611814565b60405180910390f35b6101a4600480360381019061019f919061182d565b610636565b005b6101c060048036038101906101bb919061188d565b61079b565b6040516101cd9190611814565b60405180910390f35b6101de610d3c565b6040516101eb91906118f5565b60405180910390f35b6101fc610d42565b60405161020991906118f5565b60405180910390f35b61022c60048036038101906102279190611938565b610d48565b6040516102399190611814565b60405180910390f35b61024a610d83565b6040516102579190611814565b60405180910390f35b61027a6004803603810190610275919061182d565b610da8565b005b6102966004803603810190610291919061182d565b610f0d565b005b6102b260048036038101906102ad919061182d565b61100d565b6040516102bf91906118f5565b60405180910390f35b6102d0611022565b6040516102dd91906118f5565b60405180910390f35b61030060048036038101906102fb919061182d565b611028565b60405161030d9190611972565b60405180910390f35b61031e61107a565b60405161032b9190611814565b60405180910390f35b61034e6004803603810190610349919061188d565b61109e565b60405161035b9190611814565b60405180910390f35b61036c611153565b6040516103799190611814565b60405180910390f35b61039c600480360381019061039791906117b5565b611178565b6040516103a99190611814565b60405180910390f35b6103ba6111da565b6040516103c79190611972565b60405180910390f35b6103d86111ea565b6040516103e591906118f5565b60405180910390f35b6104086004803603810190610403919061198b565b6111f0565b60405161041591906118f5565b60405180910390f35b610438600480360381019061043391906119c9565b61126a565b005b610442611342565b60405161044f9190611814565b60405180910390f35b610472600480360381019061046d91906119f4565b611367565b005b61048e60048036038101906104899190611a32565b61154b565b005b610498611664565b6040516104a591906118f5565b60405180910390f35b5f60018262ffffff161161062b5760018262ffffff16146105795760055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f801515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610626565b60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f60011515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b61062d565b5f5b90509392505050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bc576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610721576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35816040516107909190611814565b60405180910390a150565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610801576040517f367558c300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161061083d578486610840565b85855b915091505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a9576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f861515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109b8576040517f0311932200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8282866040516020016109ce93929190611afa565b604051602081830303815290604052805190602001209050610a107f000000000000000000000000000000000000000000000000000000000000000082611670565b93508373ffffffffffffffffffffffffffffffffffffffff1663e4bbb5a88484886040518463ffffffff1660e01b8152600401610a4f93929190611b36565b5f604051808303815f87803b158015610a66575f80fd5b505af1158015610a78573d5f803e3d5ffd5b505050508360055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f871515151581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508360055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f871515151581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600684908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508415158273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2128d88d14c80cb081c1252a5acff7a264671bf199ce226b53788fb26065005e87600680549050604051610d2a929190611b6b565b60405180910390a45050509392505050565b6101a481565b60015481565b60068181548110610d57575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e2e576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e93576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b281604051610f029190611814565b60405180910390a150565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f93576040517fc18384c100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2816040516110029190611814565b60405180910390a150565b6008602052805f5260405f205f915090505481565b60025481565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f831515151581526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690509392505050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60018262ffffff1611156111b9576040517f52dadcf900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60018362ffffff161490506111d085858361079b565b9150509392505050565b5f8054906101000a900460ff1681565b61012c81565b5f8060085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506101a4811461125f575f8103611258578261124f57600254611253565b6001545b61125a565b805b611261565b5f5b91505092915050565b5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112f0576040517f492f678100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f806101000a81548160ff0219169083151502179055507f0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116816040516113379190611972565b60405180910390a150565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113ed576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c8111801561140057506101a48114155b15611437576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166114b7576040517f2083cd4000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fae468ce586f9a87660fdffc1448cee942042c16ae2f02046b134b5224f31936b8260405161153f91906118f5565b60405180910390a25050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146115d1576040517ff5d267eb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61012c81111561160d576040517fcd4e616700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8103611646576040517faf13986d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81156116585780600181905550611660565b806002819055505b5050565b5f600680549050905090565b5f763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c175f526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760095ff590505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611719576040517fc2f868f400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61174c82611723565b9050919050565b61175c81611742565b8114611766575f80fd5b50565b5f8135905061177781611753565b92915050565b5f62ffffff82169050919050565b6117948161177d565b811461179e575f80fd5b50565b5f813590506117af8161178b565b92915050565b5f805f606084860312156117cc576117cb61171f565b5b5f6117d986828701611769565b93505060206117ea86828701611769565b92505060406117fb868287016117a1565b9150509250925092565b61180e81611742565b82525050565b5f6020820190506118275f830184611805565b92915050565b5f602082840312156118425761184161171f565b5b5f61184f84828501611769565b91505092915050565b5f8115159050919050565b61186c81611858565b8114611876575f80fd5b50565b5f8135905061188781611863565b92915050565b5f805f606084860312156118a4576118a361171f565b5b5f6118b186828701611769565b93505060206118c286828701611769565b92505060406118d386828701611879565b9150509250925092565b5f819050919050565b6118ef816118dd565b82525050565b5f6020820190506119085f8301846118e6565b92915050565b611917816118dd565b8114611921575f80fd5b50565b5f813590506119328161190e565b92915050565b5f6020828403121561194d5761194c61171f565b5b5f61195a84828501611924565b91505092915050565b61196c81611858565b82525050565b5f6020820190506119855f830184611963565b92915050565b5f80604083850312156119a1576119a061171f565b5b5f6119ae85828601611769565b92505060206119bf85828601611879565b9150509250929050565b5f602082840312156119de576119dd61171f565b5b5f6119eb84828501611879565b91505092915050565b5f8060408385031215611a0a57611a0961171f565b5b5f611a1785828601611769565b9250506020611a2885828601611924565b9150509250929050565b5f8060408385031215611a4857611a4761171f565b5b5f611a5585828601611879565b9250506020611a6685828601611924565b9150509250929050565b5f8160601b9050919050565b5f611a8682611a70565b9050919050565b5f611a9782611a7c565b9050919050565b611aaf611aaa82611742565b611a8d565b82525050565b5f8160f81b9050919050565b5f611acb82611ab5565b9050919050565b5f611adc82611ac1565b9050919050565b611af4611aef82611858565b611ad2565b82525050565b5f611b058286611a9e565b601482019150611b158285611a9e565b601482019150611b258284611ae3565b600182019150819050949350505050565b5f606082019050611b495f830186611805565b611b566020830185611805565b611b636040830184611963565b949350505050565b5f604082019050611b7e5f830185611805565b611b8b60208301846118e6565b939250505056fea2646970667358221220e6a325e6739556824642f7da5fc2e96454a94c785ede558bf812524c4b9e1a5c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x156 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C60DA1B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xCC56B2C5 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xCC56B2C5 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xCDB88AD1 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xD0FB0203 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xD49466A8 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xE1F76B44 EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xEFDE4E64 EQ PUSH2 0x490 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x79BC57D5 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x9FD0506D EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xA1671295 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x3D0 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x46C96AAC GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x46C96AAC EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x472D35B9 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x4BC2A657 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x4D419ABC EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x5084ED03 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x5B16EBB7 EQ PUSH2 0x2E6 JUMPI PUSH2 0x156 JUMP JUMPDEST DUP1 PUSH4 0x1698EE82 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x2D88AF4A EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x36BF95A0 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x38C55D46 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x40BBD775 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x212 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0xD83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x257 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xDA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x182D JUMP JUMPDEST PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x188D JUMP JUMPDEST PUSH2 0x109E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0x11DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0x11EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x126A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x442 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x472 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x19F4 JUMP JUMPDEST PUSH2 0x1367 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0x154B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x498 PUSH2 0x1664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND GT PUSH2 0x62B JUMPI PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND EQ PUSH2 0x579 JUMPI PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x626 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH1 0x1 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH0 JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xE02EFB9E8F0FC21546730AB32D594F62D586E1BBB15BB5045EDD0B1878A77B35 DUP2 PUSH1 0x40 MLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH32 0x367558C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x83D JUMPI DUP5 DUP7 PUSH2 0x840 JUMP JUMPDEST DUP6 DUP6 JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x311932200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0xA10 PUSH32 0x0 DUP3 PUSH2 0x1670 JUMP JUMPDEST SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4BBB5A8 DUP5 DUP5 DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP8 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP5 ISZERO ISZERO DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2128D88D14C80CB081C1252A5ACFF7A264671BF199CE226B53788FB26065005E DUP8 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD PUSH2 0xD2A SWAP3 SWAP2 SWAP1 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A4 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD57 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x5D0517E3A4EABEA892D9750138CD21D4A6CF3B935B43D0598DF7055F463819B2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF93 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC18384C100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC6FF127433B785C51DA9AE4088EE184C909B1A55B9AFD82AE6C64224D3BC15D2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH3 0xFFFFFF AND GT ISZERO PUSH2 0x11B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x52DADCF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP4 PUSH3 0xFFFFFF AND EQ SWAP1 POP PUSH2 0x11D0 DUP6 DUP6 DUP4 PUSH2 0x79B JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x12C DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x1A4 DUP2 EQ PUSH2 0x125F JUMPI PUSH0 DUP2 SUB PUSH2 0x1258 JUMPI DUP3 PUSH2 0x124F JUMPI PUSH1 0x2 SLOAD PUSH2 0x1253 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH2 0x125A JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x1261 JUMP JUMPDEST PUSH0 JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x492F678100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD76538EFC408318A051137C2720A9E82902ACDBD46B802D488B74CA3A09A116 DUP2 PUSH1 0x40 MLOAD PUSH2 0x1337 SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT DUP1 ISZERO PUSH2 0x1400 JUMPI POP PUSH2 0x1A4 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x1437 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2083CD4000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAE468CE586F9A87660FDFFC1448CEE942042C16AE2F02046B134B5224F31936B DUP3 PUSH1 0x40 MLOAD PUSH2 0x153F SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF5D267EB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C DUP2 GT ISZERO PUSH2 0x160D JUMPI PUSH1 0x40 MLOAD PUSH32 0xCD4E616700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 SUB PUSH2 0x1646 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAF13986D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1658 JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1660 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH0 CREATE2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1719 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC2F868F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x174C DUP3 PUSH2 0x1723 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1742 JUMP JUMPDEST DUP2 EQ PUSH2 0x1766 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1777 DUP2 PUSH2 0x1753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1794 DUP2 PUSH2 0x177D JUMP JUMPDEST DUP2 EQ PUSH2 0x179E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17AF DUP2 PUSH2 0x178B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17D9 DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17EA DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17FB DUP7 DUP3 DUP8 ADD PUSH2 0x17A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x180E DUP2 PUSH2 0x1742 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1827 PUSH0 DUP4 ADD DUP5 PUSH2 0x1805 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1842 JUMPI PUSH2 0x1841 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x184F DUP5 DUP3 DUP6 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x186C DUP2 PUSH2 0x1858 JUMP JUMPDEST DUP2 EQ PUSH2 0x1876 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1887 DUP2 PUSH2 0x1863 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18A4 JUMPI PUSH2 0x18A3 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B1 DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18C2 DUP7 DUP3 DUP8 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18D3 DUP7 DUP3 DUP8 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18EF DUP2 PUSH2 0x18DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1908 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1917 DUP2 PUSH2 0x18DD JUMP JUMPDEST DUP2 EQ PUSH2 0x1921 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1932 DUP2 PUSH2 0x190E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194D JUMPI PUSH2 0x194C PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x195A DUP5 DUP3 DUP6 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x196C DUP2 PUSH2 0x1858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1985 PUSH0 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x19A0 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19AE DUP6 DUP3 DUP7 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19BF DUP6 DUP3 DUP7 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DE JUMPI PUSH2 0x19DD PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19EB DUP5 DUP3 DUP6 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A0A JUMPI PUSH2 0x1A09 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A17 DUP6 DUP3 DUP7 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A28 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x171F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A55 DUP6 DUP3 DUP7 ADD PUSH2 0x1879 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A66 DUP6 DUP3 DUP7 ADD PUSH2 0x1924 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A86 DUP3 PUSH2 0x1A70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A97 DUP3 PUSH2 0x1A7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAF PUSH2 0x1AAA DUP3 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACB DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1ADC DUP3 PUSH2 0x1AC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AF4 PUSH2 0x1AEF DUP3 PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1AD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B05 DUP3 DUP7 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1B15 DUP3 DUP6 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1B25 DUP3 DUP5 PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B49 PUSH0 DUP4 ADD DUP7 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x1B56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x1B63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1963 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B7E PUSH0 DUP4 ADD DUP6 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x1B8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 LOG3 0x25 0xE6 PUSH20 0x9556824642F7DA5FC2E96454A94C785EDE558BF8 SLT MSTORE 0x4C 0x4B SWAP15 BYTE 0x5C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "246:5071:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2451:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4402:913;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;645:48;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;389:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;815:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2288:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1104:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;289:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1964:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;361:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4135:228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;335:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;451:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3877:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2679:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;699:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3514:324;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1574:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1710:215;1794:7;1826:1;1820:3;:7;;;:98;;1850:1;1843:3;:8;;;:75;;1887:8;:16;1896:6;1887:16;;;;;;;;;;;;;;;:24;1904:6;1887:24;;;;;;;;;;;;;;;:31;1912:5;1887:31;;;;;;;;;;;;;;;;;;;;;;;;;1843:75;;;1854:8;:16;1863:6;1854:16;;;;;;;;;;;;;;;:24;1871:6;1854:24;;;;;;;;;;;;;;;:30;1879:4;1854:30;;;;;;;;;;;;;;;;;;;;;;;;;1843:75;1820:98;;;1838:1;1820:98;1813:105;;1710:215;;;;;:::o;2451:222::-;2524:6;;;;;;;;;;;2510:20;;:10;:20;;;2506:44;;2539:11;;;;;;;;;;;;;;2506:44;2583:1;2564:21;;:7;:21;;;2560:47;;2594:13;;;;;;;;;;;;;;2560:47;2626:7;2617:6;;:16;;;;;;;;;;;;;;;;;;2648:18;2658:7;2648:18;;;;;;:::i;:::-;;;;;;;;2451:222;:::o;4402:913::-;4483:12;4521:6;4511:16;;:6;:16;;;4507:42;;4536:13;;;;;;;;;;;;;;4507:42;4560:14;4576;4603:6;4594:15;;:6;:15;;;:53;;4632:6;4640;4594:53;;;4613:6;4621;4594:53;4559:88;;;;4679:1;4661:20;;:6;:20;;;4657:46;;4690:13;;;;;;;;;;;;;;4657:46;4761:1;4717:46;;:8;:16;4726:6;4717:16;;;;;;;;;;;;;;;:24;4734:6;4717:24;;;;;;;;;;;;;;;:32;4742:6;4717:32;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;4713:78;;4772:19;;;;;;;;;;;;;;4713:78;4801:12;4843:6;4851;4859;4826:40;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4816:51;;;;;;4801:66;;4930:47;4956:14;4972:4;4930:25;:47::i;:::-;4923:54;;4993:4;4987:22;;;5010:6;5018;5026;4987:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5078:4;5043:8;:16;5052:6;5043:16;;;;;;;;;;;;;;;:24;5060:6;5043:24;;;;;;;;;;;;;;;:32;5068:6;5043:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;5127:4;5092:8;:16;5101:6;5092:16;;;;;;;;;;;;;;;:24;5109:6;5092:24;;;;;;;;;;;;;;;:32;5117:6;5092:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;5186:8;5200:4;5186:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5231:4;5215:7;:13;5223:4;5215:13;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;;;;;;;5278:6;5250:58;;5270:6;5250:58;;5262:6;5250:58;;;5286:4;5292:8;:15;;;;5250:58;;;;;;;:::i;:::-;;;;;;;;4497:818;;;4402:913;;;;;:::o;645:48::-;690:3;645:48;:::o;389:24::-;;;;:::o;929:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;815:20::-;;;;;;;;;;;;;:::o;2854:258::-;2935:10;;;;;;;;;;;2921:24;;:10;:24;;;2917:52;;2954:15;;;;;;;;;;;;;;2917:52;3006:1;2983:25;;:11;:25;;;2979:51;;3017:13;;;;;;;;;;;;;;2979:51;3053:11;3040:10;;:24;;;;;;;;;;;;;;;;;;3079:26;3093:11;3079:26;;;;;;:::i;:::-;;;;;;;;2854:258;:::o;2288:157::-;2359:5;;;;;;;;;;;2345:19;;:10;:19;;;2341:42;;2373:10;;;;;;;;;;;;;;2341:42;2401:6;2393:5;;:14;;;;;;;;;;;;;;;;;;2422:16;2431:6;2422:16;;;;;;:::i;:::-;;;;;;;;2288:157;:::o;1104:44::-;;;;;;;;;;;;;;;;;:::o;419:26::-;;;;:::o;2153:96::-;2206:4;2229:7;:13;2237:4;2229:13;;;;;;;;;;;;;;;;;;;;;;;;;2222:20;;2153:96;;;:::o;289:39::-;;;:::o;1964:150::-;2049:7;2075:8;:16;2084:6;2075:16;;;;;;;;;;;;;;;:24;2092:6;2075:24;;;;;;;;;;;;;;;:32;2100:6;2075:32;;;;;;;;;;;;;;;;;;;;;;;;;2068:39;;1964:150;;;;;:::o;361:21::-;;;;;;;;;;;;;:::o;4135:228::-;4217:12;4251:1;4245:3;:7;;;4241:32;;;4261:12;;;;;;;;;;;;;;4241:32;4283:11;4304:1;4297:3;:8;;;4283:22;;4322:34;4333:6;4341;4349;4322:10;:34::i;:::-;4315:41;;;4135:228;;;;;:::o;335:20::-;;;;;;;;;;;;:::o;451:37::-;485:3;451:37;:::o;3877:219::-;3942:7;3961:11;3975:9;:15;3985:4;3975:15;;;;;;;;;;;;;;;;3961:29;;690:3;4007;:25;:82;;4046:1;4039:3;:8;:50;;4056:7;:33;;4078:11;;4056:33;;;4066:9;;4056:33;4039:50;;;4050:3;4039:50;4007:82;;;4035:1;4007:82;4000:89;;;3877:219;;;;:::o;2679:169::-;2752:6;;;;;;;;;;;2738:20;;:10;:20;;;2734:44;;2767:11;;;;;;;;;;;;;;2734:44;2799:6;2788:8;;:17;;;;;;;;;;;;;;;;;;2820:21;2834:6;2820:21;;;;;;:::i;:::-;;;;;;;;2679:169;:::o;699:25::-;;;;;;;;;;;;;:::o;3514:324::-;3600:10;;;;;;;;;;;3586:24;;:10;:24;;;3582:52;;3619:15;;;;;;;;;;;;;;3582:52;485:3;3648;:13;:42;;;;;690:3;3665;:25;;3648:42;3644:67;;;3699:12;;;;;;;;;;;;;;3644:67;3726:7;:13;3734:4;3726:13;;;;;;;;;;;;;;;;;;;;;;;;;3721:40;;3748:13;;;;;;;;;;;;;;3721:40;3790:3;3772:9;:15;3782:4;3772:15;;;;;;;;;;;;;;;:21;;;;3821:4;3808:23;;;3827:3;3808:23;;;;;;:::i;:::-;;;;;;;;3514:324;;:::o;3151:::-;3232:10;;;;;;;;;;;3218:24;;:10;:24;;;3214:52;;3251:15;;;;;;;;;;;;;;3214:52;485:3;3280:4;:14;3276:39;;;3303:12;;;;;;;;;;;;;;3276:39;3337:1;3329:4;:9;3325:31;;3347:9;;;;;;;;;;;;;;3325:31;3370:7;3366:103;;;3405:4;3393:9;:16;;;;3366:103;;;3454:4;3440:11;:18;;;;3366:103;3151:324;;:::o;1574:97::-;1623:7;1649:8;:15;;;;1642:22;;1574:97;:::o;2209:821:0:-;2293:16;2625:48;2607:14;2601:4;2597:25;2591:4;2587:36;2584:90;2578:4;2571:104;2832:32;2815:14;2809:4;2805:25;2802:63;2796:4;2789:77;2914:4;2908;2902;2899:1;2891:28;2879:40;;2962:1;2942:22;;:8;:22;;;2938:86;;2987:26;;;;;;;;;;;;;;2938:86;2209:821;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:91::-;877:7;917:8;910:5;906:20;895:31;;841:91;;;:::o;938:120::-;1010:23;1027:5;1010:23;:::i;:::-;1003:5;1000:34;990:62;;1048:1;1045;1038:12;990:62;938:120;:::o;1064:137::-;1109:5;1147:6;1134:20;1125:29;;1163:32;1189:5;1163:32;:::i;:::-;1064:137;;;;:::o;1207:617::-;1283:6;1291;1299;1348:2;1336:9;1327:7;1323:23;1319:32;1316:119;;;1354:79;;:::i;:::-;1316:119;1474:1;1499:53;1544:7;1535:6;1524:9;1520:22;1499:53;:::i;:::-;1489:63;;1445:117;1601:2;1627:53;1672:7;1663:6;1652:9;1648:22;1627:53;:::i;:::-;1617:63;;1572:118;1729:2;1755:52;1799:7;1790:6;1779:9;1775:22;1755:52;:::i;:::-;1745:62;;1700:117;1207:617;;;;;:::o;1830:118::-;1917:24;1935:5;1917:24;:::i;:::-;1912:3;1905:37;1830:118;;:::o;1954:222::-;2047:4;2085:2;2074:9;2070:18;2062:26;;2098:71;2166:1;2155:9;2151:17;2142:6;2098:71;:::i;:::-;1954:222;;;;:::o;2182:329::-;2241:6;2290:2;2278:9;2269:7;2265:23;2261:32;2258:119;;;2296:79;;:::i;:::-;2258:119;2416:1;2441:53;2486:7;2477:6;2466:9;2462:22;2441:53;:::i;:::-;2431:63;;2387:117;2182:329;;;;:::o;2517:90::-;2551:7;2594:5;2587:13;2580:21;2569:32;;2517:90;;;:::o;2613:116::-;2683:21;2698:5;2683:21;:::i;:::-;2676:5;2673:32;2663:60;;2719:1;2716;2709:12;2663:60;2613:116;:::o;2735:133::-;2778:5;2816:6;2803:20;2794:29;;2832:30;2856:5;2832:30;:::i;:::-;2735:133;;;;:::o;2874:613::-;2948:6;2956;2964;3013:2;3001:9;2992:7;2988:23;2984:32;2981:119;;;3019:79;;:::i;:::-;2981:119;3139:1;3164:53;3209:7;3200:6;3189:9;3185:22;3164:53;:::i;:::-;3154:63;;3110:117;3266:2;3292:53;3337:7;3328:6;3317:9;3313:22;3292:53;:::i;:::-;3282:63;;3237:118;3394:2;3420:50;3462:7;3453:6;3442:9;3438:22;3420:50;:::i;:::-;3410:60;;3365:115;2874:613;;;;;:::o;3493:77::-;3530:7;3559:5;3548:16;;3493:77;;;:::o;3576:118::-;3663:24;3681:5;3663:24;:::i;:::-;3658:3;3651:37;3576:118;;:::o;3700:222::-;3793:4;3831:2;3820:9;3816:18;3808:26;;3844:71;3912:1;3901:9;3897:17;3888:6;3844:71;:::i;:::-;3700:222;;;;:::o;3928:122::-;4001:24;4019:5;4001:24;:::i;:::-;3994:5;3991:35;3981:63;;4040:1;4037;4030:12;3981:63;3928:122;:::o;4056:139::-;4102:5;4140:6;4127:20;4118:29;;4156:33;4183:5;4156:33;:::i;:::-;4056:139;;;;:::o;4201:329::-;4260:6;4309:2;4297:9;4288:7;4284:23;4280:32;4277:119;;;4315:79;;:::i;:::-;4277:119;4435:1;4460:53;4505:7;4496:6;4485:9;4481:22;4460:53;:::i;:::-;4450:63;;4406:117;4201:329;;;;:::o;4536:109::-;4617:21;4632:5;4617:21;:::i;:::-;4612:3;4605:34;4536:109;;:::o;4651:210::-;4738:4;4776:2;4765:9;4761:18;4753:26;;4789:65;4851:1;4840:9;4836:17;4827:6;4789:65;:::i;:::-;4651:210;;;;:::o;4867:468::-;4932:6;4940;4989:2;4977:9;4968:7;4964:23;4960:32;4957:119;;;4995:79;;:::i;:::-;4957:119;5115:1;5140:53;5185:7;5176:6;5165:9;5161:22;5140:53;:::i;:::-;5130:63;;5086:117;5242:2;5268:50;5310:7;5301:6;5290:9;5286:22;5268:50;:::i;:::-;5258:60;;5213:115;4867:468;;;;;:::o;5341:323::-;5397:6;5446:2;5434:9;5425:7;5421:23;5417:32;5414:119;;;5452:79;;:::i;:::-;5414:119;5572:1;5597:50;5639:7;5630:6;5619:9;5615:22;5597:50;:::i;:::-;5587:60;;5543:114;5341:323;;;;:::o;5670:474::-;5738:6;5746;5795:2;5783:9;5774:7;5770:23;5766:32;5763:119;;;5801:79;;:::i;:::-;5763:119;5921:1;5946:53;5991:7;5982:6;5971:9;5967:22;5946:53;:::i;:::-;5936:63;;5892:117;6048:2;6074:53;6119:7;6110:6;6099:9;6095:22;6074:53;:::i;:::-;6064:63;;6019:118;5670:474;;;;;:::o;6150:468::-;6215:6;6223;6272:2;6260:9;6251:7;6247:23;6243:32;6240:119;;;6278:79;;:::i;:::-;6240:119;6398:1;6423:50;6465:7;6456:6;6445:9;6441:22;6423:50;:::i;:::-;6413:60;;6369:114;6522:2;6548:53;6593:7;6584:6;6573:9;6569:22;6548:53;:::i;:::-;6538:63;;6493:118;6150:468;;;;;:::o;6624:94::-;6657:8;6705:5;6701:2;6697:14;6676:35;;6624:94;;;:::o;6724:::-;6763:7;6792:20;6806:5;6792:20;:::i;:::-;6781:31;;6724:94;;;:::o;6824:100::-;6863:7;6892:26;6912:5;6892:26;:::i;:::-;6881:37;;6824:100;;;:::o;6930:157::-;7035:45;7055:24;7073:5;7055:24;:::i;:::-;7035:45;:::i;:::-;7030:3;7023:58;6930:157;;:::o;7093:96::-;7127:8;7176:5;7171:3;7167:15;7146:36;;7093:96;;;:::o;7195:93::-;7232:7;7261:21;7276:5;7261:21;:::i;:::-;7250:32;;7195:93;;;:::o;7294:95::-;7330:7;7359:24;7377:5;7359:24;:::i;:::-;7348:35;;7294:95;;;:::o;7395:145::-;7494:39;7511:21;7526:5;7511:21;:::i;:::-;7494:39;:::i;:::-;7489:3;7482:52;7395:145;;:::o;7546:525::-;7708:3;7723:75;7794:3;7785:6;7723:75;:::i;:::-;7823:2;7818:3;7814:12;7807:19;;7836:75;7907:3;7898:6;7836:75;:::i;:::-;7936:2;7931:3;7927:12;7920:19;;7949:69;8014:3;8005:6;7949:69;:::i;:::-;8043:1;8038:3;8034:11;8027:18;;8062:3;8055:10;;7546:525;;;;;;:::o;8077:430::-;8220:4;8258:2;8247:9;8243:18;8235:26;;8271:71;8339:1;8328:9;8324:17;8315:6;8271:71;:::i;:::-;8352:72;8420:2;8409:9;8405:18;8396:6;8352:72;:::i;:::-;8434:66;8496:2;8485:9;8481:18;8472:6;8434:66;:::i;:::-;8077:430;;;;;;:::o;8513:332::-;8634:4;8672:2;8661:9;8657:18;8649:26;;8685:71;8753:1;8742:9;8738:17;8729:6;8685:71;:::i;:::-;8766:72;8834:2;8823:9;8819:18;8810:6;8766:72;:::i;:::-;8513:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1422400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_FEE()": "458",
								"ZERO_FEE_INDICATOR()": "415",
								"allPools(uint256)": "5078",
								"allPoolsLength()": "2572",
								"createPool(address,address,bool)": "infinite",
								"createPool(address,address,uint24)": "infinite",
								"customFee(address)": "2891",
								"feeManager()": "2574",
								"getFee(address,bool)": "5236",
								"getPool(address,address,bool)": "infinite",
								"getPool(address,address,uint24)": "infinite",
								"implementation()": "infinite",
								"isPaused()": "2574",
								"isPool(address)": "3003",
								"pauser()": "2625",
								"setCustomFee(address,uint256)": "infinite",
								"setFee(bool,uint256)": "25050",
								"setFeeManager(address)": "infinite",
								"setPauseState(bool)": "infinite",
								"setPauser(address)": "infinite",
								"setVoter(address)": "infinite",
								"stableFee()": "2537",
								"volatileFee()": "2536",
								"voter()": "2531"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1267,
									"end": 1535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1374,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1361,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1356,
									"end": 1361,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1393,
									"end": 1403,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1390,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1384,
									"end": 1390,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1436,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1413,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1413,
									"end": 1436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1457,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1454,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1446,
									"end": 1462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1472,
									"end": 1481,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1472,
									"end": 1485,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1485,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1485,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1518,
									"end": 1520,
									"name": "PUSH",
									"source": 1,
									"value": "1E"
								},
								{
									"begin": 1504,
									"end": 1515,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1504,
									"end": 1520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1520,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1504,
									"end": 1520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1267,
									"end": 1535,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 5317,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e6a325e6739556824642f7da5fc2e96454a94c785ede558bf812524c4b9e1a5c64736f6c63430008140033",
									".code": [
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "5C60DA1B"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "CC56B2C5"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "CC56B2C5"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "CDB88AD1"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "D0FB0203"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "D49466A8"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "E1F76B44"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "EFDE4E64"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "5C60DA1B"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "79BC57D5"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "9FD0506D"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "A1671295"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "B187BD26"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "BC063E1A"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "46C96AAC"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "46C96AAC"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "472D35B9"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "4BC2A657"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "4D419ABC"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "5084ED03"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "5B16EBB7"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "1698EE82"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "2D88AF4A"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "36BF95A0"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "38C55D46"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "40BBD775"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "41D1DE97"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 5317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1710,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1710,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1710,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2451,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2451,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4402,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4402,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4402,
											"end": 5315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 645,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 645,
											"end": 693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 389,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 389,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 929,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 929,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 929,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 815,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 815,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2854,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2854,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2288,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2288,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1104,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1104,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1104,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 419,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 419,
											"end": 445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2153,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2153,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2153,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 289,
											"end": 328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 289,
											"end": 328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1964,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1964,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1964,
											"end": 2114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 361,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 361,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4135,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4135,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4135,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 451,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 451,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3877,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3877,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3877,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2679,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2679,
											"end": 2848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 699,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 699,
											"end": 724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3514,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3514,
											"end": 3838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3151,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3151,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1574,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1574,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1820,
											"end": 1823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1827,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1843,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1851,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1895,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1903,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1911,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1887,
											"end": 1918,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1862,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1870,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1878,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1843,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1820,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2520,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2506,
											"end": 2550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "492F678100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2506,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2506,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2560,
											"end": 2607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2607,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2560,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "E02EFB9E8F0FC21546730AB32D594F62D586E1BBB15BB5045EDD0B1878A77B35"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2648,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4507,
											"end": 4549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "PUSH",
											"source": 1,
											"value": "367558C300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4507,
											"end": 4549,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4507,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4560,
											"end": 4574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4590,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4594,
											"end": 4609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4600,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4609,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4594,
											"end": 4609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4627,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4594,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4681,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4657,
											"end": 4703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4657,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4732,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4733,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4741,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4749,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4763,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4763,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4713,
											"end": 4791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "311932200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4791,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4713,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 4865,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4826,
											"end": 4866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4826,
											"end": 4866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4816,
											"end": 4867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4816,
											"end": 4867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4816,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4816,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4816,
											"end": 4867,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4956,
											"end": 4970,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4972,
											"end": 4976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4930,
											"end": 4977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4930,
											"end": 4977,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4930,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4977,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5009,
											"name": "PUSH",
											"source": 1,
											"value": "E4BBB5A8"
										},
										{
											"begin": 5010,
											"end": 5016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5024,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4987,
											"end": 5033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5051,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5074,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5100,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5108,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5109,
											"end": 5115,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5194,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5200,
											"end": 5204,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5215,
											"end": 5222,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5227,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5215,
											"end": 5235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5284,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "2128D88D14C80CB081C1252A5ACFF7A264671BF199CE226B53788FB26065005E"
										},
										{
											"begin": 5286,
											"end": 5290,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5250,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5250,
											"end": 5308,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 4497,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4497,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4497,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 5315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 690,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "1A4"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 413,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 929,
											"end": 954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 929,
											"end": 954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2931,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2921,
											"end": 2945,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2969,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2917,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3008,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2983,
											"end": 3008,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2979,
											"end": 3030,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3030,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2979,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3040,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "5D0517E3A4EABEA892D9750138CD21D4A6CF3B935B43D0598DF7055F463819B2"
										},
										{
											"begin": 3093,
											"end": 3104,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3079,
											"end": 3105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3079,
											"end": 3105,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 3112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2355,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2341,
											"end": 2383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "C18384C100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2383,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2383,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2341,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "C6FF127433B785C51DA9AE4088EE184C909B1A55B9AFD82AE6C64224D3BC15D2"
										},
										{
											"begin": 2431,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2422,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2422,
											"end": 2438,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2229,
											"end": 2242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 289,
											"end": 328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 289,
											"end": 328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2091,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2099,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2075,
											"end": 2107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2107,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 2114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 361,
											"end": 382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 361,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4245,
											"end": 4248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 4245,
											"end": 4252,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4252,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4241,
											"end": 4273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "52DADCF900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4273,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4241,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4297,
											"end": 4300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4333,
											"end": 4339,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4322,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4356,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4322,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 485,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 451,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 451,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 3949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3989,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3990,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "1A4"
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4032,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4078,
											"end": 4089,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4056,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4039,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4007,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2748,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2738,
											"end": 2758,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2758,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2734,
											"end": 2778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "492F678100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2734,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2796,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "D76538EFC408318A051137C2720A9E82902ACDBD46B802D488B74CA3A09A116"
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2820,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2841,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 699,
											"end": 724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 699,
											"end": 724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3586,
											"end": 3610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3596,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3610,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3586,
											"end": 3610,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3610,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3582,
											"end": 3634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3634,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3582,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 485,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 3648,
											"end": 3651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3661,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 693,
											"name": "PUSH",
											"source": 1,
											"value": "1A4"
										},
										{
											"begin": 3665,
											"end": 3668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3690,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3690,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3648,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "CD4E616700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3711,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3726,
											"end": 3739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3721,
											"end": 3761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "PUSH",
											"source": 1,
											"value": "2083CD4000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3761,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3761,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3721,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "AE468CE586F9A87660FDFFC1448CEE942042C16AE2F02046B134B5224F31936B"
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3808,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3232,
											"end": 3242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3228,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3242,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3242,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "F5D267EB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3214,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 485,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "12C"
										},
										{
											"begin": 3280,
											"end": 3284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3294,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "CD4E616700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3276,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3325,
											"end": 3356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "AF13986D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3356,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 3325,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3370,
											"end": 3377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3454,
											"end": 3458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3366,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1657,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1649,
											"end": 1664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1664,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2209,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2673,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2607,
											"end": 2621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2622,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2591,
											"end": 2595,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2674,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2864,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2805,
											"end": 2830,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2802,
											"end": 2865,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2902,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2919,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2942,
											"end": 2950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2942,
											"end": 2964,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2942,
											"end": 2964,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2938,
											"end": 3024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "C2F868F400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 3024,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2938,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 3030,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 3030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 3030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2209,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 932,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 841,
											"end": 932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 877,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 910,
											"end": 915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 906,
											"end": 926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 895,
											"end": 926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 932,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 841,
											"end": 932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 938,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1027,
											"end": 1032,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1010,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1010,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 990,
											"end": 1052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1050,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1052,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 990,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 938,
											"end": 1058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 938,
											"end": 1058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1064,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1109,
											"end": 1114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1154,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 1189,
											"end": 1194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1163,
											"end": 1195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1201,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1336,
											"end": 1345,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1334,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1346,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1319,
											"end": 1351,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1435,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1316,
											"end": 1435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1354,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1354,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1433,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1354,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1316,
											"end": 1435,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1316,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1499,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1533,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1499,
											"end": 1552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1552,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 1499,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1552,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1489,
											"end": 1552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1601,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 1661,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1648,
											"end": 1670,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 1627,
											"end": 1680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1680,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1627,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1680,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1572,
											"end": 1690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1731,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1775,
											"end": 1797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 1755,
											"end": 1807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1807,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1755,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 1824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1948,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1830,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1935,
											"end": 1940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 1917,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 1917,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1905,
											"end": 1942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2176,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1954,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2070,
											"end": 2088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2062,
											"end": 2088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2151,
											"end": 2168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2098,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2169,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2098,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2176,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2176,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 2176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2511,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2182,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2292,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2293,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2296,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2296,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2258,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2486,
											"end": 2493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2475,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2462,
											"end": 2484,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2441,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2441,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2511,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2511,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2607,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2517,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2600,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2601,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2607,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2607,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2607,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2729,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2613,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2683,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2683,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2683,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2676,
											"end": 2681,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2705,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2663,
											"end": 2723,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2719,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2717,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2721,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2723,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2663,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2868,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2735,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2803,
											"end": 2823,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2856,
											"end": 2861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2832,
											"end": 2862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2868,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2735,
											"end": 2868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 2970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3015,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3001,
											"end": 3010,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2988,
											"end": 3011,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2984,
											"end": 3016,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3100,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2981,
											"end": 3100,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3019,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3019,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3019,
											"end": 3098,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3019,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 3100,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2981,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3209,
											"end": 3216,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3164,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3217,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3164,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3217,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3154,
											"end": 3217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3110,
											"end": 3227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3268,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3292,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3337,
											"end": 3344,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3335,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3292,
											"end": 3345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3345,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 3292,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3345,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3355,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3462,
											"end": 3469,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3420,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3470,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3420,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3410,
											"end": 3470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3480,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3570,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3493,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3564,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3576,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3663,
											"end": 3687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3663,
											"end": 3687,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3663,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3651,
											"end": 3688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3922,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3700,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3808,
											"end": 3834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3912,
											"end": 3913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3910,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3897,
											"end": 3914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3844,
											"end": 3915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3915,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 3844,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3922,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3922,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4050,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3928,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4019,
											"end": 4024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4001,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3991,
											"end": 4026,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 3981,
											"end": 4044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4041,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4038,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4042,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4044,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 3981,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4102,
											"end": 4107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4127,
											"end": 4147,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4147,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4118,
											"end": 4147,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 4183,
											"end": 4188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4156,
											"end": 4189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 4156,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4056,
											"end": 4195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4530,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4201,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4260,
											"end": 4266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4311,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4307,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4280,
											"end": 4312,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 4277,
											"end": 4396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4315,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4315,
											"end": 4394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4394,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 4315,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4277,
											"end": 4396,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 4277,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4435,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 4505,
											"end": 4512,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4496,
											"end": 4502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4494,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4460,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4513,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 4460,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4513,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4406,
											"end": 4523,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4530,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4536,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 4632,
											"end": 4637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4617,
											"end": 4638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4638,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 4617,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4615,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4639,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4861,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4651,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4765,
											"end": 4774,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4827,
											"end": 4833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4789,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 4789,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4989,
											"end": 4991,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 4975,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4964,
											"end": 4987,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4960,
											"end": 4992,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 5076,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4957,
											"end": 5076,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 4995,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4995,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4995,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 4995,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4957,
											"end": 5076,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4957,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5182,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5165,
											"end": 5174,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5140,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5140,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5193,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5086,
											"end": 5203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5268,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 5310,
											"end": 5317,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5299,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5286,
											"end": 5308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5268,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5268,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5268,
											"end": 5318,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 5268,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5318,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5664,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5341,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5425,
											"end": 5432,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5421,
											"end": 5444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5449,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5533,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 5414,
											"end": 5533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 5452,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5452,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5531,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 5452,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5533,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 5414,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 5639,
											"end": 5646,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5619,
											"end": 5628,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5597,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5597,
											"end": 5647,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 5597,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5543,
											"end": 5657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5664,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5664,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5738,
											"end": 5744,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5746,
											"end": 5752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5795,
											"end": 5797,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5774,
											"end": 5781,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5770,
											"end": 5793,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 5763,
											"end": 5882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 5801,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5801,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5801,
											"end": 5880,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 5801,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5882,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 5763,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5922,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5991,
											"end": 5998,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5980,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 5989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 5946,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 5946,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5936,
											"end": 5999,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5936,
											"end": 5999,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 6009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6050,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6099,
											"end": 6108,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6074,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6127,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 6074,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6064,
											"end": 6127,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6064,
											"end": 6127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6137,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5670,
											"end": 6144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6215,
											"end": 6221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6272,
											"end": 6274,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6270,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6243,
											"end": 6275,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6278,
											"end": 6357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6278,
											"end": 6357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 6240,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6465,
											"end": 6472,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 6463,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6423,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6423,
											"end": 6473,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6423,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6413,
											"end": 6473,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6413,
											"end": 6473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6369,
											"end": 6483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6522,
											"end": 6524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6569,
											"end": 6591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6548,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6601,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6611,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6150,
											"end": 6618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6718,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6624,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6657,
											"end": 6665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6697,
											"end": 6711,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6676,
											"end": 6711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6676,
											"end": 6711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6818,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6724,
											"end": 6818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6763,
											"end": 6770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6792,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6806,
											"end": 6811,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6792,
											"end": 6812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6792,
											"end": 6812,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 6792,
											"end": 6812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6818,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6818,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6824,
											"end": 6924,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 6824,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6863,
											"end": 6870,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 6892,
											"end": 6918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6892,
											"end": 6918,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6892,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6824,
											"end": 6924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6824,
											"end": 6924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6824,
											"end": 6924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6824,
											"end": 6924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6930,
											"end": 7087,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 6930,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 7055,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 7073,
											"end": 7078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7055,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 7055,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7055,
											"end": 7079,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 7055,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7035,
											"end": 7080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7035,
											"end": 7080,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 7035,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7030,
											"end": 7033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7023,
											"end": 7081,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6930,
											"end": 7087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6930,
											"end": 7087,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6930,
											"end": 7087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7093,
											"end": 7189,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7093,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7135,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7181,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 7167,
											"end": 7182,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7146,
											"end": 7182,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7093,
											"end": 7189,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7093,
											"end": 7189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7093,
											"end": 7189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7093,
											"end": 7189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7232,
											"end": 7239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 7276,
											"end": 7281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7261,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7261,
											"end": 7282,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 7261,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7250,
											"end": 7282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7195,
											"end": 7288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7389,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7294,
											"end": 7389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7359,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 7377,
											"end": 7382,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7359,
											"end": 7383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7383,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 7359,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7348,
											"end": 7383,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7540,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7395,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7526,
											"end": 7531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7511,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7511,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7494,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7533,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 7494,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7489,
											"end": 7492,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7482,
											"end": 7534,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7540,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7395,
											"end": 7540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7708,
											"end": 7711,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7785,
											"end": 7791,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7723,
											"end": 7798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7798,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 7723,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7825,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7818,
											"end": 7821,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7814,
											"end": 7826,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7807,
											"end": 7826,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7836,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 7907,
											"end": 7910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7898,
											"end": 7904,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7836,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7836,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7836,
											"end": 7911,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 7836,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7936,
											"end": 7938,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7931,
											"end": 7934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 7939,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7920,
											"end": 7939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 8014,
											"end": 8017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8005,
											"end": 8011,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7949,
											"end": 8018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 8018,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 7949,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8038,
											"end": 8041,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8034,
											"end": 8045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8027,
											"end": 8045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8055,
											"end": 8065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8055,
											"end": 8065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7546,
											"end": 8071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8247,
											"end": 8256,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8243,
											"end": 8261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8235,
											"end": 8261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8271,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 8339,
											"end": 8340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8337,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8324,
											"end": 8341,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8315,
											"end": 8321,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8271,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8271,
											"end": 8342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8271,
											"end": 8342,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 8271,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8409,
											"end": 8418,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8352,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8352,
											"end": 8424,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 8352,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 8496,
											"end": 8498,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8485,
											"end": 8494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8434,
											"end": 8500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8434,
											"end": 8500,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 8434,
											"end": 8500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8077,
											"end": 8507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8634,
											"end": 8638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8674,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8661,
											"end": 8670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8649,
											"end": 8675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8649,
											"end": 8675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 8753,
											"end": 8754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8738,
											"end": 8755,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8729,
											"end": 8735,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 8685,
											"end": 8756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8685,
											"end": 8756,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 8685,
											"end": 8756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8766,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 8834,
											"end": 8836,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8816,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8766,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8766,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8766,
											"end": 8838,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 8766,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8513,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/proxy/Clones.sol",
								"contracts/aerodrome/factories/PoolFactory.sol",
								"contracts/aerodrome/interfaces/IPool.sol",
								"contracts/aerodrome/interfaces/factories/IPoolFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_FEE()": "bc063e1a",
							"ZERO_FEE_INDICATOR()": "38c55d46",
							"allPools(uint256)": "41d1de97",
							"allPoolsLength()": "efde4e64",
							"createPool(address,address,bool)": "36bf95a0",
							"createPool(address,address,uint24)": "a1671295",
							"customFee(address)": "4d419abc",
							"feeManager()": "d0fb0203",
							"getFee(address,bool)": "cc56b2c5",
							"getPool(address,address,bool)": "79bc57d5",
							"getPool(address,address,uint24)": "1698ee82",
							"implementation()": "5c60da1b",
							"isPaused()": "b187bd26",
							"isPool(address)": "5b16ebb7",
							"pauser()": "9fd0506d",
							"setCustomFee(address,uint256)": "d49466a8",
							"setFee(bool,uint256)": "e1f76b44",
							"setFeeManager(address)": "472d35b9",
							"setPauseState(bool)": "cdb88ad1",
							"setPauser(address)": "2d88af4a",
							"setVoter(address)": "4bc2a657",
							"stableFee()": "40bbd775",
							"volatileFee()": "5084ed03",
							"voter()": "46c96aac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC1167FailedCreateClone\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"SetFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetPauseState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"SetVoter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_FEE_INDICATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"setVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stableFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volatileFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1167FailedCreateClone()\":[{\"details\":\"A clone instance deployment failed.\"}]},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,bool)\":{\"details\":\"token order does not matter\",\"params\":{\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"createPool(address,address,uint24)\":{\"details\":\"fee is converted to stable booleantoken order does not matter\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else revert\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,bool)\":{\"params\":{\"stable\":\"True if stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,uint24)\":{\"details\":\"fee is converted to stable boolean.\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else returns address(0)\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"isPool(address)\":{\"params\":{\"\":\".\"}},\"setCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setFee(bool,uint256)\":{\"details\":\"Throws if higher than maximum fee.      Throws if fee is zero.\",\"params\":{\"_fee\":\".\",\"_stable\":\"Stable or volatile pool.\"}},\"setVoter(address)\":{\"details\":\"Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\",\"params\":{\"_voter\":\".\"}}},\"stateVariables\":{\"voter\":{\"details\":\"used to change the name/symbol of the pool by calling emergencyCouncil\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allPoolsLength()\":{\"notice\":\"returns the number of pools created from this factory\"},\"createPool(address,address,bool)\":{\"notice\":\"Create a pool given two tokens and if they're stable/volatile\"},\"createPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\"},\"getFee(address,bool)\":{\"notice\":\"Returns fee for a pool, as custom fees are possible.\"},\"getPool(address,address,bool)\":{\"notice\":\"Return address of pool created by this factory\"},\"getPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\"},\"isPool(address)\":{\"notice\":\"Is a valid pool created by this factory.\"},\"setCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a pool from the default\"},\"setFee(bool,uint256)\":{\"notice\":\"Set default fee for stable and volatile pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aerodrome/factories/PoolFactory.sol\":\"PoolFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b\",\"dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX\"]},\"contracts/aerodrome/factories/PoolFactory.sol\":{\"keccak256\":\"0x58fad27c07a5cae061d0e8ce5b06a7daa01f5b1abd58df38df4fedd473178e8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2f12cab4c63ad339d10cb3fe140e9315ebc27d843ec2fe26d23f1be31c3b71f2\",\"dweb:/ipfs/QmXLJRuLtwFK6tQ2nN5uA8vu8LRvPhGyaD5TVmuypXpeJj\"]},\"contracts/aerodrome/interfaces/IPool.sol\":{\"keccak256\":\"0x452152c63f1756061b8343063f25d475a6c34773069e3d546d2c09f436688e83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9083ab7882ee2256404148106d4ff82a00d97a205fcaf3e64ff51a93b2e80235\",\"dweb:/ipfs/QmNXuxuXk93fLQyznBbjTWtJiiAL12Z4jJ6jyAJPxvEyXU\"]},\"contracts/aerodrome/interfaces/factories/IPoolFactory.sol\":{\"keccak256\":\"0x20a029864739473b6a2540eb7c12124e7ff7088b49ff4dfd8bb6592ea93d1cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a945971ceb50a86df6ea4e86ad38adf0cbf3964a5ff50e0aac0fbe0974b69d0\",\"dweb:/ipfs/QmXgEWnz2BaSVTbWFjbN7hSBjTija41QhtimqzLSjGe4r8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 98,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "isPaused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 100,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "pauser",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 102,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "stableFee",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 104,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "volatileFee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 112,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "feeManager",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 115,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "voter",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "_getPool",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))"
							},
							{
								"astId": 126,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "allPools",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 130,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "_isPool",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 134,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "customFee",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 136,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "_temp0",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 138,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "_temp1",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 140,
								"contract": "contracts/aerodrome/factories/PoolFactory.sol:PoolFactory",
								"label": "_temp",
								"offset": 20,
								"slot": "10",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_mapping(t_bool,t_address)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => mapping(bool => address)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_bool,t_address))"
							},
							"t_mapping(t_address,t_mapping(t_bool,t_address))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(bool => address))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bool,t_address)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bool,t_address)": {
								"encoding": "mapping",
								"key": "t_bool",
								"label": "mapping(bool => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allPoolsLength()": {
								"notice": "returns the number of pools created from this factory"
							},
							"createPool(address,address,bool)": {
								"notice": "Create a pool given two tokens and if they're stable/volatile"
							},
							"createPool(address,address,uint24)": {
								"notice": "Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)"
							},
							"getFee(address,bool)": {
								"notice": "Returns fee for a pool, as custom fees are possible."
							},
							"getPool(address,address,bool)": {
								"notice": "Return address of pool created by this factory"
							},
							"getPool(address,address,uint24)": {
								"notice": "Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)"
							},
							"isPool(address)": {
								"notice": "Is a valid pool created by this factory."
							},
							"setCustomFee(address,uint256)": {
								"notice": "Set overriding fee for a pool from the default"
							},
							"setFee(bool,uint256)": {
								"notice": "Set default fee for stable and volatile pools."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/aerodrome/interfaces/IPool.sol": {
				"IPool": {
					"abi": [
						{
							"inputs": [],
							"name": "BelowMinimumK",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DepositsNotEqual",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FactoryAlreadySet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientInputAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientLiquidity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientLiquidityBurned",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientLiquidityMinted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientOutputAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTo",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "IsPaused",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "K",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotEmergencyCouncil",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Fees",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reserve0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reserve1",
									"type": "uint256"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "blockTimestampLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimable0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimable1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentCumulativePrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserve0Cumulative",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve1Cumulative",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "blockTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_reserve0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_reserve1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_blockTimestampLast",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_stable",
									"type": "bool"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastObservation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reserve0Cumulative",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reserve1Cumulative",
											"type": "uint256"
										}
									],
									"internalType": "struct IPool.Observation",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "metadata",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "dec0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dec1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "r0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "r1",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "st",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "t0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t1",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "observationLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodSize",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolFees",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								}
							],
							"name": "prices",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "granularity",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "window",
									"type": "uint256"
								}
							],
							"name": "sample",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "__name",
									"type": "string"
								}
							],
							"name": "setName",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "__symbol",
									"type": "string"
								}
							],
							"name": "setSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "supplyIndex0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "supplyIndex1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(address)": {
								"params": {
									"to": "Address to receive token0 and token1 from burning the pool token"
								},
								"returns": {
									"amount0": "Amount of token0 returned",
									"amount1": "Amount of token1 returned"
								}
							},
							"getAmountOut(uint256,address)": {
								"params": {
									"amountIn": "Amount of token in",
									"tokenIn": "Address of token"
								},
								"returns": {
									"_0": "Amount out"
								}
							},
							"getReserves()": {
								"returns": {
									"_blockTimestampLast": ".",
									"_reserve0": ".",
									"_reserve1": "."
								}
							},
							"initialize(address,address,bool)": {
								"params": {
									"_stable": "True if stable, false if volatile",
									"_token0": "Address of token0",
									"_token1": "Address of token1"
								}
							},
							"mint(address)": {
								"params": {
									"to": "Address to receive the minted LP token"
								},
								"returns": {
									"liquidity": "  Amount of LP token minted"
								}
							},
							"prices(address,uint256,uint256)": {
								"params": {
									"amountIn": ".",
									"points": "Number of points to return",
									"tokenIn": "."
								},
								"returns": {
									"_0": "Array of TWAP prices"
								}
							},
							"quote(address,uint256,uint256)": {
								"params": {
									"amountIn": ".",
									"granularity": ".",
									"tokenIn": "."
								},
								"returns": {
									"amountOut": "."
								}
							},
							"sample(address,uint256,uint256,uint256)": {
								"params": {
									"amountIn": ".",
									"points": ".",
									"tokenIn": ".",
									"window": "."
								},
								"returns": {
									"_0": "Array of TWAP prices"
								}
							},
							"setName(string)": {
								"params": {
									"__name": "String of new name"
								}
							},
							"setSymbol(string)": {
								"params": {
									"__symbol": "String of new symbol"
								}
							},
							"skim(address)": {
								"params": {
									"to": "Address to receive any skimmed rewards"
								}
							},
							"swap(uint256,uint256,address,bytes)": {
								"params": {
									"amount0Out": "Amount of token0 to send to `to`",
									"amount1Out": "Amount of token1 to send to `to`",
									"data": "Additional calldata for flashloans",
									"to": "Address to recieve the swapped output"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"blockTimestampLast()": "c5700a02",
							"burn(address)": "89afcb44",
							"claimFees()": "d294f093",
							"claimable0(address)": "4d5a9f8a",
							"claimable1(address)": "a1ac4d13",
							"currentCumulativePrices()": "1df8c717",
							"factory()": "c45a0155",
							"getAmountOut(uint256,address)": "f140a35a",
							"getK()": "ee39e7a0",
							"getReserves()": "0902f1ac",
							"index0()": "32c0defd",
							"index1()": "bda39cad",
							"initialize(address,address,bool)": "e4bbb5a8",
							"lastObservation()": "8a7b8cf2",
							"metadata()": "392f37e9",
							"mint(address)": "6a627842",
							"observationLength()": "ebeb31db",
							"periodSize()": "e4463eb2",
							"poolFees()": "33580959",
							"prices(address,uint256,uint256)": "5881c475",
							"quote(address,uint256,uint256)": "9e8cc04b",
							"reserve0()": "443cb4bc",
							"reserve0CumulativeLast()": "bf944dbc",
							"reserve1()": "5a76f25e",
							"reserve1CumulativeLast()": "c245febc",
							"sample(address,uint256,uint256,uint256)": "13345fe1",
							"setName(string)": "c47f0027",
							"setSymbol(string)": "b84c8246",
							"skim(address)": "bc25cf77",
							"stable()": "22be3de1",
							"supplyIndex0(address)": "9f767c88",
							"supplyIndex1(address)": "205aabf1",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"tokens()": "9d63848a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BelowMinimumK\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositsNotEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FactoryAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityBurned\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientLiquidityMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientOutputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"K\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEmergencyCouncil\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Fees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"blockTimestampLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimable1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentCumulativePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockTimestampLast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastObservation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Cumulative\",\"type\":\"uint256\"}],\"internalType\":\"struct IPool.Observation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dec0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dec1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"r1\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"st\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"observationLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFees\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"prices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"granularity\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"window\",\"type\":\"uint256\"}],\"name\":\"sample\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyIndex0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supplyIndex1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(address)\":{\"params\":{\"to\":\"Address to receive token0 and token1 from burning the pool token\"},\"returns\":{\"amount0\":\"Amount of token0 returned\",\"amount1\":\"Amount of token1 returned\"}},\"getAmountOut(uint256,address)\":{\"params\":{\"amountIn\":\"Amount of token in\",\"tokenIn\":\"Address of token\"},\"returns\":{\"_0\":\"Amount out\"}},\"getReserves()\":{\"returns\":{\"_blockTimestampLast\":\".\",\"_reserve0\":\".\",\"_reserve1\":\".\"}},\"initialize(address,address,bool)\":{\"params\":{\"_stable\":\"True if stable, false if volatile\",\"_token0\":\"Address of token0\",\"_token1\":\"Address of token1\"}},\"mint(address)\":{\"params\":{\"to\":\"Address to receive the minted LP token\"},\"returns\":{\"liquidity\":\"  Amount of LP token minted\"}},\"prices(address,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"points\":\"Number of points to return\",\"tokenIn\":\".\"},\"returns\":{\"_0\":\"Array of TWAP prices\"}},\"quote(address,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"granularity\":\".\",\"tokenIn\":\".\"},\"returns\":{\"amountOut\":\".\"}},\"sample(address,uint256,uint256,uint256)\":{\"params\":{\"amountIn\":\".\",\"points\":\".\",\"tokenIn\":\".\",\"window\":\".\"},\"returns\":{\"_0\":\"Array of TWAP prices\"}},\"setName(string)\":{\"params\":{\"__name\":\"String of new name\"}},\"setSymbol(string)\":{\"params\":{\"__symbol\":\"String of new symbol\"}},\"skim(address)\":{\"params\":{\"to\":\"Address to receive any skimmed rewards\"}},\"swap(uint256,uint256,address,bytes)\":{\"params\":{\"amount0Out\":\"Amount of token0 to send to `to`\",\"amount1Out\":\"Amount of token1 to send to `to`\",\"data\":\"Additional calldata for flashloans\",\"to\":\"Address to recieve the swapped output\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"blockTimestampLast()\":{\"notice\":\"Timestamp of last update to pool\"},\"burn(address)\":{\"notice\":\"This low-level function should be called from a contract which performs important safety checks         standard uniswap v2 implementation\"},\"claimFees()\":{\"notice\":\"Claim accumulated but unclaimed fees (claimable0 and claimable1)\"},\"claimable0(address)\":{\"notice\":\"Amount of unclaimed, but claimable tokens from fees of token0 for an LP\"},\"claimable1(address)\":{\"notice\":\"Amount of unclaimed, but claimable tokens from fees of token1 for an LP\"},\"currentCumulativePrices()\":{\"notice\":\"Produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\"},\"factory()\":{\"notice\":\"Address of PoolFactory that created this contract\"},\"getAmountOut(uint256,address)\":{\"notice\":\"Get the amount of tokenOut given the amount of tokenIn\"},\"getK()\":{\"notice\":\"Returns the value of K in the Pool, based on its reserves.\"},\"getReserves()\":{\"notice\":\"Update reserves and, on the first call per block, price accumulators\"},\"index0()\":{\"notice\":\"Accumulated fees of token0 (global)\"},\"index1()\":{\"notice\":\"Accumulated fees of token1 (global)\"},\"initialize(address,address,bool)\":{\"notice\":\"Called on pool creation by PoolFactory\"},\"lastObservation()\":{\"notice\":\"Get the value of the most recent observation\"},\"metadata()\":{\"notice\":\"Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1\"},\"mint(address)\":{\"notice\":\"This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks         standard uniswap v2 implementation\"},\"observationLength()\":{\"notice\":\"Get the number of observations recorded\"},\"periodSize()\":{\"notice\":\"Capture oracle reading every 30 minutes (1800 seconds)\"},\"poolFees()\":{\"notice\":\"Address of linked PoolFees.sol\"},\"prices(address,uint256,uint256)\":{\"notice\":\"Returns a memory set of TWAP prices         Same as calling sample(tokenIn, amountIn, points, 1)\"},\"quote(address,uint256,uint256)\":{\"notice\":\"Provides twap price with user configured granularity, up to the full window size\"},\"reserve0()\":{\"notice\":\"Amount of token0 in pool\"},\"reserve0CumulativeLast()\":{\"notice\":\"Cumulative of reserve0 factoring in time elapsed\"},\"reserve1()\":{\"notice\":\"Amount of token1 in pool\"},\"reserve1CumulativeLast()\":{\"notice\":\"Cumulative of reserve1 factoring in time elapsed\"},\"sample(address,uint256,uint256,uint256)\":{\"notice\":\"Same as prices with with an additional window argument.         Window = 2 means 2 * 30min (or 1 hr) between observations\"},\"setName(string)\":{\"notice\":\"Set pool name         Only callable by Voter.emergencyCouncil()\"},\"setSymbol(string)\":{\"notice\":\"Set pool symbol         Only callable by Voter.emergencyCouncil()\"},\"skim(address)\":{\"notice\":\"Force balances to match reserves\"},\"stable()\":{\"notice\":\"True if pool is stable, false if volatile\"},\"supplyIndex0(address)\":{\"notice\":\"Get an LP's relative index0 to index0\"},\"supplyIndex1(address)\":{\"notice\":\"Get an LP's relative index1 to index1\"},\"swap(uint256,uint256,address,bytes)\":{\"notice\":\"This low-level function should be called from a contract which performs important safety checks\"},\"sync()\":{\"notice\":\"Force reserves to match balances\"},\"token0()\":{\"notice\":\"Address of token in the pool with the lower address value\"},\"token1()\":{\"notice\":\"Address of token in the poool with the higher address value\"},\"tokens()\":{\"notice\":\"Returns [token0, token1]\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aerodrome/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aerodrome/interfaces/IPool.sol\":{\"keccak256\":\"0x452152c63f1756061b8343063f25d475a6c34773069e3d546d2c09f436688e83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9083ab7882ee2256404148106d4ff82a00d97a205fcaf3e64ff51a93b2e80235\",\"dweb:/ipfs/QmNXuxuXk93fLQyznBbjTWtJiiAL12Z4jJ6jyAJPxvEyXU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"blockTimestampLast()": {
								"notice": "Timestamp of last update to pool"
							},
							"burn(address)": {
								"notice": "This low-level function should be called from a contract which performs important safety checks         standard uniswap v2 implementation"
							},
							"claimFees()": {
								"notice": "Claim accumulated but unclaimed fees (claimable0 and claimable1)"
							},
							"claimable0(address)": {
								"notice": "Amount of unclaimed, but claimable tokens from fees of token0 for an LP"
							},
							"claimable1(address)": {
								"notice": "Amount of unclaimed, but claimable tokens from fees of token1 for an LP"
							},
							"currentCumulativePrices()": {
								"notice": "Produces the cumulative price using counterfactuals to save gas and avoid a call to sync."
							},
							"factory()": {
								"notice": "Address of PoolFactory that created this contract"
							},
							"getAmountOut(uint256,address)": {
								"notice": "Get the amount of tokenOut given the amount of tokenIn"
							},
							"getK()": {
								"notice": "Returns the value of K in the Pool, based on its reserves."
							},
							"getReserves()": {
								"notice": "Update reserves and, on the first call per block, price accumulators"
							},
							"index0()": {
								"notice": "Accumulated fees of token0 (global)"
							},
							"index1()": {
								"notice": "Accumulated fees of token1 (global)"
							},
							"initialize(address,address,bool)": {
								"notice": "Called on pool creation by PoolFactory"
							},
							"lastObservation()": {
								"notice": "Get the value of the most recent observation"
							},
							"metadata()": {
								"notice": "Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1"
							},
							"mint(address)": {
								"notice": "This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks         standard uniswap v2 implementation"
							},
							"observationLength()": {
								"notice": "Get the number of observations recorded"
							},
							"periodSize()": {
								"notice": "Capture oracle reading every 30 minutes (1800 seconds)"
							},
							"poolFees()": {
								"notice": "Address of linked PoolFees.sol"
							},
							"prices(address,uint256,uint256)": {
								"notice": "Returns a memory set of TWAP prices         Same as calling sample(tokenIn, amountIn, points, 1)"
							},
							"quote(address,uint256,uint256)": {
								"notice": "Provides twap price with user configured granularity, up to the full window size"
							},
							"reserve0()": {
								"notice": "Amount of token0 in pool"
							},
							"reserve0CumulativeLast()": {
								"notice": "Cumulative of reserve0 factoring in time elapsed"
							},
							"reserve1()": {
								"notice": "Amount of token1 in pool"
							},
							"reserve1CumulativeLast()": {
								"notice": "Cumulative of reserve1 factoring in time elapsed"
							},
							"sample(address,uint256,uint256,uint256)": {
								"notice": "Same as prices with with an additional window argument.         Window = 2 means 2 * 30min (or 1 hr) between observations"
							},
							"setName(string)": {
								"notice": "Set pool name         Only callable by Voter.emergencyCouncil()"
							},
							"setSymbol(string)": {
								"notice": "Set pool symbol         Only callable by Voter.emergencyCouncil()"
							},
							"skim(address)": {
								"notice": "Force balances to match reserves"
							},
							"stable()": {
								"notice": "True if pool is stable, false if volatile"
							},
							"supplyIndex0(address)": {
								"notice": "Get an LP's relative index0 to index0"
							},
							"supplyIndex1(address)": {
								"notice": "Get an LP's relative index1 to index1"
							},
							"swap(uint256,uint256,address,bytes)": {
								"notice": "This low-level function should be called from a contract which performs important safety checks"
							},
							"sync()": {
								"notice": "Force reserves to match balances"
							},
							"token0()": {
								"notice": "Address of token in the pool with the lower address value"
							},
							"token1()": {
								"notice": "Address of token in the poool with the higher address value"
							},
							"tokens()": {
								"notice": "Returns [token0, token1]"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/aerodrome/interfaces/factories/IPoolFactory.sol": {
				"IPoolFactory": {
					"abi": [
						{
							"inputs": [],
							"name": "FeeInvalid",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeeTooHigh",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPool",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFeeManager",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotPauser",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotVoter",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PoolAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SameAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroFee",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "SetCustomFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeManager",
									"type": "address"
								}
							],
							"name": "SetFeeManager",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "SetPauseState",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								}
							],
							"name": "SetPauser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "SetVoter",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "allPoolsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_stable",
									"type": "bool"
								}
							],
							"name": "getFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "stable",
									"type": "bool"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "isPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setCustomFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_stable",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeManager",
									"type": "address"
								}
							],
							"name": "setFeeManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setPauseState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pauser",
									"type": "address"
								}
							],
							"name": "setPauser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "setVoter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createPool(address,address,bool)": {
								"details": "token order does not matter",
								"params": {
									"stable": ".",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"createPool(address,address,uint24)": {
								"details": "fee is converted to stable booleantoken order does not matter",
								"params": {
									"fee": "1 if stable, 0 if volatile, else revert",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"getPool(address,address,bool)": {
								"params": {
									"stable": "True if stable, false if volatile",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"getPool(address,address,uint24)": {
								"details": "fee is converted to stable boolean.",
								"params": {
									"fee": "1 if stable, 0 if volatile, else returns address(0)",
									"tokenA": ".",
									"tokenB": "."
								}
							},
							"isPool(address)": {
								"params": {
									"": "."
								}
							},
							"setCustomFee(address,uint256)": {
								"details": "A custom fee of zero means the default fee will be used."
							},
							"setFee(bool,uint256)": {
								"details": "Throws if higher than maximum fee.      Throws if fee is zero.",
								"params": {
									"_fee": ".",
									"_stable": "Stable or volatile pool."
								}
							},
							"setVoter(address)": {
								"details": "Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol",
								"params": {
									"_voter": "."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPoolsLength()": "efde4e64",
							"createPool(address,address,bool)": "36bf95a0",
							"createPool(address,address,uint24)": "a1671295",
							"getFee(address,bool)": "cc56b2c5",
							"getPool(address,address,bool)": "79bc57d5",
							"getPool(address,address,uint24)": "1698ee82",
							"implementation()": "5c60da1b",
							"isPaused()": "b187bd26",
							"isPool(address)": "5b16ebb7",
							"setCustomFee(address,uint256)": "d49466a8",
							"setFee(bool,uint256)": "e1f76b44",
							"setFeeManager(address)": "472d35b9",
							"setPauseState(bool)": "cdb88ad1",
							"setPauser(address)": "2d88af4a",
							"setVoter(address)": "4bc2a657",
							"voter()": "46c96aac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FeeInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFeeManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPauser\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVoter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetCustomFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeManager\",\"type\":\"address\"}],\"name\":\"SetFeeManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"SetPauseState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"SetPauser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"SetVoter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"stable\",\"type\":\"bool\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setCustomFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_stable\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeManager\",\"type\":\"address\"}],\"name\":\"setFeeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setPauseState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pauser\",\"type\":\"address\"}],\"name\":\"setPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"setVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,bool)\":{\"details\":\"token order does not matter\",\"params\":{\"stable\":\".\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"createPool(address,address,uint24)\":{\"details\":\"fee is converted to stable booleantoken order does not matter\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else revert\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,bool)\":{\"params\":{\"stable\":\"True if stable, false if volatile\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"getPool(address,address,uint24)\":{\"details\":\"fee is converted to stable boolean.\",\"params\":{\"fee\":\"1 if stable, 0 if volatile, else returns address(0)\",\"tokenA\":\".\",\"tokenB\":\".\"}},\"isPool(address)\":{\"params\":{\"\":\".\"}},\"setCustomFee(address,uint256)\":{\"details\":\"A custom fee of zero means the default fee will be used.\"},\"setFee(bool,uint256)\":{\"details\":\"Throws if higher than maximum fee.      Throws if fee is zero.\",\"params\":{\"_fee\":\".\",\"_stable\":\"Stable or volatile pool.\"}},\"setVoter(address)\":{\"details\":\"Only called once to set to Voter.sol - Voter does not have a function      to call this contract method, so once set it's immutable.      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\",\"params\":{\"_voter\":\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allPoolsLength()\":{\"notice\":\"returns the number of pools created from this factory\"},\"createPool(address,address,bool)\":{\"notice\":\"Create a pool given two tokens and if they're stable/volatile\"},\"createPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\"},\"getFee(address,bool)\":{\"notice\":\"Returns fee for a pool, as custom fees are possible.\"},\"getPool(address,address,bool)\":{\"notice\":\"Return address of pool created by this factory\"},\"getPool(address,address,uint24)\":{\"notice\":\"Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\"},\"isPool(address)\":{\"notice\":\"Is a valid pool created by this factory.\"},\"setCustomFee(address,uint256)\":{\"notice\":\"Set overriding fee for a pool from the default\"},\"setFee(bool,uint256)\":{\"notice\":\"Set default fee for stable and volatile pools.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/aerodrome/interfaces/factories/IPoolFactory.sol\":\"IPoolFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/aerodrome/interfaces/factories/IPoolFactory.sol\":{\"keccak256\":\"0x20a029864739473b6a2540eb7c12124e7ff7088b49ff4dfd8bb6592ea93d1cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a945971ceb50a86df6ea4e86ad38adf0cbf3964a5ff50e0aac0fbe0974b69d0\",\"dweb:/ipfs/QmXgEWnz2BaSVTbWFjbN7hSBjTija41QhtimqzLSjGe4r8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"allPoolsLength()": {
								"notice": "returns the number of pools created from this factory"
							},
							"createPool(address,address,bool)": {
								"notice": "Create a pool given two tokens and if they're stable/volatile"
							},
							"createPool(address,address,uint24)": {
								"notice": "Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)"
							},
							"getFee(address,bool)": {
								"notice": "Returns fee for a pool, as custom fees are possible."
							},
							"getPool(address,address,bool)": {
								"notice": "Return address of pool created by this factory"
							},
							"getPool(address,address,uint24)": {
								"notice": "Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)"
							},
							"isPool(address)": {
								"notice": "Is a valid pool created by this factory."
							},
							"setCustomFee(address,uint256)": {
								"notice": "Set overriding fee for a pool from the default"
							},
							"setFee(bool,uint256)": {
								"notice": "Set default fee for stable and volatile pools."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							84
						]
					},
					"id": 85,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:599:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."
							},
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84
							],
							"name": "Clones",
							"nameLocation": "734:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "747:59:0",
										"text": " @dev A clone instance deployment failed."
									},
									"errorSelector": "c2f868f4",
									"id": 5,
									"name": "ERC1167FailedCreateClone",
									"nameLocation": "817:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:0"
									},
									"src": "811:33:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1122:712:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1184:549:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1389:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1402:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1412:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "1418:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1408:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1408:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1436:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1395:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1382:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1382:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1382:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1620:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "1626:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1616:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1616:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1643:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1613:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1600:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1600:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1690:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1709:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1718:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1702:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1702:21:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1690:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "1418:14:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "1626:14:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1690:8:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1175:558:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1746:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1766:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 15,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1758:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 18,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1758:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1746:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "1742:86:0",
												"trueBody": {
													"id": 23,
													"nodeType": "Block",
													"src": "1770:58:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 20,
																	"name": "ERC1167FailedCreateClone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1791:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1791:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 22,
															"nodeType": "RevertStatement",
															"src": "1784:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "850:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "1056:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1070:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1062:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:24:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"scope": 84,
									"src": "1047:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "2311:719:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2373:556:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2591:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2601:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "2607:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2597:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2597:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2587:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2587:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2625:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2584:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2584:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2571:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2571:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2571:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2796:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2809:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "2815:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2805:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2805:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2832:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2802:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2789:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2879:40:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2899:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2902:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2908:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2914:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2891:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2891:28:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2879:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "2607:14:0",
														"valueSize": 1
													},
													{
														"declaration": 29,
														"isOffset": false,
														"isSlot": false,
														"src": "2815:14:0",
														"valueSize": 1
													},
													{
														"declaration": 34,
														"isOffset": false,
														"isSlot": false,
														"src": "2879:8:0",
														"valueSize": 1
													},
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": false,
														"src": "2914:4:0",
														"valueSize": 1
													}
												],
												"id": 36,
												"nodeType": "InlineAssembly",
												"src": "2364:565:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 37,
														"name": "instance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2942:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2962:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2954:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 38,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2954:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2954:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2942:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "2938:86:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "2966:58:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "ERC1167FailedCreateClone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "2987:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2987:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "RevertStatement",
															"src": "2980:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1840:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2218:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2245:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2237:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2269:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:38:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "2293:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2292:18:0"
									},
									"scope": 84,
									"src": "2209:821:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3305:515:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3367:447:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3381:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3392:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "3385:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3427:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3432:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3423:14:0"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3439:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:32:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3472:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3477:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3484:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3461:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3461:58:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3461:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3543:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3548:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3539:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3539:14:0"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "3555:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3532:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3590:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3583:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:55:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3662:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3667:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:14:0"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3674:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3703:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3699:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3729:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3734:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3725:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3725:14:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3741:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3715:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3715:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3692:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:55:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3692:55:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3760:44:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3787:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3792:4:0",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3783:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3783:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3799:4:0",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3773:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:31:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3760:9:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "3439:8:0",
														"valueSize": 1
													},
													{
														"declaration": 52,
														"isOffset": false,
														"isSlot": false,
														"src": "3555:14:0",
														"valueSize": 1
													},
													{
														"declaration": 59,
														"isOffset": false,
														"isSlot": false,
														"src": "3760:9:0",
														"valueSize": 1
													},
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": false,
														"src": "3674:4:0",
														"valueSize": 1
													}
												],
												"id": 61,
												"nodeType": "InlineAssembly",
												"src": "3358:456:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "3036:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3149:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3194:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3186:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3226:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3218:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 53,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3248:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3240:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:86:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3294:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3286:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3285:19:0"
									},
									"scope": 84,
									"src": "3140:680:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "4069:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 74,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "4114:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 75,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "4130:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 78,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4144:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$84",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$84",
																		"typeString": "library Clones"
																	}
																],
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 76,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4136:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4136:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 73,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															63,
															83
														],
														"referencedDeclaration": 63,
														"src": "4086:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4086:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 72,
												"id": 81,
												"nodeType": "Return",
												"src": "4079:71:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "3826:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3939:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3984:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "3976:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "4016:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 67,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:60:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "4058:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4050:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4050:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4049:19:0"
									},
									"scope": 84,
									"src": "3930:227:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 85,
							"src": "726:3433:0",
							"usedErrors": [
								5
							],
							"usedEvents": []
						}
					],
					"src": "100:4060:0"
				},
				"id": 0
			},
			"contracts/aerodrome/factories/PoolFactory.sol": {
				"ast": {
					"absolutePath": "contracts/aerodrome/factories/PoolFactory.sol",
					"exportedSymbols": {
						"Clones": [
							84
						],
						"IPool": [
							1040
						],
						"IPoolFactory": [
							1221
						],
						"PoolFactory": [
							655
						]
					},
					"id": 656,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 86,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:1"
						},
						{
							"absolutePath": "contracts/aerodrome/interfaces/factories/IPoolFactory.sol",
							"file": "../interfaces/factories/IPoolFactory.sol",
							"id": 88,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 656,
							"sourceUnit": 1222,
							"src": "62:70:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 87,
										"name": "IPoolFactory",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1221,
										"src": "70:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/aerodrome/interfaces/IPool.sol",
							"file": "../interfaces/IPool.sol",
							"id": 90,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 656,
							"sourceUnit": 1041,
							"src": "133:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 89,
										"name": "IPool",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1040,
										"src": "141:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 92,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 656,
							"sourceUnit": 85,
							"src": "180:64:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 91,
										"name": "Clones",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 84,
										"src": "188:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 93,
										"name": "IPoolFactory",
										"nameLocations": [
											"270:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1221,
										"src": "270:12:1"
									},
									"id": 94,
									"nodeType": "InheritanceSpecifier",
									"src": "270:12:1"
								}
							],
							"canonicalName": "PoolFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 655,
							"linearizedBaseContracts": [
								655,
								1221
							],
							"name": "PoolFactory",
							"nameLocation": "255:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1220
									],
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 96,
									"mutability": "immutable",
									"name": "implementation",
									"nameLocation": "314:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "289:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 95,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1210
									],
									"constant": false,
									"functionSelector": "b187bd26",
									"id": 98,
									"mutability": "mutable",
									"name": "isPaused",
									"nameLocation": "347:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "335:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 97,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "335:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9fd0506d",
									"id": 100,
									"mutability": "mutable",
									"name": "pauser",
									"nameLocation": "376:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "361:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 99,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40bbd775",
									"id": 102,
									"mutability": "mutable",
									"name": "stableFee",
									"nameLocation": "404:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "389:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "389:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5084ed03",
									"id": 104,
									"mutability": "mutable",
									"name": "volatileFee",
									"nameLocation": "434:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "419:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "419:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc063e1a",
									"id": 107,
									"mutability": "constant",
									"name": "MAX_FEE",
									"nameLocation": "475:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "451:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333030",
										"id": 106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "485:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300_by_1",
											"typeString": "int_const 300"
										},
										"value": "300"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "38c55d46",
									"id": 110,
									"mutability": "constant",
									"name": "ZERO_FEE_INDICATOR",
									"nameLocation": "669:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "645:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "645:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "343230",
										"id": 109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "690:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_420_by_1",
											"typeString": "int_const 420"
										},
										"value": "420"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0fb0203",
									"id": 112,
									"mutability": "mutable",
									"name": "feeManager",
									"nameLocation": "714:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "699:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 111,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "699:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1215
									],
									"constant": false,
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "731:79:1",
										"text": "@dev used to change the name/symbol of the pool by calling emergencyCouncil"
									},
									"functionSelector": "46c96aac",
									"id": 115,
									"mutability": "mutable",
									"name": "voter",
									"nameLocation": "830:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "815:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 114,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_getPool",
									"nameLocation": "915:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "842:81:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
										"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
									},
									"typeName": {
										"id": 122,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 116,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "842:64:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
											"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 121,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 117,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "869:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "861:44:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
												"typeString": "mapping(address => mapping(bool => address))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 120,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "888:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "Mapping",
												"src": "880:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
													"typeString": "mapping(bool => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "41d1de97",
									"id": 126,
									"mutability": "mutable",
									"name": "allPools",
									"nameLocation": "946:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "929:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 124,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "929:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 125,
										"nodeType": "ArrayTypeName",
										"src": "929:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_isPool",
									"nameLocation": "993:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "960:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 129,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "968:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "960:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 128,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "979:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4d419abc",
									"id": 134,
									"mutability": "mutable",
									"name": "customFee",
									"nameLocation": "1139:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "1104:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 133,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1104:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 132,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1123:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_temp0",
									"nameLocation": "1200:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "1183:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 135,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1183:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_temp1",
									"nameLocation": "1229:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "1212:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 137,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1212:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_temp",
									"nameLocation": "1255:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 655,
									"src": "1241:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 139,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1241:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1304:231:1",
										"statements": [
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 145,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1314:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 146,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1331:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1314:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1314:32:1"
											},
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1356:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 150,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1364:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1368:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1364:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1356:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1356:18:1"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 154,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1384:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 155,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1393:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1397:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1393:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1384:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1384:19:1"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "1413:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 160,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1426:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1430:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1426:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1413:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "1413:23:1"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "1446:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1457:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1446:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1446:16:1"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "stableFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1472:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1484:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1472:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1472:13:1"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "volatileFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1504:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3330",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1518:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "1504:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "1504:16:1"
											}
										]
									},
									"id": 177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "1287:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1279:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:25:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:1"
									},
									"scope": 655,
									"src": "1267:268:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1102
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1632:39:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 183,
														"name": "allPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1649:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1658:6:1",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1649:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 182,
												"id": 185,
												"nodeType": "Return",
												"src": "1642:22:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1541:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "efde4e64",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allPoolsLength",
									"nameLocation": "1583:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1597:2:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:1"
									},
									"scope": 655,
									"src": "1574:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1803:122:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 199,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "1820:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "31",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1826:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1820:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 206,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1843:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1850:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1843:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 216,
																		"name": "_getPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1887:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
																			"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"id": 217,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "1896:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1887:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
																		"typeString": "mapping(address => mapping(bool => address))"
																	}
																},
																"id": 220,
																"indexExpression": {
																	"id": 219,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1904:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1887:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
																	"typeString": "mapping(bool => address)"
																}
															},
															"id": 222,
															"indexExpression": {
																"hexValue": "66616c7365",
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1912:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1887:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1843:75:1",
														"trueExpression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 209,
																		"name": "_getPool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1854:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
																			"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
																		}
																	},
																	"id": 211,
																	"indexExpression": {
																		"id": 210,
																		"name": "tokenA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "1863:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1854:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
																		"typeString": "mapping(address => mapping(bool => address))"
																	}
																},
																"id": 213,
																"indexExpression": {
																	"id": 212,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1871:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1854:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
																	"typeString": "mapping(bool => address)"
																}
															},
															"id": 215,
															"indexExpression": {
																"hexValue": "74727565",
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1879:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1854:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1820:98:1",
													"trueExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1838:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1830:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 202,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1830:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1830:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 198,
												"id": 225,
												"nodeType": "Return",
												"src": "1813:105:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "1677:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "1698ee82",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "1719:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1735:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1727:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1751:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1743:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1766:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1759:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 193,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1759:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:44:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1794:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1793:9:1"
									},
									"scope": 655,
									"src": "1710:215:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1122
									],
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2058:56:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 239,
																"name": "_getPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2075:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
																}
															},
															"id": 241,
															"indexExpression": {
																"id": 240,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "2084:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2075:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
																"typeString": "mapping(address => mapping(bool => address))"
															}
														},
														"id": 243,
														"indexExpression": {
															"id": 242,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "2092:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2075:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
															"typeString": "mapping(bool => address)"
														}
													},
													"id": 245,
													"indexExpression": {
														"id": 244,
														"name": "stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2100:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2075:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 238,
												"id": 246,
												"nodeType": "Return",
												"src": "2068:39:1"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1931:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "79bc57d5",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "1973:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1989:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1981:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2005:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1997:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "2018:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2013:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2013:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:45:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2049:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:9:1"
									},
									"scope": 655,
									"src": "1964:150:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "2212:37:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 256,
														"name": "_isPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2229:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 258,
													"indexExpression": {
														"id": 257,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2237:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2229:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 255,
												"id": 259,
												"nodeType": "Return",
												"src": "2222:20:1"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "2120:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "5b16ebb7",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPool",
									"nameLocation": "2162:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2168:14:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2206:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2206:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:6:1"
									},
									"scope": 655,
									"src": "2153:96:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1140
									],
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2331:114:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 267,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2345:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2349:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 269,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2359:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2345:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 274,
												"nodeType": "IfStatement",
												"src": "2341:42:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 271,
															"name": "NotVoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2373:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2373:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 273,
													"nodeType": "RevertStatement",
													"src": "2366:17:1"
												}
											},
											{
												"expression": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 275,
														"name": "voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2393:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 276,
														"name": "_voter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2401:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2393:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "2393:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 280,
															"name": "_voter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2431:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 279,
														"name": "SetVoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "2422:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2422:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "2417:21:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2255:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "4bc2a657",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setVoter",
									"nameLocation": "2297:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "2314:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "2306:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2305:16:1"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2331:0:1"
									},
									"scope": 655,
									"src": "2288:157:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1145
									],
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "2496:177:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 289,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2510:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2514:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2510:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 291,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2524:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2510:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"nodeType": "IfStatement",
												"src": "2506:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 293,
															"name": "NotPauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2539:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2539:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 295,
													"nodeType": "RevertStatement",
													"src": "2532:18:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "_pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2564:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2575:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 298,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2575:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2575:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2564:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 306,
												"nodeType": "IfStatement",
												"src": "2560:47:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 303,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "2594:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2594:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 305,
													"nodeType": "RevertStatement",
													"src": "2587:20:1"
												}
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2617:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "_pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "2626:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2617:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2617:16:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 312,
															"name": "_pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "2658:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 311,
														"name": "SetPauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2648:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2648:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "EmitStatement",
												"src": "2643:23:1"
											}
										]
									},
									"functionSelector": "2d88af4a",
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPauser",
									"nameLocation": "2460:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "_pauser",
												"nameLocation": "2478:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "2470:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:17:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:1"
									},
									"scope": 655,
									"src": "2451:222:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1150
									],
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2724:124:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 321,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2738:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2742:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2738:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 323,
														"name": "pauser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2752:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2738:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "2734:44:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 325,
															"name": "NotPauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2767:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2767:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 327,
													"nodeType": "RevertStatement",
													"src": "2760:18:1"
												}
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "isPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2788:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 330,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2799:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2788:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "2788:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "_state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "2834:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 333,
														"name": "SetPauseState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2820:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "EmitStatement",
												"src": "2815:26:1"
											}
										]
									},
									"functionSelector": "cdb88ad1",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setPauseState",
									"nameLocation": "2688:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "2707:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2702:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2701:13:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:0:1"
									},
									"scope": 655,
									"src": "2679:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "2907:205:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 343,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2921:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2925:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2921:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 345,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2935:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2921:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 350,
												"nodeType": "IfStatement",
												"src": "2917:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 347,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2954:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2954:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 349,
													"nodeType": "RevertStatement",
													"src": "2947:22:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 351,
														"name": "_feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2983:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3006:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2998:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 352,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2998:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2998:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2983:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "2979:51:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 357,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "3017:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3017:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 359,
													"nodeType": "RevertStatement",
													"src": "3010:20:1"
												}
											},
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 361,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3040:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 362,
														"name": "_feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "3053:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3040:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "3040:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 366,
															"name": "_feeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "3093:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 365,
														"name": "SetFeeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "3079:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3079:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "EmitStatement",
												"src": "3074:31:1"
											}
										]
									},
									"functionSelector": "472d35b9",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeManager",
									"nameLocation": "2863:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_feeManager",
												"nameLocation": "2885:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2877:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:21:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2907:0:1"
									},
									"scope": 655,
									"src": "2854:258:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1163
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "3204:271:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 378,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3218:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3222:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3218:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 380,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3232:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3218:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 385,
												"nodeType": "IfStatement",
												"src": "3214:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 382,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "3251:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3251:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 384,
													"nodeType": "RevertStatement",
													"src": "3244:22:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 386,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3280:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 387,
														"name": "MAX_FEE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "3287:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3280:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 392,
												"nodeType": "IfStatement",
												"src": "3276:39:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 389,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "3303:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3303:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 391,
													"nodeType": "RevertStatement",
													"src": "3296:19:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3329:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3337:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3329:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "3325:31:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 396,
															"name": "ZeroFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "3347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3347:9:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 398,
													"nodeType": "RevertStatement",
													"src": "3340:16:1"
												}
											},
											{
												"condition": {
													"id": 400,
													"name": "_stable",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 373,
													"src": "3370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "3426:43:1",
													"statements": [
														{
															"expression": {
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 406,
																	"name": "volatileFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "3440:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 407,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "3454:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3440:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 409,
															"nodeType": "ExpressionStatement",
															"src": "3440:18:1"
														}
													]
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "3366:103:1",
												"trueBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "3379:41:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 401,
																	"name": "stableFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 102,
																	"src": "3393:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 402,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "3405:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3393:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "3393:16:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3118:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "e1f76b44",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFee",
									"nameLocation": "3160:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_stable",
												"nameLocation": "3172:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "3167:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3167:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "3189:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "3181:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:28:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3204:0:1"
									},
									"scope": 655,
									"src": "3151:324:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1171
									],
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "3572:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 421,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3586:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3590:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3586:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 423,
														"name": "feeManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "3600:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3586:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 428,
												"nodeType": "IfStatement",
												"src": "3582:52:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 425,
															"name": "NotFeeManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "3619:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3619:15:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 427,
													"nodeType": "RevertStatement",
													"src": "3612:22:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 429,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3648:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 430,
															"name": "MAX_FEE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "3654:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3648:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 432,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3665:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 433,
															"name": "ZERO_FEE_INDICATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3672:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3665:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3648:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "3644:67:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 436,
															"name": "FeeTooHigh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "3699:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3699:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 438,
													"nodeType": "RevertStatement",
													"src": "3692:19:1"
												}
											},
											{
												"condition": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3725:14:1",
													"subExpression": {
														"baseExpression": {
															"id": 440,
															"name": "_isPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 442,
														"indexExpression": {
															"id": 441,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "3734:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3726:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 447,
												"nodeType": "IfStatement",
												"src": "3721:40:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 444,
															"name": "InvalidPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "3748:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3748:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 446,
													"nodeType": "RevertStatement",
													"src": "3741:20:1"
												}
											},
											{
												"expression": {
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "customFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3772:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 450,
														"indexExpression": {
															"id": 449,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "3782:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3772:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 451,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "3790:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3772:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "3772:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 455,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "3821:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3827:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "SetCustomFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "3808:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3808:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "3803:28:1"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "3481:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "d49466a8",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCustomFee",
									"nameLocation": "3523:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3544:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3536:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3558:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "3550:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:27:1"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3572:0:1"
									},
									"scope": 655,
									"src": "3514:324:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1181
									],
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "3951:145:1",
										"statements": [
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3969:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 491,
														"src": "3961:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 470,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3961:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"baseExpression": {
														"id": 472,
														"name": "customFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3975:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 474,
													"indexExpression": {
														"id": 473,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3985:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3975:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3961:29:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 476,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "4007:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 477,
															"name": "ZERO_FEE_INDICATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "4014:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4007:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 471,
																"src": "4039:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4039:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"id": 484,
																"name": "_stable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "4056:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 486,
																"name": "volatileFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "4078:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "4056:33:1",
															"trueExpression": {
																"id": 485,
																"name": "stableFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "4066:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "4039:50:1",
														"trueExpression": {
															"id": 483,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "4050:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4007:82:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4035:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 490,
												"nodeType": "Return",
												"src": "4000:89:1"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "3844:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "cc56b2c5",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "3886:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3901:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3893:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "_stable",
												"nameLocation": "3912:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3907:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:28:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "3942:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:9:1"
									},
									"scope": 655,
									"src": "3877:219:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1205
									],
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "4231:132:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 504,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "4245:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4251:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 510,
												"nodeType": "IfStatement",
												"src": "4241:32:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 507,
															"name": "FeeInvalid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "4261:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4261:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 509,
													"nodeType": "RevertStatement",
													"src": "4254:19:1"
												}
											},
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "stable",
														"nameLocation": "4288:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 523,
														"src": "4283:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 511,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4283:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 513,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "4297:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4304:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4297:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4283:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "4333:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4341:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "4349:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 517,
														"name": "createPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "4322:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$_t_address_$",
															"typeString": "function (address,address,bool) returns (address)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 503,
												"id": 522,
												"nodeType": "Return",
												"src": "4315:41:1"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "4102:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "a1671295",
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "4144:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "4163:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4155:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4179:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4171:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4194:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4187:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 498,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4187:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4154:44:1"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4225:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "4217:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4217:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4216:14:1"
									},
									"scope": 655,
									"src": "4135:228:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1193
									],
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "4497:818:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "4511:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 537,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4521:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4511:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "4507:42:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 539,
															"name": "SameAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "4536:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4536:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 541,
													"nodeType": "RevertStatement",
													"src": "4529:20:1"
												}
											},
											{
												"assignments": [
													544,
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "token0",
														"nameLocation": "4568:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "4560:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 543,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4560:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "token1",
														"nameLocation": "4584:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "4576:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 545,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4576:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 547,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 548,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "4603:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4594:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"id": 553,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4632:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 554,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "4640:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4631:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4594:53:1",
													"trueExpression": {
														"components": [
															{
																"id": 550,
																"name": "tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "4613:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 551,
																"name": "tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "4621:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"id": 552,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4612:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
															"typeString": "tuple(address,address)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4559:88:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 558,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4661:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4679:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4671:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 559,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4671:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4671:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4661:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "4657:46:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 564,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "4690:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4690:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 566,
													"nodeType": "RevertStatement",
													"src": "4683:20:1"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 568,
																	"name": "_getPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "4717:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
																	}
																},
																"id": 570,
																"indexExpression": {
																	"id": 569,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4726:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4717:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(bool => address))"
																}
															},
															"id": 572,
															"indexExpression": {
																"id": 571,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4734:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4717:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
																"typeString": "mapping(bool => address)"
															}
														},
														"id": 574,
														"indexExpression": {
															"id": 573,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "4742:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4717:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4761:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4753:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 575,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4753:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4753:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4717:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "4713:78:1",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 580,
															"name": "PoolAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "4772:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4772:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 582,
													"nodeType": "RevertStatement",
													"src": "4765:26:1"
												}
											},
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "salt",
														"nameLocation": "4809:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "4801:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 584,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4801:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 589,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4843:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 590,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4851:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "4859:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 587,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4826:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4830:12:1",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4826:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4826:40:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 586,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4816:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4816:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4801:66:1"
											},
											{
												"expression": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 595,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "4923:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 598,
																"name": "implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "4956:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 599,
																"name": "salt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "4972:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 596,
																"name": "Clones",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "4930:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Clones_$84_$",
																	"typeString": "type(library Clones)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4937:18:1",
															"memberName": "cloneDeterministic",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "4930:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (address,bytes32) returns (address)"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4930:47:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4923:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "4923:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5010:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5018:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5026:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 604,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4993:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 603,
																"name": "IPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "4987:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPool_$1040_$",
																	"typeString": "type(contract IPool)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4987:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPool_$1040",
																"typeString": "contract IPool"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4999:10:1",
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1039,
														"src": "4987:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool) external"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4987:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 611,
												"nodeType": "ExpressionStatement",
												"src": "4987:46:1"
											},
											{
												"expression": {
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 612,
																	"name": "_getPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "5043:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
																	}
																},
																"id": 616,
																"indexExpression": {
																	"id": 613,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "5052:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5043:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(bool => address))"
																}
															},
															"id": 617,
															"indexExpression": {
																"id": 614,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "5060:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5043:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
																"typeString": "mapping(bool => address)"
															}
														},
														"id": 618,
														"indexExpression": {
															"id": 615,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5068:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5043:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 619,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "5078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5043:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "5043:39:1"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 622,
																	"name": "_getPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "5092:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(bool => address)))"
																	}
																},
																"id": 626,
																"indexExpression": {
																	"id": 623,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "5101:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5092:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bool_$_t_address_$_$",
																	"typeString": "mapping(address => mapping(bool => address))"
																}
															},
															"id": 627,
															"indexExpression": {
																"id": 624,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "5109:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5092:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bool_$_t_address_$",
																"typeString": "mapping(bool => address)"
															}
														},
														"id": 628,
														"indexExpression": {
															"id": 625,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5117:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5092:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 629,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "5127:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5092:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "5092:39:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5200:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 632,
															"name": "allPools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "5186:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5195:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5186:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5186:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "5186:19:1"
											},
											{
												"expression": {
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 638,
															"name": "_isPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "5215:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 640,
														"indexExpression": {
															"id": 639,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5223:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5215:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5231:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5215:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5215:20:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 645,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5262:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5270:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "stable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "5278:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 648,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "5286:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 649,
																"name": "allPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "5292:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5301:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5292:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "PoolCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "5250:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,bool,address,uint256)"
														}
													},
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5250:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 652,
												"nodeType": "EmitStatement",
												"src": "5245:63:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "4369:28:1",
										"text": "@inheritdoc IPoolFactory"
									},
									"functionSelector": "36bf95a0",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "4411:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "4430:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4422:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4422:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "4446:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4438:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "4459:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4454:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 530,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4454:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:45:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "4491:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4483:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:14:1"
									},
									"scope": 655,
									"src": "4402:913:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 656,
							"src": "246:5071:1",
							"usedErrors": [
								5,
								1078,
								1080,
								1082,
								1084,
								1086,
								1088,
								1090,
								1092,
								1094,
								1096
							],
							"usedEvents": [
								1046,
								1050,
								1054,
								1058,
								1070,
								1076
							]
						}
					],
					"src": "37:5280:1"
				},
				"id": 1
			},
			"contracts/aerodrome/interfaces/IPool.sol": {
				"ast": {
					"absolutePath": "contracts/aerodrome/interfaces/IPool.sol",
					"exportedSymbols": {
						"IPool": [
							1040
						]
					},
					"id": 1041,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 657,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1040,
							"linearizedBaseContracts": [
								1040
							],
							"name": "IPool",
							"nameLocation": "67:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "0a04d7fa",
									"id": 659,
									"name": "DepositsNotEqual",
									"nameLocation": "85:16:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "101:2:2"
									},
									"src": "79:25:2"
								},
								{
									"errorSelector": "438d3ade",
									"id": 661,
									"name": "BelowMinimumK",
									"nameLocation": "115:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:2"
									},
									"src": "109:22:2"
								},
								{
									"errorSelector": "154c51b8",
									"id": 663,
									"name": "FactoryAlreadySet",
									"nameLocation": "142:17:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "159:2:2"
									},
									"src": "136:26:2"
								},
								{
									"errorSelector": "bb55fd27",
									"id": 665,
									"name": "InsufficientLiquidity",
									"nameLocation": "173:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:2:2"
									},
									"src": "167:30:2"
								},
								{
									"errorSelector": "d226f9d4",
									"id": 667,
									"name": "InsufficientLiquidityMinted",
									"nameLocation": "208:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:2:2"
									},
									"src": "202:36:2"
								},
								{
									"errorSelector": "749383ad",
									"id": 669,
									"name": "InsufficientLiquidityBurned",
									"nameLocation": "249:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "276:2:2"
									},
									"src": "243:36:2"
								},
								{
									"errorSelector": "42301c23",
									"id": 671,
									"name": "InsufficientOutputAmount",
									"nameLocation": "290:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:2:2"
									},
									"src": "284:33:2"
								},
								{
									"errorSelector": "098fb561",
									"id": 673,
									"name": "InsufficientInputAmount",
									"nameLocation": "328:23:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:2"
									},
									"src": "322:32:2"
								},
								{
									"errorSelector": "1309a563",
									"id": 675,
									"name": "IsPaused",
									"nameLocation": "365:8:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:2"
									},
									"src": "359:17:2"
								},
								{
									"errorSelector": "290fa188",
									"id": 677,
									"name": "InvalidTo",
									"nameLocation": "387:9:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:2:2"
									},
									"src": "381:18:2"
								},
								{
									"errorSelector": "a932492f",
									"id": 679,
									"name": "K",
									"nameLocation": "410:1:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "411:2:2"
									},
									"src": "404:10:2"
								},
								{
									"errorSelector": "c5601293",
									"id": 681,
									"name": "NotEmergencyCouncil",
									"nameLocation": "425:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:2:2"
									},
									"src": "419:28:2"
								},
								{
									"anonymous": false,
									"eventSelector": "112c256902bf554b6ed882d2936687aaeb4225e8cd5b51303c90ca6cf43a8602",
									"id": 689,
									"name": "Fees",
									"nameLocation": "459:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "480:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "464:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "496:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "488:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "513:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "505:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:58:2"
									},
									"src": "453:69:2"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 697,
									"name": "Mint",
									"nameLocation": "533:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "554:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "538:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "570:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "562:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "587:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "579:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "579:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:58:2"
									},
									"src": "527:69:2"
								},
								{
									"anonymous": false,
									"eventSelector": "5d624aa9c148153ab3446c1b154f660ee7701e549fe9b62dab7171b1c80e6fa2",
									"id": 707,
									"name": "Burn",
									"nameLocation": "607:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "628:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "612:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "652:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "636:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "681:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "673:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:78:2"
									},
									"src": "601:89:2"
								},
								{
									"anonymous": false,
									"eventSelector": "b3e2773606abfd36b5bd91394b3a54d1398336c65005baf7bf7a05efeffaf75b",
									"id": 721,
									"name": "Swap",
									"nameLocation": "701:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "731:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "715:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "763:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "747:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "783:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "775:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "810:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "802:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "837:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "829:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "865:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "857:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:176:2"
									},
									"src": "695:187:2"
								},
								{
									"anonymous": false,
									"eventSelector": "cf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a",
									"id": 727,
									"name": "Sync",
									"nameLocation": "893:4:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "924:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "916:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:36:2"
									},
									"src": "887:47:2"
								},
								{
									"anonymous": false,
									"eventSelector": "865ca08d59f5cb456e85cd2f7ef63664ea4f73327414e9d8152c4158b0e94645",
									"id": 737,
									"name": "Claim",
									"nameLocation": "945:5:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "967:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "951:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "991:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "975:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1010:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1002:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1019:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:85:2"
									},
									"src": "939:97:2"
								},
								{
									"canonicalName": "IPool.Observation",
									"id": 744,
									"members": [
										{
											"constant": false,
											"id": 739,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1169:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 744,
											"src": "1161:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 738,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1161:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 741,
											"mutability": "mutable",
											"name": "reserve0Cumulative",
											"nameLocation": "1196:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 744,
											"src": "1188:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 740,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1188:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 743,
											"mutability": "mutable",
											"name": "reserve1Cumulative",
											"nameLocation": "1232:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 744,
											"src": "1224:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 742,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1224:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Observation",
									"nameLocation": "1139:11:2",
									"nodeType": "StructDefinition",
									"scope": 1040,
									"src": "1132:125:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1263:101:2",
										"text": "@notice Returns the decimal (dec), reserves (r), stable (st), and tokens (t) of token0 and token1"
									},
									"functionSelector": "392f37e9",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "metadata",
									"nameLocation": "1378:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1386:2:2"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "dec0",
												"nameLocation": "1444:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1436:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "dec1",
												"nameLocation": "1458:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1450:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "r0",
												"nameLocation": "1472:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1464:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "r1",
												"nameLocation": "1484:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1476:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1476:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "st",
												"nameLocation": "1493:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1488:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1488:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "t0",
												"nameLocation": "1505:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1497:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "t1",
												"nameLocation": "1517:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "1509:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:85:2"
									},
									"scope": 1040,
									"src": "1369:152:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "1527:76:2",
										"text": "@notice Claim accumulated but unclaimed fees (claimable0 and claimable1)"
									},
									"functionSelector": "d294f093",
									"id": 770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimFees",
									"nameLocation": "1617:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1626:2:2"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1647:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1656:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1646:18:2"
									},
									"scope": 1040,
									"src": "1608:57:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1671:36:2",
										"text": "@notice Returns [token0, token1]"
									},
									"functionSelector": "9d63848a",
									"id": 778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokens",
									"nameLocation": "1721:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1727:2:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1753:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1762:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1752:18:2"
									},
									"scope": 1040,
									"src": "1712:59:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "1777:69:2",
										"text": "@notice Address of token in the pool with the lower address value"
									},
									"functionSelector": "0dfe1681",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "1860:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:2:2"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "1892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1891:9:2"
									},
									"scope": 1040,
									"src": "1851:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "1907:71:2",
										"text": "@notice Address of token in the poool with the higher address value"
									},
									"functionSelector": "d21220a7",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "1992:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:2:2"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "2024:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:9:2"
									},
									"scope": 1040,
									"src": "1983:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "2039:42:2",
										"text": "@notice Address of linked PoolFees.sol"
									},
									"functionSelector": "33580959",
									"id": 796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolFees",
									"nameLocation": "2095:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2103:2:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2129:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:9:2"
									},
									"scope": 1040,
									"src": "2086:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2144:61:2",
										"text": "@notice Address of PoolFactory that created this contract"
									},
									"functionSelector": "c45a0155",
									"id": 802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "2219:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:2:2"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "2252:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2251:9:2"
									},
									"scope": 1040,
									"src": "2210:51:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "2267:66:2",
										"text": "@notice Capture oracle reading every 30 minutes (1800 seconds)"
									},
									"functionSelector": "e4463eb2",
									"id": 808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "periodSize",
									"nameLocation": "2347:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2357:2:2"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2383:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:9:2"
									},
									"scope": 1040,
									"src": "2338:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "2398:36:2",
										"text": "@notice Amount of token0 in pool"
									},
									"functionSelector": "443cb4bc",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserve0",
									"nameLocation": "2448:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:2:2"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "2482:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:9:2"
									},
									"scope": 1040,
									"src": "2439:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "2497:36:2",
										"text": "@notice Amount of token1 in pool"
									},
									"functionSelector": "5a76f25e",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserve1",
									"nameLocation": "2547:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2555:2:2"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "2581:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2580:9:2"
									},
									"scope": 1040,
									"src": "2538:52:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "2596:44:2",
										"text": "@notice Timestamp of last update to pool"
									},
									"functionSelector": "c5700a02",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "blockTimestampLast",
									"nameLocation": "2654:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2672:2:2"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2698:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:9:2"
									},
									"scope": 1040,
									"src": "2645:62:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "2713:60:2",
										"text": "@notice Cumulative of reserve0 factoring in time elapsed"
									},
									"functionSelector": "bf944dbc",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserve0CumulativeLast",
									"nameLocation": "2787:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2809:2:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2835:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2835:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2834:9:2"
									},
									"scope": 1040,
									"src": "2778:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "2850:60:2",
										"text": "@notice Cumulative of reserve1 factoring in time elapsed"
									},
									"functionSelector": "c245febc",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reserve1CumulativeLast",
									"nameLocation": "2924:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2946:2:2"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "2972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:9:2"
									},
									"scope": 1040,
									"src": "2915:66:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "2987:47:2",
										"text": "@notice Accumulated fees of token0 (global)"
									},
									"functionSelector": "32c0defd",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index0",
									"nameLocation": "3048:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3054:2:2"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3080:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3079:9:2"
									},
									"scope": 1040,
									"src": "3039:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3095:47:2",
										"text": "@notice Accumulated fees of token1 (global)"
									},
									"functionSelector": "bda39cad",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "index1",
									"nameLocation": "3156:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:2:2"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3188:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3188:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3187:9:2"
									},
									"scope": 1040,
									"src": "3147:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "3203:49:2",
										"text": "@notice Get an LP's relative index0 to index0"
									},
									"functionSelector": "9f767c88",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyIndex0",
									"nameLocation": "3266:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3279:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:9:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3311:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3311:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:9:2"
									},
									"scope": 1040,
									"src": "3257:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "3326:49:2",
										"text": "@notice Get an LP's relative index1 to index1"
									},
									"functionSelector": "205aabf1",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supplyIndex1",
									"nameLocation": "3389:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3402:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:9:2"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "3434:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3433:9:2"
									},
									"scope": 1040,
									"src": "3380:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "3449:83:2",
										"text": "@notice Amount of unclaimed, but claimable tokens from fees of token0 for an LP"
									},
									"functionSelector": "4d5a9f8a",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimable0",
									"nameLocation": "3546:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3557:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:9:2"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3589:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3589:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3588:9:2"
									},
									"scope": 1040,
									"src": "3537:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "3604:83:2",
										"text": "@notice Amount of unclaimed, but claimable tokens from fees of token1 for an LP"
									},
									"functionSelector": "a1ac4d13",
									"id": 882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimable1",
									"nameLocation": "3701:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3712:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3711:9:2"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "3744:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3743:9:2"
									},
									"scope": 1040,
									"src": "3692:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "3759:70:2",
										"text": "@notice Returns the value of K in the Pool, based on its reserves."
									},
									"functionSelector": "ee39e7a0",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getK",
									"nameLocation": "3843:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3847:2:2"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "3868:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3868:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:9:2"
									},
									"scope": 1040,
									"src": "3834:43:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "3883:124:2",
										"text": "@notice Set pool name\n         Only callable by Voter.emergencyCouncil()\n @param __name String of new name"
									},
									"functionSelector": "c47f0027",
									"id": 894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setName",
									"nameLocation": "4021:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "__name",
												"nameLocation": "4045:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4029:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4029:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:24:2"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1040,
									"src": "4012:50:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "4068:130:2",
										"text": "@notice Set pool symbol\n         Only callable by Voter.emergencyCouncil()\n @param __symbol String of new symbol"
									},
									"functionSelector": "b84c8246",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSymbol",
									"nameLocation": "4212:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "__symbol",
												"nameLocation": "4238:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "4222:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 896,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4222:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4221:26:2"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4256:0:2"
									},
									"scope": 1040,
									"src": "4203:54:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "4263:51:2",
										"text": "@notice Get the number of observations recorded"
									},
									"functionSelector": "ebeb31db",
									"id": 906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observationLength",
									"nameLocation": "4328:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4345:2:2"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4371:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:9:2"
									},
									"scope": 1040,
									"src": "4319:61:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "4386:56:2",
										"text": "@notice Get the value of the most recent observation"
									},
									"functionSelector": "8a7b8cf2",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastObservation",
									"nameLocation": "4456:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4471:2:2"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "4497:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Observation_$744_memory_ptr",
													"typeString": "struct IPool.Observation"
												},
												"typeName": {
													"id": 910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 909,
														"name": "Observation",
														"nameLocations": [
															"4497:11:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 744,
														"src": "4497:11:2"
													},
													"referencedDeclaration": 744,
													"src": "4497:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Observation_$744_storage_ptr",
														"typeString": "struct IPool.Observation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4496:20:2"
									},
									"scope": 1040,
									"src": "4447:70:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "4523:53:2",
										"text": "@notice True if pool is stable, false if volatile"
									},
									"functionSelector": "22be3de1",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stable",
									"nameLocation": "4590:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4596:2:2"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "4622:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4621:6:2"
									},
									"scope": 1040,
									"src": "4581:47:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "4634:101:2",
										"text": "@notice Produces the cumulative price using counterfactuals to save gas and avoid a call to sync."
									},
									"functionSelector": "1df8c717",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "currentCumulativePrices",
									"nameLocation": "4749:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4772:2:2"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "reserve0Cumulative",
												"nameLocation": "4830:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "4822:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "reserve1Cumulative",
												"nameLocation": "4858:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "4850:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "4886:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "4878:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:80:2"
									},
									"scope": 1040,
									"src": "4740:162:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "4908:200:2",
										"text": "@notice Provides twap price with user configured granularity, up to the full window size\n @param tokenIn .\n @param amountIn .\n @param granularity .\n @return amountOut ."
									},
									"functionSelector": "9e8cc04b",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "5122:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "5136:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5128:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5128:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5153:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5145:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "granularity",
												"nameLocation": "5171:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5163:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5163:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5127:56:2"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "5215:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "5207:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:19:2"
									},
									"scope": 1040,
									"src": "5113:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "5232:253:2",
										"text": "@notice Returns a memory set of TWAP prices\n         Same as calling sample(tokenIn, amountIn, points, 1)\n @param tokenIn .\n @param amountIn .\n @param points Number of points to return\n @return Array of TWAP prices"
									},
									"functionSelector": "5881c475",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prices",
									"nameLocation": "5499:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "5514:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5506:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5531:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5523:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "points",
												"nameLocation": "5549:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5541:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5541:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5505:51:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5580:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 950,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5580:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 951,
													"nodeType": "ArrayTypeName",
													"src": "5580:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5579:18:2"
									},
									"scope": 1040,
									"src": "5490:108:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "5604:277:2",
										"text": "@notice Same as prices with with an additional window argument.\n         Window = 2 means 2 * 30min (or 1 hr) between observations\n @param tokenIn .\n @param amountIn .\n @param points .\n @param window .\n @return Array of TWAP prices"
									},
									"functionSelector": "13345fe1",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sample",
									"nameLocation": "5895:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "5919:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "5911:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5911:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5944:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "5936:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5936:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "points",
												"nameLocation": "5970:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "5962:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5962:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "window",
												"nameLocation": "5994:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "5986:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5986:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5901:105:2"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6030:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 965,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6030:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 966,
													"nodeType": "ArrayTypeName",
													"src": "6030:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:18:2"
									},
									"scope": 1040,
									"src": "5886:162:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "6054:358:2",
										"text": "@notice This low-level function should be called from a contract which performs important safety checks\n @param amount0Out   Amount of token0 to send to `to`\n @param amount1Out   Amount of token1 to send to `to`\n @param to           Address to recieve the swapped output\n @param data         Additional calldata for flashloans"
									},
									"functionSelector": "022c0d9f",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "6426:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "6439:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "6431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "6459:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "6451:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6479:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "6471:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6498:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "6483:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6430:73:2"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6512:0:2"
									},
									"scope": 1040,
									"src": "6417:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "6519:341:2",
										"text": "@notice This low-level function should be called from a contract which performs important safety checks\n         standard uniswap v2 implementation\n @param to Address to receive token0 and token1 from burning the pool token\n @return amount0 Amount of token0 returned\n @return amount1 Amount of token1 returned"
									},
									"functionSelector": "89afcb44",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6874:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6887:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6879:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6879:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6878:12:2"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6934:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6926:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6908:34:2"
									},
									"scope": 1040,
									"src": "6865:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "6949:304:2",
										"text": "@notice This low-level function should be called by addLiquidity functions in Router.sol, which performs important safety checks\n         standard uniswap v2 implementation\n @param to           Address to receive the minted LP token\n @return liquidity   Amount of LP token minted"
									},
									"functionSelector": "6a627842",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "7267:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7280:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "7272:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7271:12:2"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "7310:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "7302:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7301:19:2"
									},
									"scope": 1040,
									"src": "7258:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "7327:174:2",
										"text": "@notice Update reserves and, on the first call per block, price accumulators\n @return _reserve0 .\n @return _reserve1 .\n @return _blockTimestampLast ."
									},
									"functionSelector": "0902f1ac",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "7515:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7526:2:2"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "7560:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "7552:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "7579:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "7571:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_blockTimestampLast",
												"nameLocation": "7598:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "7590:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7590:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7551:67:2"
									},
									"scope": 1040,
									"src": "7506:113:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "7625:177:2",
										"text": "@notice Get the amount of tokenOut given the amount of tokenIn\n @param amountIn Amount of token in\n @param tokenIn  Address of token\n @return Amount out"
									},
									"functionSelector": "f140a35a",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "7816:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7837:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7829:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "7855:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7828:35:2"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "7887:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7886:9:2"
									},
									"scope": 1040,
									"src": "7807:89:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "7902:101:2",
										"text": "@notice Force balances to match reserves\n @param to Address to receive any skimmed rewards"
									},
									"functionSelector": "bc25cf77",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "8017:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8030:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "8022:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8021:12:2"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8042:0:2"
									},
									"scope": 1040,
									"src": "8008:35:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "8049:44:2",
										"text": "@notice Force reserves to match balances"
									},
									"functionSelector": "fff6cae9",
									"id": 1029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "8107:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8111:2:2"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8122:0:2"
									},
									"scope": 1040,
									"src": "8098:25:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "8129:189:2",
										"text": "@notice Called on pool creation by PoolFactory\n @param _token0 Address of token0\n @param _token1 Address of token1\n @param _stable True if stable, false if volatile"
									},
									"functionSelector": "e4bbb5a8",
									"id": 1039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "8332:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "8351:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8343:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "8368:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8360:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8360:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_stable",
												"nameLocation": "8382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8377:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1035,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8342:48:2"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8399:0:2"
									},
									"scope": 1040,
									"src": "8323:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1041,
							"src": "57:8345:2",
							"usedErrors": [
								659,
								661,
								663,
								665,
								667,
								669,
								671,
								673,
								675,
								677,
								679,
								681
							],
							"usedEvents": [
								689,
								697,
								707,
								721,
								727,
								737
							]
						}
					],
					"src": "32:8370:2"
				},
				"id": 2
			},
			"contracts/aerodrome/interfaces/factories/IPoolFactory.sol": {
				"ast": {
					"absolutePath": "contracts/aerodrome/interfaces/factories/IPoolFactory.sol",
					"exportedSymbols": {
						"IPoolFactory": [
							1221
						]
					},
					"id": 1222,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1042,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPoolFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1221,
							"linearizedBaseContracts": [
								1221
							],
							"name": "IPoolFactory",
							"nameLocation": "67:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "5d0517e3a4eabea892d9750138cd21d4a6cf3b935b43d0598df7055f463819b2",
									"id": 1046,
									"name": "SetFeeManager",
									"nameLocation": "92:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeManager",
												"nameLocation": "114:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "106:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "106:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:20:3"
									},
									"src": "86:40:3"
								},
								{
									"anonymous": false,
									"eventSelector": "e02efb9e8f0fc21546730ab32d594f62d586e1bbb15bb5045edd0b1878a77b35",
									"id": 1050,
									"name": "SetPauser",
									"nameLocation": "137:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "155:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "147:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "146:16:3"
									},
									"src": "131:32:3"
								},
								{
									"anonymous": false,
									"eventSelector": "0d76538efc408318a051137c2720a9e82902acdbd46b802d488b74ca3a09a116",
									"id": 1054,
									"name": "SetPauseState",
									"nameLocation": "174:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "193:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "188:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "188:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:12:3"
									},
									"src": "168:32:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c6ff127433b785c51da9ae4088ee184c909b1a55b9afd82ae6c64224d3bc15d2",
									"id": 1058,
									"name": "SetVoter",
									"nameLocation": "211:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"indexed": false,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "228:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "220:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "220:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:15:3"
									},
									"src": "205:30:3"
								},
								{
									"anonymous": false,
									"eventSelector": "2128d88d14c80cb081c1252a5acff7a264671bf199ce226b53788fb26065005e",
									"id": 1070,
									"name": "PoolCreated",
									"nameLocation": "246:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "274:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "258:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "298:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "282:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"indexed": true,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "319:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "306:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "306:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "335:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "327:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "341:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:92:3"
									},
									"src": "240:110:3"
								},
								{
									"anonymous": false,
									"eventSelector": "ae468ce586f9a87660fdffc1448cee942042c16ae2f02046b134b5224f31936b",
									"id": 1076,
									"name": "SetCustomFee",
									"nameLocation": "361:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "390:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "374:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "404:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "396:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "373:35:3"
									},
									"src": "355:54:3"
								},
								{
									"errorSelector": "52dadcf9",
									"id": 1078,
									"name": "FeeInvalid",
									"nameLocation": "421:10:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:2:3"
									},
									"src": "415:19:3"
								},
								{
									"errorSelector": "cd4e6167",
									"id": 1080,
									"name": "FeeTooHigh",
									"nameLocation": "445:10:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "455:2:3"
									},
									"src": "439:19:3"
								},
								{
									"errorSelector": "2083cd40",
									"id": 1082,
									"name": "InvalidPool",
									"nameLocation": "469:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "480:2:3"
									},
									"src": "463:20:3"
								},
								{
									"errorSelector": "f5d267eb",
									"id": 1084,
									"name": "NotFeeManager",
									"nameLocation": "494:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "507:2:3"
									},
									"src": "488:22:3"
								},
								{
									"errorSelector": "492f6781",
									"id": 1086,
									"name": "NotPauser",
									"nameLocation": "521:9:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:3"
									},
									"src": "515:18:3"
								},
								{
									"errorSelector": "c18384c1",
									"id": 1088,
									"name": "NotVoter",
									"nameLocation": "544:8:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:2:3"
									},
									"src": "538:17:3"
								},
								{
									"errorSelector": "03119322",
									"id": 1090,
									"name": "PoolAlreadyExists",
									"nameLocation": "566:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:2:3"
									},
									"src": "560:26:3"
								},
								{
									"errorSelector": "367558c3",
									"id": 1092,
									"name": "SameAddress",
									"nameLocation": "597:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:3"
									},
									"src": "591:20:3"
								},
								{
									"errorSelector": "af13986d",
									"id": 1094,
									"name": "ZeroFee",
									"nameLocation": "622:7:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:2:3"
									},
									"src": "616:16:3"
								},
								{
									"errorSelector": "d92e233d",
									"id": 1096,
									"name": "ZeroAddress",
									"nameLocation": "643:11:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:3"
									},
									"src": "637:20:3"
								},
								{
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "663:65:3",
										"text": "@notice returns the number of pools created from this factory"
									},
									"functionSelector": "efde4e64",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPoolsLength",
									"nameLocation": "742:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:2:3"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "782:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:9:3"
									},
									"scope": 1221,
									"src": "733:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "797:69:3",
										"text": "@notice Is a valid pool created by this factory.\n @param ."
									},
									"functionSelector": "5b16ebb7",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPool",
									"nameLocation": "880:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "895:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "887:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "886:14:3"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "924:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "924:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:6:3"
									},
									"scope": 1221,
									"src": "871:59:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "936:162:3",
										"text": "@notice Return address of pool created by this factory\n @param tokenA .\n @param tokenB .\n @param stable True if stable, false if volatile"
									},
									"functionSelector": "79bc57d5",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "1112:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1128:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1120:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1144:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1136:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "1157:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1152:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1152:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:45:3"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1188:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:9:3"
									},
									"scope": 1221,
									"src": "1103:94:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "1203:256:3",
										"text": "@notice Support for v3-style pools which wraps around getPool(tokenA,tokenB,stable)\n @dev fee is converted to stable boolean.\n @param tokenA .\n @param tokenB .\n @param fee  1 if stable, 0 if volatile, else returns address(0)"
									},
									"functionSelector": "1698ee82",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "1473:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1489:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1481:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1505:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1497:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1520:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1513:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1128,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1513:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:44:3"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1548:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:9:3"
									},
									"scope": 1221,
									"src": "1464:93:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "1563:263:3",
										"text": "@dev Only called once to set to Voter.sol - Voter does not have a function\n      to call this contract method, so once set it's immutable.\n      This also follows convention of setVoterAndDistributor() in VotingEscrow.sol\n @param _voter ."
									},
									"functionSelector": "4bc2a657",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setVoter",
									"nameLocation": "1840:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "1857:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1849:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1848:16:3"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1873:0:3"
									},
									"scope": 1221,
									"src": "1831:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d88af4a",
									"id": 1145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPauser",
									"nameLocation": "1889:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "_pauser",
												"nameLocation": "1907:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1899:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1898:17:3"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:0:3"
									},
									"scope": 1221,
									"src": "1880:45:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cdb88ad1",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPauseState",
									"nameLocation": "1940:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "1959:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "1954:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1954:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1953:13:3"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:3"
									},
									"scope": 1221,
									"src": "1931:45:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "472d35b9",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeManager",
									"nameLocation": "1991:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_feeManager",
												"nameLocation": "2013:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "2005:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2004:21:3"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:3"
									},
									"scope": 1221,
									"src": "1982:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2041:212:3",
										"text": "@notice Set default fee for stable and volatile pools.\n @dev Throws if higher than maximum fee.\n      Throws if fee is zero.\n @param _stable Stable or volatile pool.\n @param _fee ."
									},
									"functionSelector": "e1f76b44",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFee",
									"nameLocation": "2267:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_stable",
												"nameLocation": "2279:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2274:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1157,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2274:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2288:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2273:28:3"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:3"
									},
									"scope": 1221,
									"src": "2258:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "2317:128:3",
										"text": "@notice Set overriding fee for a pool from the default\n @dev A custom fee of zero means the default fee will be used."
									},
									"functionSelector": "d49466a8",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCustomFee",
									"nameLocation": "2459:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "2480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "2495:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2487:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2471:29:3"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2509:0:3"
									},
									"scope": 1221,
									"src": "2450:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "2516:64:3",
										"text": "@notice Returns fee for a pool, as custom fees are possible."
									},
									"functionSelector": "cc56b2c5",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFee",
									"nameLocation": "2594:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "2609:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2601:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2601:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_stable",
												"nameLocation": "2621:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2616:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2616:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2600:29:3"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2653:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:3"
									},
									"scope": 1221,
									"src": "2585:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "2668:186:3",
										"text": "@notice Create a pool given two tokens and if they're stable/volatile\n @dev token order does not matter\n @param tokenA .\n @param tokenB .\n @param stable ."
									},
									"functionSelector": "36bf95a0",
									"id": 1193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "2868:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2887:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2879:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2879:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2903:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2895:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "stable",
												"nameLocation": "2916:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2911:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2911:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2878:45:3"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2950:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2942:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2941:14:3"
									},
									"scope": 1221,
									"src": "2859:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "2962:286:3",
										"text": "@notice Support for v3-style pools which wraps around createPool(tokena,tokenB,stable)\n @dev fee is converted to stable boolean\n @dev token order does not matter\n @param tokenA .\n @param tokenB .\n @param fee 1 if stable, 0 if volatile, else revert"
									},
									"functionSelector": "a1671295",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3262:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3281:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3273:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3297:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3289:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3312:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3305:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1199,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3305:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:44:3"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3343:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "3335:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3335:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3334:14:3"
									},
									"scope": 1221,
									"src": "3253:96:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b187bd26",
									"id": 1210,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPaused",
									"nameLocation": "3364:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3372:2:3"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3398:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3398:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3397:6:3"
									},
									"scope": 1221,
									"src": "3355:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46c96aac",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "voter",
									"nameLocation": "3419:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3424:2:3"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3450:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:9:3"
									},
									"scope": 1221,
									"src": "3410:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c60da1b",
									"id": 1220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "3474:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3488:2:3"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3514:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3514:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:9:3"
									},
									"scope": 1221,
									"src": "3465:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1222,
							"src": "57:3468:3",
							"usedErrors": [
								1078,
								1080,
								1082,
								1084,
								1086,
								1088,
								1090,
								1092,
								1094,
								1096
							],
							"usedEvents": [
								1046,
								1050,
								1054,
								1058,
								1070,
								1076
							]
						}
					],
					"src": "32:3493:3"
				},
				"id": 3
			}
		}
	}
}